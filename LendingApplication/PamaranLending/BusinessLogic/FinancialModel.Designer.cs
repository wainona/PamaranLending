//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ADDENDUM_REFERENCE_AGREEMEN", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Agreement), "Addendum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Addendum), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ADDENDUM_REFERENCE_AGREEMEN2", "AgreementItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.AgreementItem), "Addendum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Addendum), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_ADDRESST", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.AddressType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Address), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_ASSET", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Asset), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Address), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_PARTY", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Party), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Address), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ELECTRON_REFERENCE_ADDRESS", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Address), "ElectronicAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ElectronicAddress), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_ADDRESS", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Address), "PostalAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PostalAddress), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_TELECOMM_REFERENCE_ADDRESS", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Address), "TelecommunicationsNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.TelecommunicationsNumber), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANADJU_REFERENCE_ADJUSTME", "AdjustmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.AdjustmentType), "LoanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAdjustment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_ADJUSTME", "AdjustmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.AdjustmentType), "ReceivableAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceivableAdjustment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN2", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Agreement), "AgreementRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AgreementRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Agreement), "Agreement1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Agreement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN4", "AgreementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.AgreementType), "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Agreement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN5", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Agreement), "AgreementItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AgreementItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_APPLICAT", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Application), "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Agreement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_COMPROMI_REFERENCE_AGREEMEN", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Agreement), "CompromiseAgreement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.CompromiseAgreement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_AGREEMEN", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Agreement), "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANAGRE_REFERENCE_AGREEMEN", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Agreement), "LoanAgreement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanAgreement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANDISB_REFERENCE_AGREEMEN", "Agreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Agreement), "LoanDisbursementVcr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanDisbursementVcr), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "AgreementRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AgreementRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.AmortizationSchedule), "AmortizationScheduleItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AmortizationScheduleItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.AmortizationSchedule), "AmortizationSchedule1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AmortizationSchedule), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_LOANAGRE", "LoanAgreement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAgreement), "AmortizationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AmortizationSchedule), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_APPLICAT", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Application), "ApplicationItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ApplicationItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_APPLICAT2", "ApplicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ApplicationType), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Application), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ChequeApplicationAssoc_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Application), "ChequeApplicationAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ChequeApplicationAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_APPLICAT", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Application), "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_APPLICAT", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Application), "PettyCashLoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PettyCashLoanApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_PRODUCTF", "ProductFeatureApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductFeatureApplicability), "ApplicationItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ApplicationItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ASSET_REFERENCE_ASSETTYP", "AssetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.AssetType), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Asset), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ASSET_REFERENCE_LOANAPPL", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplication), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Asset), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ASSETAPP_REFERENCE_ASSET", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Asset), "AssetAppraisal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AssetAppraisal), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ASSETROL_REFERENCE_ASSET", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Asset), "AssetRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AssetRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_ASSET", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Asset), "BankAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.BankAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LAND_REFERENCE_ASSET", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Asset), "Land", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Land), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Machine_Asset", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Asset), "Machine", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Machine), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Vehicle_Asset1", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Asset), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Vehicle), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ASSETAPP_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "AssetAppraisal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AssetAppraisal), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ASSETROL_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "AssetRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.AssetRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANK_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Bank), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANKSTAT_REFERENCE_BANK", "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Bank), "BankStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.BankStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_BANKACCO", "BankAccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.BankAccountType), "BankAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.BankAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_LOANAPPL", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanApplication), "BankAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.BankAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PartyRole), "BankAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.BankAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.BankStatusType), "BankStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.BankStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CashOnVault_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "CashOnVault", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CashOnVault), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CashOnVault_PartyRole", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "CashOnVault", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CashOnVault), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Cheque_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Cheque), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CHEQUE_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Cheque), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ChequeApplicationAssoc_Cheque", "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Cheque), "ChequeApplicationAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ChequeApplicationAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ChequeLoanAssoc_Cheque", "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Cheque), "ChequeLoanAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ChequeLoanAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CHEQUEST_REFERENCE_CHEQUE", "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Cheque), "ChequeStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ChequeStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ChequeLoanAssoc_LoanAccount", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "ChequeLoanAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ChequeLoanAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ChequeStatusType), "ChequeStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ChequeStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ClassificationType_DistrictType", "DistrictType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.DistrictType), "ClassificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ClassificationType), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CLASSIFI", "ClassificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ClassificationType), "CustomerClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerClassification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ControlNumbers_FormType", "FormType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FormType), "ControlNumbers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ControlNumber), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ControlNumbers_LoanApplication", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanApplication), "ControlNumbers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ControlNumber), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ControlNumbers_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Payment), "ControlNumbers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ControlNumber), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_COUNTRY", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Country), "PostalAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PostalAddress), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_COVDetails_COVTransactionType", "COVTransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.COVTransactionType), "COVTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.COVTransaction), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_COVDetails_PartyRole", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "COVTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.COVTransaction), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_COVTransaction_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "COVTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.COVTransaction), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CTC_REFERENCE_TAXPAYER", "Taxpayer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Taxpayer), "Ctc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Ctc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ExchangeRate_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "ExchangeRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ExchangeRate), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ExchangeRate_Currency1", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "ExchangeRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ExchangeRate), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchange_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "ForeignExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchange), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchange_Currency1", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "ForeignExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchange), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchangeAmount_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "ForExDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForExDetail), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PaymentCurrencyAssoc_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Currency), "PaymentCurrencyAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PaymentCurrencyAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOME_", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Customer), "CustomerCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerCategory), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Customer), "CustomerClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerClassification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER2", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Customer), "CustomerSourceOfIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerSourceOfIncome), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER3", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Customer), "CustomerStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Customer), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.CustomerCategoryType), "CustomerCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerCategory), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_SOURCEOF", "SourceOfIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.SourceOfIncome), "CustomerSourceOfIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerSourceOfIncome), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_CUSTOMER", "CustomerStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.CustomerStatusType), "CustomerStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.CustomerStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.DemandLetter), "DemandLetterStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DemandLetterStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_LOANACCO", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "DemandLetter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DemandLetter), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.DemandLetterStatusType), "DemandLetterStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DemandLetterStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Denomination_ForeignExchangeAmount", "ForExDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ForExDetail), "Denomination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Denomination), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Disbursement), "DisbursementItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DisbursementItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE5", "DisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.DisbursementType), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Disbursement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_PAYMENT", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Disbursement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ENCASHME_REFERENCE_DISBURSE", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Disbursement), "Encashment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Encashment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANDISB_REFERENCE_DISBURSE2", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Disbursement), "LoanDisbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanDisbursement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Receivable_Disbursement", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Disbursement), "Receivable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Receivable), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.DisbursementVcrStatusType), "DisbursementVcrStatTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DisbursementVcrStatTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.DisbursementVcrStatusType), "DisbursementVcrStatTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DisbursementVcrStatTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.DisbursementVcrStatusType), "DisbursementVcrStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DisbursementVcrStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_LOANDISB", "LoanDisbursementVcr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanDisbursementVcr), "DisbursementVcrStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DisbursementVcrStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_DOCUMENT_REFERENCE_SUBMITTE", "SubmittedDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.SubmittedDocument), "DocumentPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.DocumentPage), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSON_REFERENCE_EDUCATTA", "EducAttainmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.EducAttainmentType), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Person), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ElectronicAddressType), "ElectronicAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ElectronicAddress), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_EMPLOYEE_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Employee), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_EMPLOYME_REFERENCE_PARTYREL", "PartyRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRelationship), "Employment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Employment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ExchangeRate_ExchangeRateType", "ExchangeRateType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ExchangeRateType), "ExchangeRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ExchangeRate), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchange_ExchangeRate", "ExchangeRate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ExchangeRate), "ForeignExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchange), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FEE_REFERENCE_PRODUCTF", "ProductFeatureApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductFeatureApplicability), "Fee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Fee), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FeePayment_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "FeePayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FeePayment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinAcctTran), "FinAcctTransRel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTransRel), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinAcctTran), "FinAcctTransRel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTransRel), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.FinAcctTran), "FinAcctTransTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTransTask), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINANCIA", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialAccount), "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTran), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINLACCT", "FinlAcctTransType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinlAcctTransType), "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTran), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_PAYMENT", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Payment), "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTran), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINACCTT", "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.FinAcctTran), "FinancialAcctNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAcctNotification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINLACCT_REFERENCE_FINACCTT", "FinAcctTrans", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinAcctTran), "FinlAcctTransnStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinlAcctTransnStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRelType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinAcctTransRelType), "FinAcctTransRel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTransRel), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinAcctTransStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinAcctTransStatusType), "FinlAcctTransnStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinlAcctTransnStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_TRANSACT", "TransactionTaskType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.TransactionTaskType), "FinAcctTransTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTransTask), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.UnitOfMeasure), "FinAcctTransTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinAcctTransTask), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialAccount), "FinancialAccountRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccountRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.FinancialAccount), "FinancialAccountProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccountProduct), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialAccountType), "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.FinancialAccount), "FinancialAccount1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANACCO_REFERENCE_FINANCIA", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialAccount), "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_FINANCIA2", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialAccount), "LoanModificationPrevItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModificationPrevItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialProduct), "FinancialAccountProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccountProduct), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "FinancialAccountRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccountRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotificationTyp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.FinancialAcctNotificationTyp), "FinancialAcctNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAcctNotification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA2", "FinancialProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialProduct), "ProductFeatureApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductFeatureApplicability), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA3", "FinancialProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialProduct), "ProductCategoryClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCategoryClassification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA4", "FinancialProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialProduct), "ProductStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCTR_REFERENCE_FINANCIA", "FinancialProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FinancialProduct), "ProductRequiredDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductRequiredDocument), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.FinlAcctTransType), "FinlAcctTransType1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinlAcctTransType), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchange_PartyRole", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "ForeignExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchange), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchange_PartyRole1", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "ForeignExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchange), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ForeignExchange), "ForeignExchangeDetailAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchangeDetailAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchangeDetailAssoc_ForExDetail", "ForExDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ForExDetail), "ForeignExchangeDetailAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForeignExchangeDetailAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForExCheque_ForeignExchangeAmount", "ForExDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ForExDetail), "ForExCheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForExCheque), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForExCheque_PartyRole", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "ForExCheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForExCheque), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForeignExchangeAmount_PaymentMethodType", "PaymentMethodType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PaymentMethodType), "ForExDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForExDetail), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ForExDetail_ForExDetail", "ForExDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ForExDetail), "ForExDetail1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ForExDetail), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FormDetails_FormType", "FormType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.FormType), "FormDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FormDetail), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FormDetails_LoanApplication", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanApplication), "FormDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FormDetail), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_FormDetails_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Payment), "FormDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FormDetail), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSON_REFERENCE_GENDERTY", "GenderType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.GenderType), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Person), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnershipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.HomeOwnershipType), "HomeOwnership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.HomeOwnership), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_HOMEOWNE_REFERENCE_PERSON", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Person), "HomeOwnership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.HomeOwnership), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSONID_REFERENCE_IDENTIFI", "IdentificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.IdentificationType), "PersonIdentification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PersonIdentification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_InterestItems_LoanAccount", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "InterestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.InterestItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LoanAccount_InterestType", "InterestType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.InterestType), "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LAND_REFERENCE_LANDTYPE", "LandType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LandType), "Land", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Land), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LAND_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "Land", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Land), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanAccount), "LoanAccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAccountStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANADJU_REFERENCE_LOANACCO", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "LoanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAdjustment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANREAV_REFERENCE_LOANACCO", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "LoanReAvailment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanReAvailment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANSTAT_REFERENCE_LOANACCO", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "LoanStatement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanStatement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PaymentApplication_LoanAccount", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanAccount), "PaymentApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PaymentApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_LOANACCO", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanAccount), "Receivable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Receivable), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RELEASES_REFERENCE_LOANACCO", "LoanAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccount), "ReleaseStatement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReleaseStatement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccountStatusType), "LoanAccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAccountStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccountStatusType), "LoanAccountStatusTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAccountStatusTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanAccountStatusType), "LoanAccountStatusTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanAccountStatusTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplication), "LoanApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplication), "LoanApplicationRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplicationRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_UNIT_OF_2", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplication), "LoanApplicationFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplicationFee), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANREAV_REFERENCE_LOANAPPL", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplication), "LoanReAvailment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanReAvailment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_LOANAPPL", "LoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplication), "SubmittedDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SubmittedDocument), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "LoanApplicationRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplicationRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanApplicationStatusType), "LoanApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanDisbursementType), "LoanDisbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanDisbursement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RELEASES_REFERENCE_LOANDISB", "LoanDisbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanDisbursement), "ReleaseStatement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReleaseStatement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_LOANDISB", "LoanDisbursementVcr", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanDisbursementVcr), "PaymentApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PaymentApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanModification), "LoanModificationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModificationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanModification), "LoanModificationPrevItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModificationPrevItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanModificationType), "LoanModification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_PARTYROL2", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "LoanModification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanModificationStatusType), "LoanModificationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModificationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PartyRole), "LoanModificationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModificationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LoanPayment_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "LoanPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanPayment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.LoanPayment), "LoanStatement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanStatement), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANTERM_REFERENCE_PRODUCTF", "ProductFeatureApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductFeatureApplicability), "LoanTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.LoanTerm), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_LOANTERM_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "LoanTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanTerm), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_MARITALS_REFERENCE_MARITALS", "MaritalStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.MaritalStatusType), "MaritalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.MaritalStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_MARITALS_REFERENCE_PERSON", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Person), "MaritalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.MaritalStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSON_REFERENCE_NATIONAL", "NationalityType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.NationalityType), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Person), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ORGANIZA_REFERENCE_ORGANIZA", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.OrganizationType), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Organization), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ORGANIZA_REFERENCE_PARTY", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Party), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Organization), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTY_REFERENCE_PARTYTYP", "PartyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyType), "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Party), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_PARTY", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Party), "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PartyRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSON_REFERENCE_PARTY", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Party), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Person), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "PartyRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PartyRelationship), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRelType), "PartyRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PartyRelationship), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTYREL_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "PartyRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PartyRelationship), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_PARTYROL", "PartyRoleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRoleType), "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PartyRole), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PARTY_RO2", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Payment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PartyRole), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Payment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "ReceivableAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceivableAdjustment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_TAXPAYER_REFERENCE_PARTYROL", "PartyRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PartyRole), "Taxpayer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Taxpayer), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_ROLETYPE", "RoleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.RoleType), "PartyRoleType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PartyRoleType), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENT", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Payment), "Payment1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Payment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENTM", "PaymentMethodType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PaymentMethodType), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Payment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENTT", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PaymentType), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Payment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Payment_SpecificPaymentType", "SpecificPaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.SpecificPaymentType), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Payment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_PAYMENT", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "PaymentApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PaymentApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PaymentCurrencyAssoc_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "PaymentCurrencyAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PaymentCurrencyAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ReceiptPaymentAssoc_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Payment), "ReceiptPaymentAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceiptPaymentAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_RECEIVAB", "Receivable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Receivable), "PaymentApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PaymentApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSONID_REFERENCE_PERSON", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Person), "PersonIdentification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PersonIdentification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSONNA_REFERENCE_PERSON", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Person), "PersonName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PersonName), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SPECIMEN_REFERENCE_PERSON", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Person), "SpecimenSignature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SpecimenSignature), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_USERACCO_REFERENCE_PERSON", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Person), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.UserAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PERSONNA_REFERENCE_PERSONNA", "PersonNameType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PersonNameType), "PersonName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PersonName), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PettyCashLoanApplication), "PettyCashLoanItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PettyCashLoanItem), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PettyCashLoanApplication), "PettyCashLoanApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PettyCashLoanApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "PettyCashLoanApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PettyCashLoanApplication), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanAppStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PettyCashLoanAppStatusType), "PettyCashLoanApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PettyCashLoanApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PettyCashLoanAppStatusType), "PettyCashLoanAppStatusTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PettyCashLoanAppStatusTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.PettyCashLoanAppStatusType), "PettyCashLoanAppStatusTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PettyCashLoanAppStatusTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.PostalAddressType), "PostalAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.PostalAddress), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ProductCategory), "ProductCategoryFeatureFunctionalApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCategoryFeatureFunctionalApplicability), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductCategory), "ProductCategoryRollup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCategoryRollup), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ProductCategory), "ProductCategoryRollup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCategoryRollup), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductCategory), "ProductCategoryClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCategoryClassification), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductCategory), "ProductCatFeatApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCatFeatApplicability), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCatFeatApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ProductCatFeatApplicability), "ProductCategoryFeatureFunctionalApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCategoryFeatureFunctionalApplicability), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductFeature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductFeature), "ProductCatFeatApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductCatFeatApplicability), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductFeature), "ProductFeatureApplicability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductFeatureApplicability), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeatureCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductFeatureCategory), "ProductFeature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductFeature), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCTR_REFERENCE_REQUIRED", "RequiredDocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.RequiredDocumentType), "ProductRequiredDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductRequiredDocument), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_PRODUCTR", "ProductRequiredDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductRequiredDocument), "SubmittedDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SubmittedDocument), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ProductStatusType), "ProductStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ProductStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ReceiptPaymentAssoc_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Receipt), "ReceiptPaymentAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceiptPaymentAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ReceiptStatus_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Receipt), "ReceiptStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceiptStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SalaryReceipt_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Receipt), "SalaryReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.SalaryReceipt), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ReceiptStatusType), "ReceiptStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceiptStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ReceiptStatusType), "ReceiptStatusTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceiptStatusTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ReceiptStatusType), "ReceiptStatusTypeAssoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceiptStatusTypeAssoc), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB2", "ReceivableType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.ReceivableType), "Receivable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Receivable), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB3", "Receivable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.Receivable), "ReceivableAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceivableAdjustment), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB4", "Receivable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.Receivable), "ReceivableStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceivableStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.ReceivableStatusType), "ReceivableStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.ReceivableStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.RoleType), "RoleType1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.RoleType), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.SubmittedDocument), "SubmittedDocumentStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SubmittedDocumentStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.SubmittedDocumentStatusType), "SubmittedDocumentStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SubmittedDocumentStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSettingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.SystemSettingType), "SystemSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SystemSetting), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_SYSTEMSE_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.UnitOfMeasure), "SystemSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.SystemSetting), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumberType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.TelecommunicationsNumberType), "TelecommunicationsNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.TelecommunicationsNumber), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_TIME_UNI_REFERENCE_UNIT_OF_2", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "TimeUnitConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.TimeUnitConversion), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_TIMEUNIT_REFERENCE_UNITOFME", "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasure), "TimeUnitConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.TimeUnitConversion), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasureType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UnitOfMeasureType), "UnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.UnitOfMeasure), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessLogic.UnitOfMeasureType), "UnitOfMeasureType1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.UnitOfMeasureType), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UserAccount), "UserAccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.UserAccountStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_UserAccount_UserAccountType", "UserAccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UserAccountType), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.UserAccount), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.UserAccountStatusType), "UserAccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.UserAccountStatu), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "FK_Vehicle_VehicleType", "VehicleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessLogic.VehicleType), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.Vehicle), true)]
[assembly: EdmRelationshipAttribute("FinancialModel", "LoanModificationNewItems", "FinancialAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.FinancialAccount), "LoanModificationPrevItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessLogic.LoanModificationPrevItem))]

#endregion

namespace BusinessLogic
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FinancialEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FinancialEntities object using the connection string found in the 'FinancialEntities' section of the application configuration file.
        /// </summary>
        public FinancialEntities() : base("name=FinancialEntities", "FinancialEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FinancialEntities object.
        /// </summary>
        public FinancialEntities(string connectionString) : base(connectionString, "FinancialEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FinancialEntities object.
        /// </summary>
        public FinancialEntities(EntityConnection connection) : base(connection, "FinancialEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Addendum> Addenda
        {
            get
            {
                if ((_Addenda == null))
                {
                    _Addenda = base.CreateObjectSet<Addendum>("Addenda");
                }
                return _Addenda;
            }
        }
        private ObjectSet<Addendum> _Addenda;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjustmentType> AdjustmentTypes
        {
            get
            {
                if ((_AdjustmentTypes == null))
                {
                    _AdjustmentTypes = base.CreateObjectSet<AdjustmentType>("AdjustmentTypes");
                }
                return _AdjustmentTypes;
            }
        }
        private ObjectSet<AdjustmentType> _AdjustmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agreement> Agreements
        {
            get
            {
                if ((_Agreements == null))
                {
                    _Agreements = base.CreateObjectSet<Agreement>("Agreements");
                }
                return _Agreements;
            }
        }
        private ObjectSet<Agreement> _Agreements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgreementItem> AgreementItems
        {
            get
            {
                if ((_AgreementItems == null))
                {
                    _AgreementItems = base.CreateObjectSet<AgreementItem>("AgreementItems");
                }
                return _AgreementItems;
            }
        }
        private ObjectSet<AgreementItem> _AgreementItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgreementRole> AgreementRoles
        {
            get
            {
                if ((_AgreementRoles == null))
                {
                    _AgreementRoles = base.CreateObjectSet<AgreementRole>("AgreementRoles");
                }
                return _AgreementRoles;
            }
        }
        private ObjectSet<AgreementRole> _AgreementRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgreementType> AgreementTypes
        {
            get
            {
                if ((_AgreementTypes == null))
                {
                    _AgreementTypes = base.CreateObjectSet<AgreementType>("AgreementTypes");
                }
                return _AgreementTypes;
            }
        }
        private ObjectSet<AgreementType> _AgreementTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AmortizationSchedule> AmortizationSchedules
        {
            get
            {
                if ((_AmortizationSchedules == null))
                {
                    _AmortizationSchedules = base.CreateObjectSet<AmortizationSchedule>("AmortizationSchedules");
                }
                return _AmortizationSchedules;
            }
        }
        private ObjectSet<AmortizationSchedule> _AmortizationSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AmortizationScheduleItem> AmortizationScheduleItems
        {
            get
            {
                if ((_AmortizationScheduleItems == null))
                {
                    _AmortizationScheduleItems = base.CreateObjectSet<AmortizationScheduleItem>("AmortizationScheduleItems");
                }
                return _AmortizationScheduleItems;
            }
        }
        private ObjectSet<AmortizationScheduleItem> _AmortizationScheduleItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationItem> ApplicationItems
        {
            get
            {
                if ((_ApplicationItems == null))
                {
                    _ApplicationItems = base.CreateObjectSet<ApplicationItem>("ApplicationItems");
                }
                return _ApplicationItems;
            }
        }
        private ObjectSet<ApplicationItem> _ApplicationItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationType> ApplicationTypes
        {
            get
            {
                if ((_ApplicationTypes == null))
                {
                    _ApplicationTypes = base.CreateObjectSet<ApplicationType>("ApplicationTypes");
                }
                return _ApplicationTypes;
            }
        }
        private ObjectSet<ApplicationType> _ApplicationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Asset> Assets
        {
            get
            {
                if ((_Assets == null))
                {
                    _Assets = base.CreateObjectSet<Asset>("Assets");
                }
                return _Assets;
            }
        }
        private ObjectSet<Asset> _Assets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetAppraisal> AssetAppraisals
        {
            get
            {
                if ((_AssetAppraisals == null))
                {
                    _AssetAppraisals = base.CreateObjectSet<AssetAppraisal>("AssetAppraisals");
                }
                return _AssetAppraisals;
            }
        }
        private ObjectSet<AssetAppraisal> _AssetAppraisals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetRole> AssetRoles
        {
            get
            {
                if ((_AssetRoles == null))
                {
                    _AssetRoles = base.CreateObjectSet<AssetRole>("AssetRoles");
                }
                return _AssetRoles;
            }
        }
        private ObjectSet<AssetRole> _AssetRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetType> AssetTypes
        {
            get
            {
                if ((_AssetTypes == null))
                {
                    _AssetTypes = base.CreateObjectSet<AssetType>("AssetTypes");
                }
                return _AssetTypes;
            }
        }
        private ObjectSet<AssetType> _AssetTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Bank>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Bank> _Banks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankAccount> BankAccounts
        {
            get
            {
                if ((_BankAccounts == null))
                {
                    _BankAccounts = base.CreateObjectSet<BankAccount>("BankAccounts");
                }
                return _BankAccounts;
            }
        }
        private ObjectSet<BankAccount> _BankAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankAccountType> BankAccountTypes
        {
            get
            {
                if ((_BankAccountTypes == null))
                {
                    _BankAccountTypes = base.CreateObjectSet<BankAccountType>("BankAccountTypes");
                }
                return _BankAccountTypes;
            }
        }
        private ObjectSet<BankAccountType> _BankAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankStatu> BankStatus
        {
            get
            {
                if ((_BankStatus == null))
                {
                    _BankStatus = base.CreateObjectSet<BankStatu>("BankStatus");
                }
                return _BankStatus;
            }
        }
        private ObjectSet<BankStatu> _BankStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankStatusType> BankStatusTypes
        {
            get
            {
                if ((_BankStatusTypes == null))
                {
                    _BankStatusTypes = base.CreateObjectSet<BankStatusType>("BankStatusTypes");
                }
                return _BankStatusTypes;
            }
        }
        private ObjectSet<BankStatusType> _BankStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillAmount> BillAmounts
        {
            get
            {
                if ((_BillAmounts == null))
                {
                    _BillAmounts = base.CreateObjectSet<BillAmount>("BillAmounts");
                }
                return _BillAmounts;
            }
        }
        private ObjectSet<BillAmount> _BillAmounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CashOnVault> CashOnVaults
        {
            get
            {
                if ((_CashOnVaults == null))
                {
                    _CashOnVaults = base.CreateObjectSet<CashOnVault>("CashOnVaults");
                }
                return _CashOnVaults;
            }
        }
        private ObjectSet<CashOnVault> _CashOnVaults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cheque> Cheques
        {
            get
            {
                if ((_Cheques == null))
                {
                    _Cheques = base.CreateObjectSet<Cheque>("Cheques");
                }
                return _Cheques;
            }
        }
        private ObjectSet<Cheque> _Cheques;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChequeApplicationAssoc> ChequeApplicationAssocs
        {
            get
            {
                if ((_ChequeApplicationAssocs == null))
                {
                    _ChequeApplicationAssocs = base.CreateObjectSet<ChequeApplicationAssoc>("ChequeApplicationAssocs");
                }
                return _ChequeApplicationAssocs;
            }
        }
        private ObjectSet<ChequeApplicationAssoc> _ChequeApplicationAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChequeLoanAssoc> ChequeLoanAssocs
        {
            get
            {
                if ((_ChequeLoanAssocs == null))
                {
                    _ChequeLoanAssocs = base.CreateObjectSet<ChequeLoanAssoc>("ChequeLoanAssocs");
                }
                return _ChequeLoanAssocs;
            }
        }
        private ObjectSet<ChequeLoanAssoc> _ChequeLoanAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChequeStatu> ChequeStatus
        {
            get
            {
                if ((_ChequeStatus == null))
                {
                    _ChequeStatus = base.CreateObjectSet<ChequeStatu>("ChequeStatus");
                }
                return _ChequeStatus;
            }
        }
        private ObjectSet<ChequeStatu> _ChequeStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChequeStatusType> ChequeStatusTypes
        {
            get
            {
                if ((_ChequeStatusTypes == null))
                {
                    _ChequeStatusTypes = base.CreateObjectSet<ChequeStatusType>("ChequeStatusTypes");
                }
                return _ChequeStatusTypes;
            }
        }
        private ObjectSet<ChequeStatusType> _ChequeStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClassificationType> ClassificationTypes
        {
            get
            {
                if ((_ClassificationTypes == null))
                {
                    _ClassificationTypes = base.CreateObjectSet<ClassificationType>("ClassificationTypes");
                }
                return _ClassificationTypes;
            }
        }
        private ObjectSet<ClassificationType> _ClassificationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompromiseAgreement> CompromiseAgreements
        {
            get
            {
                if ((_CompromiseAgreements == null))
                {
                    _CompromiseAgreements = base.CreateObjectSet<CompromiseAgreement>("CompromiseAgreements");
                }
                return _CompromiseAgreements;
            }
        }
        private ObjectSet<CompromiseAgreement> _CompromiseAgreements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ControlNumber> ControlNumbers
        {
            get
            {
                if ((_ControlNumbers == null))
                {
                    _ControlNumbers = base.CreateObjectSet<ControlNumber>("ControlNumbers");
                }
                return _ControlNumbers;
            }
        }
        private ObjectSet<ControlNumber> _ControlNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COVTransaction> COVTransactions
        {
            get
            {
                if ((_COVTransactions == null))
                {
                    _COVTransactions = base.CreateObjectSet<COVTransaction>("COVTransactions");
                }
                return _COVTransactions;
            }
        }
        private ObjectSet<COVTransaction> _COVTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COVTransactionType> COVTransactionTypes
        {
            get
            {
                if ((_COVTransactionTypes == null))
                {
                    _COVTransactionTypes = base.CreateObjectSet<COVTransactionType>("COVTransactionTypes");
                }
                return _COVTransactionTypes;
            }
        }
        private ObjectSet<COVTransactionType> _COVTransactionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ctc> Ctcs
        {
            get
            {
                if ((_Ctcs == null))
                {
                    _Ctcs = base.CreateObjectSet<Ctc>("Ctcs");
                }
                return _Ctcs;
            }
        }
        private ObjectSet<Ctc> _Ctcs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerCategory> CustomerCategories
        {
            get
            {
                if ((_CustomerCategories == null))
                {
                    _CustomerCategories = base.CreateObjectSet<CustomerCategory>("CustomerCategories");
                }
                return _CustomerCategories;
            }
        }
        private ObjectSet<CustomerCategory> _CustomerCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerCategoryType> CustomerCategoryTypes
        {
            get
            {
                if ((_CustomerCategoryTypes == null))
                {
                    _CustomerCategoryTypes = base.CreateObjectSet<CustomerCategoryType>("CustomerCategoryTypes");
                }
                return _CustomerCategoryTypes;
            }
        }
        private ObjectSet<CustomerCategoryType> _CustomerCategoryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerClassification> CustomerClassifications
        {
            get
            {
                if ((_CustomerClassifications == null))
                {
                    _CustomerClassifications = base.CreateObjectSet<CustomerClassification>("CustomerClassifications");
                }
                return _CustomerClassifications;
            }
        }
        private ObjectSet<CustomerClassification> _CustomerClassifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerSourceOfIncome> CustomerSourceOfIncomes
        {
            get
            {
                if ((_CustomerSourceOfIncomes == null))
                {
                    _CustomerSourceOfIncomes = base.CreateObjectSet<CustomerSourceOfIncome>("CustomerSourceOfIncomes");
                }
                return _CustomerSourceOfIncomes;
            }
        }
        private ObjectSet<CustomerSourceOfIncome> _CustomerSourceOfIncomes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerStatu> CustomerStatus
        {
            get
            {
                if ((_CustomerStatus == null))
                {
                    _CustomerStatus = base.CreateObjectSet<CustomerStatu>("CustomerStatus");
                }
                return _CustomerStatus;
            }
        }
        private ObjectSet<CustomerStatu> _CustomerStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerStatusType> CustomerStatusTypes
        {
            get
            {
                if ((_CustomerStatusTypes == null))
                {
                    _CustomerStatusTypes = base.CreateObjectSet<CustomerStatusType>("CustomerStatusTypes");
                }
                return _CustomerStatusTypes;
            }
        }
        private ObjectSet<CustomerStatusType> _CustomerStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DemandLetter> DemandLetters
        {
            get
            {
                if ((_DemandLetters == null))
                {
                    _DemandLetters = base.CreateObjectSet<DemandLetter>("DemandLetters");
                }
                return _DemandLetters;
            }
        }
        private ObjectSet<DemandLetter> _DemandLetters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DemandLetterStatu> DemandLetterStatus
        {
            get
            {
                if ((_DemandLetterStatus == null))
                {
                    _DemandLetterStatus = base.CreateObjectSet<DemandLetterStatu>("DemandLetterStatus");
                }
                return _DemandLetterStatus;
            }
        }
        private ObjectSet<DemandLetterStatu> _DemandLetterStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DemandLetterStatusType> DemandLetterStatusTypes
        {
            get
            {
                if ((_DemandLetterStatusTypes == null))
                {
                    _DemandLetterStatusTypes = base.CreateObjectSet<DemandLetterStatusType>("DemandLetterStatusTypes");
                }
                return _DemandLetterStatusTypes;
            }
        }
        private ObjectSet<DemandLetterStatusType> _DemandLetterStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Denomination> Denominations
        {
            get
            {
                if ((_Denominations == null))
                {
                    _Denominations = base.CreateObjectSet<Denomination>("Denominations");
                }
                return _Denominations;
            }
        }
        private ObjectSet<Denomination> _Denominations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Disbursement> Disbursements
        {
            get
            {
                if ((_Disbursements == null))
                {
                    _Disbursements = base.CreateObjectSet<Disbursement>("Disbursements");
                }
                return _Disbursements;
            }
        }
        private ObjectSet<Disbursement> _Disbursements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementItem> DisbursementItems
        {
            get
            {
                if ((_DisbursementItems == null))
                {
                    _DisbursementItems = base.CreateObjectSet<DisbursementItem>("DisbursementItems");
                }
                return _DisbursementItems;
            }
        }
        private ObjectSet<DisbursementItem> _DisbursementItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementType> DisbursementTypes
        {
            get
            {
                if ((_DisbursementTypes == null))
                {
                    _DisbursementTypes = base.CreateObjectSet<DisbursementType>("DisbursementTypes");
                }
                return _DisbursementTypes;
            }
        }
        private ObjectSet<DisbursementType> _DisbursementTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementVcrStatTypeAssoc> DisbursementVcrStatTypeAssocs
        {
            get
            {
                if ((_DisbursementVcrStatTypeAssocs == null))
                {
                    _DisbursementVcrStatTypeAssocs = base.CreateObjectSet<DisbursementVcrStatTypeAssoc>("DisbursementVcrStatTypeAssocs");
                }
                return _DisbursementVcrStatTypeAssocs;
            }
        }
        private ObjectSet<DisbursementVcrStatTypeAssoc> _DisbursementVcrStatTypeAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementVcrStatu> DisbursementVcrStatus
        {
            get
            {
                if ((_DisbursementVcrStatus == null))
                {
                    _DisbursementVcrStatus = base.CreateObjectSet<DisbursementVcrStatu>("DisbursementVcrStatus");
                }
                return _DisbursementVcrStatus;
            }
        }
        private ObjectSet<DisbursementVcrStatu> _DisbursementVcrStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementVcrStatusType> DisbursementVcrStatusTypes
        {
            get
            {
                if ((_DisbursementVcrStatusTypes == null))
                {
                    _DisbursementVcrStatusTypes = base.CreateObjectSet<DisbursementVcrStatusType>("DisbursementVcrStatusTypes");
                }
                return _DisbursementVcrStatusTypes;
            }
        }
        private ObjectSet<DisbursementVcrStatusType> _DisbursementVcrStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DistrictType> DistrictTypes
        {
            get
            {
                if ((_DistrictTypes == null))
                {
                    _DistrictTypes = base.CreateObjectSet<DistrictType>("DistrictTypes");
                }
                return _DistrictTypes;
            }
        }
        private ObjectSet<DistrictType> _DistrictTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentPage> DocumentPages
        {
            get
            {
                if ((_DocumentPages == null))
                {
                    _DocumentPages = base.CreateObjectSet<DocumentPage>("DocumentPages");
                }
                return _DocumentPages;
            }
        }
        private ObjectSet<DocumentPage> _DocumentPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EducAttainmentType> EducAttainmentTypes
        {
            get
            {
                if ((_EducAttainmentTypes == null))
                {
                    _EducAttainmentTypes = base.CreateObjectSet<EducAttainmentType>("EducAttainmentTypes");
                }
                return _EducAttainmentTypes;
            }
        }
        private ObjectSet<EducAttainmentType> _EducAttainmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElectronicAddress> ElectronicAddresses
        {
            get
            {
                if ((_ElectronicAddresses == null))
                {
                    _ElectronicAddresses = base.CreateObjectSet<ElectronicAddress>("ElectronicAddresses");
                }
                return _ElectronicAddresses;
            }
        }
        private ObjectSet<ElectronicAddress> _ElectronicAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElectronicAddressType> ElectronicAddressTypes
        {
            get
            {
                if ((_ElectronicAddressTypes == null))
                {
                    _ElectronicAddressTypes = base.CreateObjectSet<ElectronicAddressType>("ElectronicAddressTypes");
                }
                return _ElectronicAddressTypes;
            }
        }
        private ObjectSet<ElectronicAddressType> _ElectronicAddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePositionType> EmployeePositionTypes
        {
            get
            {
                if ((_EmployeePositionTypes == null))
                {
                    _EmployeePositionTypes = base.CreateObjectSet<EmployeePositionType>("EmployeePositionTypes");
                }
                return _EmployeePositionTypes;
            }
        }
        private ObjectSet<EmployeePositionType> _EmployeePositionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employment> Employments
        {
            get
            {
                if ((_Employments == null))
                {
                    _Employments = base.CreateObjectSet<Employment>("Employments");
                }
                return _Employments;
            }
        }
        private ObjectSet<Employment> _Employments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Encashment> Encashments
        {
            get
            {
                if ((_Encashments == null))
                {
                    _Encashments = base.CreateObjectSet<Encashment>("Encashments");
                }
                return _Encashments;
            }
        }
        private ObjectSet<Encashment> _Encashments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExchangeRate> ExchangeRates
        {
            get
            {
                if ((_ExchangeRates == null))
                {
                    _ExchangeRates = base.CreateObjectSet<ExchangeRate>("ExchangeRates");
                }
                return _ExchangeRates;
            }
        }
        private ObjectSet<ExchangeRate> _ExchangeRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExchangeRateType> ExchangeRateTypes
        {
            get
            {
                if ((_ExchangeRateTypes == null))
                {
                    _ExchangeRateTypes = base.CreateObjectSet<ExchangeRateType>("ExchangeRateTypes");
                }
                return _ExchangeRateTypes;
            }
        }
        private ObjectSet<ExchangeRateType> _ExchangeRateTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fee> Fees
        {
            get
            {
                if ((_Fees == null))
                {
                    _Fees = base.CreateObjectSet<Fee>("Fees");
                }
                return _Fees;
            }
        }
        private ObjectSet<Fee> _Fees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeePayment> FeePayments
        {
            get
            {
                if ((_FeePayments == null))
                {
                    _FeePayments = base.CreateObjectSet<FeePayment>("FeePayments");
                }
                return _FeePayments;
            }
        }
        private ObjectSet<FeePayment> _FeePayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinAcctTran> FinAcctTrans
        {
            get
            {
                if ((_FinAcctTrans == null))
                {
                    _FinAcctTrans = base.CreateObjectSet<FinAcctTran>("FinAcctTrans");
                }
                return _FinAcctTrans;
            }
        }
        private ObjectSet<FinAcctTran> _FinAcctTrans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinAcctTransRel> FinAcctTransRels
        {
            get
            {
                if ((_FinAcctTransRels == null))
                {
                    _FinAcctTransRels = base.CreateObjectSet<FinAcctTransRel>("FinAcctTransRels");
                }
                return _FinAcctTransRels;
            }
        }
        private ObjectSet<FinAcctTransRel> _FinAcctTransRels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinAcctTransRelType> FinAcctTransRelTypes
        {
            get
            {
                if ((_FinAcctTransRelTypes == null))
                {
                    _FinAcctTransRelTypes = base.CreateObjectSet<FinAcctTransRelType>("FinAcctTransRelTypes");
                }
                return _FinAcctTransRelTypes;
            }
        }
        private ObjectSet<FinAcctTransRelType> _FinAcctTransRelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinAcctTransStatusType> FinAcctTransStatusTypes
        {
            get
            {
                if ((_FinAcctTransStatusTypes == null))
                {
                    _FinAcctTransStatusTypes = base.CreateObjectSet<FinAcctTransStatusType>("FinAcctTransStatusTypes");
                }
                return _FinAcctTransStatusTypes;
            }
        }
        private ObjectSet<FinAcctTransStatusType> _FinAcctTransStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinAcctTransTask> FinAcctTransTasks
        {
            get
            {
                if ((_FinAcctTransTasks == null))
                {
                    _FinAcctTransTasks = base.CreateObjectSet<FinAcctTransTask>("FinAcctTransTasks");
                }
                return _FinAcctTransTasks;
            }
        }
        private ObjectSet<FinAcctTransTask> _FinAcctTransTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialAccount> FinancialAccounts
        {
            get
            {
                if ((_FinancialAccounts == null))
                {
                    _FinancialAccounts = base.CreateObjectSet<FinancialAccount>("FinancialAccounts");
                }
                return _FinancialAccounts;
            }
        }
        private ObjectSet<FinancialAccount> _FinancialAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialAccountProduct> FinancialAccountProducts
        {
            get
            {
                if ((_FinancialAccountProducts == null))
                {
                    _FinancialAccountProducts = base.CreateObjectSet<FinancialAccountProduct>("FinancialAccountProducts");
                }
                return _FinancialAccountProducts;
            }
        }
        private ObjectSet<FinancialAccountProduct> _FinancialAccountProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialAccountRole> FinancialAccountRoles
        {
            get
            {
                if ((_FinancialAccountRoles == null))
                {
                    _FinancialAccountRoles = base.CreateObjectSet<FinancialAccountRole>("FinancialAccountRoles");
                }
                return _FinancialAccountRoles;
            }
        }
        private ObjectSet<FinancialAccountRole> _FinancialAccountRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialAccountType> FinancialAccountTypes
        {
            get
            {
                if ((_FinancialAccountTypes == null))
                {
                    _FinancialAccountTypes = base.CreateObjectSet<FinancialAccountType>("FinancialAccountTypes");
                }
                return _FinancialAccountTypes;
            }
        }
        private ObjectSet<FinancialAccountType> _FinancialAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialAcctNotification> FinancialAcctNotifications
        {
            get
            {
                if ((_FinancialAcctNotifications == null))
                {
                    _FinancialAcctNotifications = base.CreateObjectSet<FinancialAcctNotification>("FinancialAcctNotifications");
                }
                return _FinancialAcctNotifications;
            }
        }
        private ObjectSet<FinancialAcctNotification> _FinancialAcctNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialAcctNotificationTyp> FinancialAcctNotificationTyps
        {
            get
            {
                if ((_FinancialAcctNotificationTyps == null))
                {
                    _FinancialAcctNotificationTyps = base.CreateObjectSet<FinancialAcctNotificationTyp>("FinancialAcctNotificationTyps");
                }
                return _FinancialAcctNotificationTyps;
            }
        }
        private ObjectSet<FinancialAcctNotificationTyp> _FinancialAcctNotificationTyps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialProduct> FinancialProducts
        {
            get
            {
                if ((_FinancialProducts == null))
                {
                    _FinancialProducts = base.CreateObjectSet<FinancialProduct>("FinancialProducts");
                }
                return _FinancialProducts;
            }
        }
        private ObjectSet<FinancialProduct> _FinancialProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinlAcctTransnStatu> FinlAcctTransnStatus
        {
            get
            {
                if ((_FinlAcctTransnStatus == null))
                {
                    _FinlAcctTransnStatus = base.CreateObjectSet<FinlAcctTransnStatu>("FinlAcctTransnStatus");
                }
                return _FinlAcctTransnStatus;
            }
        }
        private ObjectSet<FinlAcctTransnStatu> _FinlAcctTransnStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinlAcctTransType> FinlAcctTransTypes
        {
            get
            {
                if ((_FinlAcctTransTypes == null))
                {
                    _FinlAcctTransTypes = base.CreateObjectSet<FinlAcctTransType>("FinlAcctTransTypes");
                }
                return _FinlAcctTransTypes;
            }
        }
        private ObjectSet<FinlAcctTransType> _FinlAcctTransTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForeignExchange> ForeignExchanges
        {
            get
            {
                if ((_ForeignExchanges == null))
                {
                    _ForeignExchanges = base.CreateObjectSet<ForeignExchange>("ForeignExchanges");
                }
                return _ForeignExchanges;
            }
        }
        private ObjectSet<ForeignExchange> _ForeignExchanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForeignExchangeDetailAssoc> ForeignExchangeDetailAssocs
        {
            get
            {
                if ((_ForeignExchangeDetailAssocs == null))
                {
                    _ForeignExchangeDetailAssocs = base.CreateObjectSet<ForeignExchangeDetailAssoc>("ForeignExchangeDetailAssocs");
                }
                return _ForeignExchangeDetailAssocs;
            }
        }
        private ObjectSet<ForeignExchangeDetailAssoc> _ForeignExchangeDetailAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForExCheque> ForExCheques
        {
            get
            {
                if ((_ForExCheques == null))
                {
                    _ForExCheques = base.CreateObjectSet<ForExCheque>("ForExCheques");
                }
                return _ForExCheques;
            }
        }
        private ObjectSet<ForExCheque> _ForExCheques;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForExDetail> ForExDetails
        {
            get
            {
                if ((_ForExDetails == null))
                {
                    _ForExDetails = base.CreateObjectSet<ForExDetail>("ForExDetails");
                }
                return _ForExDetails;
            }
        }
        private ObjectSet<ForExDetail> _ForExDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormDetail> FormDetails
        {
            get
            {
                if ((_FormDetails == null))
                {
                    _FormDetails = base.CreateObjectSet<FormDetail>("FormDetails");
                }
                return _FormDetails;
            }
        }
        private ObjectSet<FormDetail> _FormDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormType> FormTypes
        {
            get
            {
                if ((_FormTypes == null))
                {
                    _FormTypes = base.CreateObjectSet<FormType>("FormTypes");
                }
                return _FormTypes;
            }
        }
        private ObjectSet<FormType> _FormTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GenderType> GenderTypes
        {
            get
            {
                if ((_GenderTypes == null))
                {
                    _GenderTypes = base.CreateObjectSet<GenderType>("GenderTypes");
                }
                return _GenderTypes;
            }
        }
        private ObjectSet<GenderType> _GenderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Holiday> Holidays
        {
            get
            {
                if ((_Holidays == null))
                {
                    _Holidays = base.CreateObjectSet<Holiday>("Holidays");
                }
                return _Holidays;
            }
        }
        private ObjectSet<Holiday> _Holidays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HomeOwnership> HomeOwnerships
        {
            get
            {
                if ((_HomeOwnerships == null))
                {
                    _HomeOwnerships = base.CreateObjectSet<HomeOwnership>("HomeOwnerships");
                }
                return _HomeOwnerships;
            }
        }
        private ObjectSet<HomeOwnership> _HomeOwnerships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HomeOwnershipType> HomeOwnershipTypes
        {
            get
            {
                if ((_HomeOwnershipTypes == null))
                {
                    _HomeOwnershipTypes = base.CreateObjectSet<HomeOwnershipType>("HomeOwnershipTypes");
                }
                return _HomeOwnershipTypes;
            }
        }
        private ObjectSet<HomeOwnershipType> _HomeOwnershipTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IdentificationType> IdentificationTypes
        {
            get
            {
                if ((_IdentificationTypes == null))
                {
                    _IdentificationTypes = base.CreateObjectSet<IdentificationType>("IdentificationTypes");
                }
                return _IdentificationTypes;
            }
        }
        private ObjectSet<IdentificationType> _IdentificationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InterestItem> InterestItems
        {
            get
            {
                if ((_InterestItems == null))
                {
                    _InterestItems = base.CreateObjectSet<InterestItem>("InterestItems");
                }
                return _InterestItems;
            }
        }
        private ObjectSet<InterestItem> _InterestItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InterestType> InterestTypes
        {
            get
            {
                if ((_InterestTypes == null))
                {
                    _InterestTypes = base.CreateObjectSet<InterestType>("InterestTypes");
                }
                return _InterestTypes;
            }
        }
        private ObjectSet<InterestType> _InterestTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Land> Lands
        {
            get
            {
                if ((_Lands == null))
                {
                    _Lands = base.CreateObjectSet<Land>("Lands");
                }
                return _Lands;
            }
        }
        private ObjectSet<Land> _Lands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LandType> LandTypes
        {
            get
            {
                if ((_LandTypes == null))
                {
                    _LandTypes = base.CreateObjectSet<LandType>("LandTypes");
                }
                return _LandTypes;
            }
        }
        private ObjectSet<LandType> _LandTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAccount> LoanAccounts
        {
            get
            {
                if ((_LoanAccounts == null))
                {
                    _LoanAccounts = base.CreateObjectSet<LoanAccount>("LoanAccounts");
                }
                return _LoanAccounts;
            }
        }
        private ObjectSet<LoanAccount> _LoanAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAccountStatu> LoanAccountStatus
        {
            get
            {
                if ((_LoanAccountStatus == null))
                {
                    _LoanAccountStatus = base.CreateObjectSet<LoanAccountStatu>("LoanAccountStatus");
                }
                return _LoanAccountStatus;
            }
        }
        private ObjectSet<LoanAccountStatu> _LoanAccountStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAccountStatusType> LoanAccountStatusTypes
        {
            get
            {
                if ((_LoanAccountStatusTypes == null))
                {
                    _LoanAccountStatusTypes = base.CreateObjectSet<LoanAccountStatusType>("LoanAccountStatusTypes");
                }
                return _LoanAccountStatusTypes;
            }
        }
        private ObjectSet<LoanAccountStatusType> _LoanAccountStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAccountStatusTypeAssoc> LoanAccountStatusTypeAssocs
        {
            get
            {
                if ((_LoanAccountStatusTypeAssocs == null))
                {
                    _LoanAccountStatusTypeAssocs = base.CreateObjectSet<LoanAccountStatusTypeAssoc>("LoanAccountStatusTypeAssocs");
                }
                return _LoanAccountStatusTypeAssocs;
            }
        }
        private ObjectSet<LoanAccountStatusTypeAssoc> _LoanAccountStatusTypeAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAdjustment> LoanAdjustments
        {
            get
            {
                if ((_LoanAdjustments == null))
                {
                    _LoanAdjustments = base.CreateObjectSet<LoanAdjustment>("LoanAdjustments");
                }
                return _LoanAdjustments;
            }
        }
        private ObjectSet<LoanAdjustment> _LoanAdjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAgreement> LoanAgreements
        {
            get
            {
                if ((_LoanAgreements == null))
                {
                    _LoanAgreements = base.CreateObjectSet<LoanAgreement>("LoanAgreements");
                }
                return _LoanAgreements;
            }
        }
        private ObjectSet<LoanAgreement> _LoanAgreements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanApplication> LoanApplications
        {
            get
            {
                if ((_LoanApplications == null))
                {
                    _LoanApplications = base.CreateObjectSet<LoanApplication>("LoanApplications");
                }
                return _LoanApplications;
            }
        }
        private ObjectSet<LoanApplication> _LoanApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanApplicationFee> LoanApplicationFees
        {
            get
            {
                if ((_LoanApplicationFees == null))
                {
                    _LoanApplicationFees = base.CreateObjectSet<LoanApplicationFee>("LoanApplicationFees");
                }
                return _LoanApplicationFees;
            }
        }
        private ObjectSet<LoanApplicationFee> _LoanApplicationFees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanApplicationRole> LoanApplicationRoles
        {
            get
            {
                if ((_LoanApplicationRoles == null))
                {
                    _LoanApplicationRoles = base.CreateObjectSet<LoanApplicationRole>("LoanApplicationRoles");
                }
                return _LoanApplicationRoles;
            }
        }
        private ObjectSet<LoanApplicationRole> _LoanApplicationRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanApplicationStatu> LoanApplicationStatus
        {
            get
            {
                if ((_LoanApplicationStatus == null))
                {
                    _LoanApplicationStatus = base.CreateObjectSet<LoanApplicationStatu>("LoanApplicationStatus");
                }
                return _LoanApplicationStatus;
            }
        }
        private ObjectSet<LoanApplicationStatu> _LoanApplicationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanApplicationStatusType> LoanApplicationStatusTypes
        {
            get
            {
                if ((_LoanApplicationStatusTypes == null))
                {
                    _LoanApplicationStatusTypes = base.CreateObjectSet<LoanApplicationStatusType>("LoanApplicationStatusTypes");
                }
                return _LoanApplicationStatusTypes;
            }
        }
        private ObjectSet<LoanApplicationStatusType> _LoanApplicationStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanDisbursement> LoanDisbursements
        {
            get
            {
                if ((_LoanDisbursements == null))
                {
                    _LoanDisbursements = base.CreateObjectSet<LoanDisbursement>("LoanDisbursements");
                }
                return _LoanDisbursements;
            }
        }
        private ObjectSet<LoanDisbursement> _LoanDisbursements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanDisbursementType> LoanDisbursementTypes
        {
            get
            {
                if ((_LoanDisbursementTypes == null))
                {
                    _LoanDisbursementTypes = base.CreateObjectSet<LoanDisbursementType>("LoanDisbursementTypes");
                }
                return _LoanDisbursementTypes;
            }
        }
        private ObjectSet<LoanDisbursementType> _LoanDisbursementTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanDisbursementVcr> LoanDisbursementVcrs
        {
            get
            {
                if ((_LoanDisbursementVcrs == null))
                {
                    _LoanDisbursementVcrs = base.CreateObjectSet<LoanDisbursementVcr>("LoanDisbursementVcrs");
                }
                return _LoanDisbursementVcrs;
            }
        }
        private ObjectSet<LoanDisbursementVcr> _LoanDisbursementVcrs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanModification> LoanModifications
        {
            get
            {
                if ((_LoanModifications == null))
                {
                    _LoanModifications = base.CreateObjectSet<LoanModification>("LoanModifications");
                }
                return _LoanModifications;
            }
        }
        private ObjectSet<LoanModification> _LoanModifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanModificationPrevItem> LoanModificationPrevItems
        {
            get
            {
                if ((_LoanModificationPrevItems == null))
                {
                    _LoanModificationPrevItems = base.CreateObjectSet<LoanModificationPrevItem>("LoanModificationPrevItems");
                }
                return _LoanModificationPrevItems;
            }
        }
        private ObjectSet<LoanModificationPrevItem> _LoanModificationPrevItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanModificationStatu> LoanModificationStatus
        {
            get
            {
                if ((_LoanModificationStatus == null))
                {
                    _LoanModificationStatus = base.CreateObjectSet<LoanModificationStatu>("LoanModificationStatus");
                }
                return _LoanModificationStatus;
            }
        }
        private ObjectSet<LoanModificationStatu> _LoanModificationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanModificationStatusType> LoanModificationStatusTypes
        {
            get
            {
                if ((_LoanModificationStatusTypes == null))
                {
                    _LoanModificationStatusTypes = base.CreateObjectSet<LoanModificationStatusType>("LoanModificationStatusTypes");
                }
                return _LoanModificationStatusTypes;
            }
        }
        private ObjectSet<LoanModificationStatusType> _LoanModificationStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanModificationType> LoanModificationTypes
        {
            get
            {
                if ((_LoanModificationTypes == null))
                {
                    _LoanModificationTypes = base.CreateObjectSet<LoanModificationType>("LoanModificationTypes");
                }
                return _LoanModificationTypes;
            }
        }
        private ObjectSet<LoanModificationType> _LoanModificationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanPayment> LoanPayments
        {
            get
            {
                if ((_LoanPayments == null))
                {
                    _LoanPayments = base.CreateObjectSet<LoanPayment>("LoanPayments");
                }
                return _LoanPayments;
            }
        }
        private ObjectSet<LoanPayment> _LoanPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanReAvailment> LoanReAvailments
        {
            get
            {
                if ((_LoanReAvailments == null))
                {
                    _LoanReAvailments = base.CreateObjectSet<LoanReAvailment>("LoanReAvailments");
                }
                return _LoanReAvailments;
            }
        }
        private ObjectSet<LoanReAvailment> _LoanReAvailments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanStatement> LoanStatements
        {
            get
            {
                if ((_LoanStatements == null))
                {
                    _LoanStatements = base.CreateObjectSet<LoanStatement>("LoanStatements");
                }
                return _LoanStatements;
            }
        }
        private ObjectSet<LoanStatement> _LoanStatements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanTerm> LoanTerms
        {
            get
            {
                if ((_LoanTerms == null))
                {
                    _LoanTerms = base.CreateObjectSet<LoanTerm>("LoanTerms");
                }
                return _LoanTerms;
            }
        }
        private ObjectSet<LoanTerm> _LoanTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Machine> Machines
        {
            get
            {
                if ((_Machines == null))
                {
                    _Machines = base.CreateObjectSet<Machine>("Machines");
                }
                return _Machines;
            }
        }
        private ObjectSet<Machine> _Machines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaritalStatu> MaritalStatus
        {
            get
            {
                if ((_MaritalStatus == null))
                {
                    _MaritalStatus = base.CreateObjectSet<MaritalStatu>("MaritalStatus");
                }
                return _MaritalStatus;
            }
        }
        private ObjectSet<MaritalStatu> _MaritalStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaritalStatusType> MaritalStatusTypes
        {
            get
            {
                if ((_MaritalStatusTypes == null))
                {
                    _MaritalStatusTypes = base.CreateObjectSet<MaritalStatusType>("MaritalStatusTypes");
                }
                return _MaritalStatusTypes;
            }
        }
        private ObjectSet<MaritalStatusType> _MaritalStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NationalityType> NationalityTypes
        {
            get
            {
                if ((_NationalityTypes == null))
                {
                    _NationalityTypes = base.CreateObjectSet<NationalityType>("NationalityTypes");
                }
                return _NationalityTypes;
            }
        }
        private ObjectSet<NationalityType> _NationalityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NonProductFee> NonProductFees
        {
            get
            {
                if ((_NonProductFees == null))
                {
                    _NonProductFees = base.CreateObjectSet<NonProductFee>("NonProductFees");
                }
                return _NonProductFees;
            }
        }
        private ObjectSet<NonProductFee> _NonProductFees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationType> OrganizationTypes
        {
            get
            {
                if ((_OrganizationTypes == null))
                {
                    _OrganizationTypes = base.CreateObjectSet<OrganizationType>("OrganizationTypes");
                }
                return _OrganizationTypes;
            }
        }
        private ObjectSet<OrganizationType> _OrganizationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OtherDisbursementParticular> OtherDisbursementParticulars
        {
            get
            {
                if ((_OtherDisbursementParticulars == null))
                {
                    _OtherDisbursementParticulars = base.CreateObjectSet<OtherDisbursementParticular>("OtherDisbursementParticulars");
                }
                return _OtherDisbursementParticulars;
            }
        }
        private ObjectSet<OtherDisbursementParticular> _OtherDisbursementParticulars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Party> Parties
        {
            get
            {
                if ((_Parties == null))
                {
                    _Parties = base.CreateObjectSet<Party>("Parties");
                }
                return _Parties;
            }
        }
        private ObjectSet<Party> _Parties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartyRelationship> PartyRelationships
        {
            get
            {
                if ((_PartyRelationships == null))
                {
                    _PartyRelationships = base.CreateObjectSet<PartyRelationship>("PartyRelationships");
                }
                return _PartyRelationships;
            }
        }
        private ObjectSet<PartyRelationship> _PartyRelationships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartyRelType> PartyRelTypes
        {
            get
            {
                if ((_PartyRelTypes == null))
                {
                    _PartyRelTypes = base.CreateObjectSet<PartyRelType>("PartyRelTypes");
                }
                return _PartyRelTypes;
            }
        }
        private ObjectSet<PartyRelType> _PartyRelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartyRole> PartyRoles
        {
            get
            {
                if ((_PartyRoles == null))
                {
                    _PartyRoles = base.CreateObjectSet<PartyRole>("PartyRoles");
                }
                return _PartyRoles;
            }
        }
        private ObjectSet<PartyRole> _PartyRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartyRoleType> PartyRoleTypes
        {
            get
            {
                if ((_PartyRoleTypes == null))
                {
                    _PartyRoleTypes = base.CreateObjectSet<PartyRoleType>("PartyRoleTypes");
                }
                return _PartyRoleTypes;
            }
        }
        private ObjectSet<PartyRoleType> _PartyRoleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartyType> PartyTypes
        {
            get
            {
                if ((_PartyTypes == null))
                {
                    _PartyTypes = base.CreateObjectSet<PartyType>("PartyTypes");
                }
                return _PartyTypes;
            }
        }
        private ObjectSet<PartyType> _PartyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentApplication> PaymentApplications
        {
            get
            {
                if ((_PaymentApplications == null))
                {
                    _PaymentApplications = base.CreateObjectSet<PaymentApplication>("PaymentApplications");
                }
                return _PaymentApplications;
            }
        }
        private ObjectSet<PaymentApplication> _PaymentApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentCurrencyAssoc> PaymentCurrencyAssocs
        {
            get
            {
                if ((_PaymentCurrencyAssocs == null))
                {
                    _PaymentCurrencyAssocs = base.CreateObjectSet<PaymentCurrencyAssoc>("PaymentCurrencyAssocs");
                }
                return _PaymentCurrencyAssocs;
            }
        }
        private ObjectSet<PaymentCurrencyAssoc> _PaymentCurrencyAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMethodType> PaymentMethodTypes
        {
            get
            {
                if ((_PaymentMethodTypes == null))
                {
                    _PaymentMethodTypes = base.CreateObjectSet<PaymentMethodType>("PaymentMethodTypes");
                }
                return _PaymentMethodTypes;
            }
        }
        private ObjectSet<PaymentMethodType> _PaymentMethodTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonIdentification> PersonIdentifications
        {
            get
            {
                if ((_PersonIdentifications == null))
                {
                    _PersonIdentifications = base.CreateObjectSet<PersonIdentification>("PersonIdentifications");
                }
                return _PersonIdentifications;
            }
        }
        private ObjectSet<PersonIdentification> _PersonIdentifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonName> PersonNames
        {
            get
            {
                if ((_PersonNames == null))
                {
                    _PersonNames = base.CreateObjectSet<PersonName>("PersonNames");
                }
                return _PersonNames;
            }
        }
        private ObjectSet<PersonName> _PersonNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonNameType> PersonNameTypes
        {
            get
            {
                if ((_PersonNameTypes == null))
                {
                    _PersonNameTypes = base.CreateObjectSet<PersonNameType>("PersonNameTypes");
                }
                return _PersonNameTypes;
            }
        }
        private ObjectSet<PersonNameType> _PersonNameTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PettyCashLoanApplication> PettyCashLoanApplications
        {
            get
            {
                if ((_PettyCashLoanApplications == null))
                {
                    _PettyCashLoanApplications = base.CreateObjectSet<PettyCashLoanApplication>("PettyCashLoanApplications");
                }
                return _PettyCashLoanApplications;
            }
        }
        private ObjectSet<PettyCashLoanApplication> _PettyCashLoanApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PettyCashLoanApplicationStatu> PettyCashLoanApplicationStatus
        {
            get
            {
                if ((_PettyCashLoanApplicationStatus == null))
                {
                    _PettyCashLoanApplicationStatus = base.CreateObjectSet<PettyCashLoanApplicationStatu>("PettyCashLoanApplicationStatus");
                }
                return _PettyCashLoanApplicationStatus;
            }
        }
        private ObjectSet<PettyCashLoanApplicationStatu> _PettyCashLoanApplicationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PettyCashLoanAppStatusType> PettyCashLoanAppStatusTypes
        {
            get
            {
                if ((_PettyCashLoanAppStatusTypes == null))
                {
                    _PettyCashLoanAppStatusTypes = base.CreateObjectSet<PettyCashLoanAppStatusType>("PettyCashLoanAppStatusTypes");
                }
                return _PettyCashLoanAppStatusTypes;
            }
        }
        private ObjectSet<PettyCashLoanAppStatusType> _PettyCashLoanAppStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PettyCashLoanAppStatusTypeAssoc> PettyCashLoanAppStatusTypeAssocs
        {
            get
            {
                if ((_PettyCashLoanAppStatusTypeAssocs == null))
                {
                    _PettyCashLoanAppStatusTypeAssocs = base.CreateObjectSet<PettyCashLoanAppStatusTypeAssoc>("PettyCashLoanAppStatusTypeAssocs");
                }
                return _PettyCashLoanAppStatusTypeAssocs;
            }
        }
        private ObjectSet<PettyCashLoanAppStatusTypeAssoc> _PettyCashLoanAppStatusTypeAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PettyCashLoanItem> PettyCashLoanItems
        {
            get
            {
                if ((_PettyCashLoanItems == null))
                {
                    _PettyCashLoanItems = base.CreateObjectSet<PettyCashLoanItem>("PettyCashLoanItems");
                }
                return _PettyCashLoanItems;
            }
        }
        private ObjectSet<PettyCashLoanItem> _PettyCashLoanItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostalAddress> PostalAddresses
        {
            get
            {
                if ((_PostalAddresses == null))
                {
                    _PostalAddresses = base.CreateObjectSet<PostalAddress>("PostalAddresses");
                }
                return _PostalAddresses;
            }
        }
        private ObjectSet<PostalAddress> _PostalAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostalAddressType> PostalAddressTypes
        {
            get
            {
                if ((_PostalAddressTypes == null))
                {
                    _PostalAddressTypes = base.CreateObjectSet<PostalAddressType>("PostalAddressTypes");
                }
                return _PostalAddressTypes;
            }
        }
        private ObjectSet<PostalAddressType> _PostalAddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategory> ProductCategories
        {
            get
            {
                if ((_ProductCategories == null))
                {
                    _ProductCategories = base.CreateObjectSet<ProductCategory>("ProductCategories");
                }
                return _ProductCategories;
            }
        }
        private ObjectSet<ProductCategory> _ProductCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategoryClassification> ProductCategoryClassifications
        {
            get
            {
                if ((_ProductCategoryClassifications == null))
                {
                    _ProductCategoryClassifications = base.CreateObjectSet<ProductCategoryClassification>("ProductCategoryClassifications");
                }
                return _ProductCategoryClassifications;
            }
        }
        private ObjectSet<ProductCategoryClassification> _ProductCategoryClassifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategoryFeatureFunctionalApplicability> ProductCategoryFeatureFunctionalApplicabilities
        {
            get
            {
                if ((_ProductCategoryFeatureFunctionalApplicabilities == null))
                {
                    _ProductCategoryFeatureFunctionalApplicabilities = base.CreateObjectSet<ProductCategoryFeatureFunctionalApplicability>("ProductCategoryFeatureFunctionalApplicabilities");
                }
                return _ProductCategoryFeatureFunctionalApplicabilities;
            }
        }
        private ObjectSet<ProductCategoryFeatureFunctionalApplicability> _ProductCategoryFeatureFunctionalApplicabilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategoryRollup> ProductCategoryRollups
        {
            get
            {
                if ((_ProductCategoryRollups == null))
                {
                    _ProductCategoryRollups = base.CreateObjectSet<ProductCategoryRollup>("ProductCategoryRollups");
                }
                return _ProductCategoryRollups;
            }
        }
        private ObjectSet<ProductCategoryRollup> _ProductCategoryRollups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCatFeatApplicability> ProductCatFeatApplicabilities
        {
            get
            {
                if ((_ProductCatFeatApplicabilities == null))
                {
                    _ProductCatFeatApplicabilities = base.CreateObjectSet<ProductCatFeatApplicability>("ProductCatFeatApplicabilities");
                }
                return _ProductCatFeatApplicabilities;
            }
        }
        private ObjectSet<ProductCatFeatApplicability> _ProductCatFeatApplicabilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductFeature> ProductFeatures
        {
            get
            {
                if ((_ProductFeatures == null))
                {
                    _ProductFeatures = base.CreateObjectSet<ProductFeature>("ProductFeatures");
                }
                return _ProductFeatures;
            }
        }
        private ObjectSet<ProductFeature> _ProductFeatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductFeatureApplicability> ProductFeatureApplicabilities
        {
            get
            {
                if ((_ProductFeatureApplicabilities == null))
                {
                    _ProductFeatureApplicabilities = base.CreateObjectSet<ProductFeatureApplicability>("ProductFeatureApplicabilities");
                }
                return _ProductFeatureApplicabilities;
            }
        }
        private ObjectSet<ProductFeatureApplicability> _ProductFeatureApplicabilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductFeatureCategory> ProductFeatureCategories
        {
            get
            {
                if ((_ProductFeatureCategories == null))
                {
                    _ProductFeatureCategories = base.CreateObjectSet<ProductFeatureCategory>("ProductFeatureCategories");
                }
                return _ProductFeatureCategories;
            }
        }
        private ObjectSet<ProductFeatureCategory> _ProductFeatureCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductRequiredDocument> ProductRequiredDocuments
        {
            get
            {
                if ((_ProductRequiredDocuments == null))
                {
                    _ProductRequiredDocuments = base.CreateObjectSet<ProductRequiredDocument>("ProductRequiredDocuments");
                }
                return _ProductRequiredDocuments;
            }
        }
        private ObjectSet<ProductRequiredDocument> _ProductRequiredDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductStatu> ProductStatus
        {
            get
            {
                if ((_ProductStatus == null))
                {
                    _ProductStatus = base.CreateObjectSet<ProductStatu>("ProductStatus");
                }
                return _ProductStatus;
            }
        }
        private ObjectSet<ProductStatu> _ProductStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductStatusType> ProductStatusTypes
        {
            get
            {
                if ((_ProductStatusTypes == null))
                {
                    _ProductStatusTypes = base.CreateObjectSet<ProductStatusType>("ProductStatusTypes");
                }
                return _ProductStatusTypes;
            }
        }
        private ObjectSet<ProductStatusType> _ProductStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receipt> Receipts
        {
            get
            {
                if ((_Receipts == null))
                {
                    _Receipts = base.CreateObjectSet<Receipt>("Receipts");
                }
                return _Receipts;
            }
        }
        private ObjectSet<Receipt> _Receipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptPaymentAssoc> ReceiptPaymentAssocs
        {
            get
            {
                if ((_ReceiptPaymentAssocs == null))
                {
                    _ReceiptPaymentAssocs = base.CreateObjectSet<ReceiptPaymentAssoc>("ReceiptPaymentAssocs");
                }
                return _ReceiptPaymentAssocs;
            }
        }
        private ObjectSet<ReceiptPaymentAssoc> _ReceiptPaymentAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptStatu> ReceiptStatus
        {
            get
            {
                if ((_ReceiptStatus == null))
                {
                    _ReceiptStatus = base.CreateObjectSet<ReceiptStatu>("ReceiptStatus");
                }
                return _ReceiptStatus;
            }
        }
        private ObjectSet<ReceiptStatu> _ReceiptStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptStatusType> ReceiptStatusTypes
        {
            get
            {
                if ((_ReceiptStatusTypes == null))
                {
                    _ReceiptStatusTypes = base.CreateObjectSet<ReceiptStatusType>("ReceiptStatusTypes");
                }
                return _ReceiptStatusTypes;
            }
        }
        private ObjectSet<ReceiptStatusType> _ReceiptStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptStatusTypeAssoc> ReceiptStatusTypeAssocs
        {
            get
            {
                if ((_ReceiptStatusTypeAssocs == null))
                {
                    _ReceiptStatusTypeAssocs = base.CreateObjectSet<ReceiptStatusTypeAssoc>("ReceiptStatusTypeAssocs");
                }
                return _ReceiptStatusTypeAssocs;
            }
        }
        private ObjectSet<ReceiptStatusTypeAssoc> _ReceiptStatusTypeAssocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receivable> Receivables
        {
            get
            {
                if ((_Receivables == null))
                {
                    _Receivables = base.CreateObjectSet<Receivable>("Receivables");
                }
                return _Receivables;
            }
        }
        private ObjectSet<Receivable> _Receivables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceivableAdjustment> ReceivableAdjustments
        {
            get
            {
                if ((_ReceivableAdjustments == null))
                {
                    _ReceivableAdjustments = base.CreateObjectSet<ReceivableAdjustment>("ReceivableAdjustments");
                }
                return _ReceivableAdjustments;
            }
        }
        private ObjectSet<ReceivableAdjustment> _ReceivableAdjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceivableStatu> ReceivableStatus
        {
            get
            {
                if ((_ReceivableStatus == null))
                {
                    _ReceivableStatus = base.CreateObjectSet<ReceivableStatu>("ReceivableStatus");
                }
                return _ReceivableStatus;
            }
        }
        private ObjectSet<ReceivableStatu> _ReceivableStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceivableStatusType> ReceivableStatusTypes
        {
            get
            {
                if ((_ReceivableStatusTypes == null))
                {
                    _ReceivableStatusTypes = base.CreateObjectSet<ReceivableStatusType>("ReceivableStatusTypes");
                }
                return _ReceivableStatusTypes;
            }
        }
        private ObjectSet<ReceivableStatusType> _ReceivableStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceivableType> ReceivableTypes
        {
            get
            {
                if ((_ReceivableTypes == null))
                {
                    _ReceivableTypes = base.CreateObjectSet<ReceivableType>("ReceivableTypes");
                }
                return _ReceivableTypes;
            }
        }
        private ObjectSet<ReceivableType> _ReceivableTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReleaseStatement> ReleaseStatements
        {
            get
            {
                if ((_ReleaseStatements == null))
                {
                    _ReleaseStatements = base.CreateObjectSet<ReleaseStatement>("ReleaseStatements");
                }
                return _ReleaseStatements;
            }
        }
        private ObjectSet<ReleaseStatement> _ReleaseStatements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequiredDocumentType> RequiredDocumentTypes
        {
            get
            {
                if ((_RequiredDocumentTypes == null))
                {
                    _RequiredDocumentTypes = base.CreateObjectSet<RequiredDocumentType>("RequiredDocumentTypes");
                }
                return _RequiredDocumentTypes;
            }
        }
        private ObjectSet<RequiredDocumentType> _RequiredDocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleType> RoleTypes
        {
            get
            {
                if ((_RoleTypes == null))
                {
                    _RoleTypes = base.CreateObjectSet<RoleType>("RoleTypes");
                }
                return _RoleTypes;
            }
        }
        private ObjectSet<RoleType> _RoleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalaryReceipt> SalaryReceipts
        {
            get
            {
                if ((_SalaryReceipts == null))
                {
                    _SalaryReceipts = base.CreateObjectSet<SalaryReceipt>("SalaryReceipts");
                }
                return _SalaryReceipts;
            }
        }
        private ObjectSet<SalaryReceipt> _SalaryReceipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SourceOfIncome> SourceOfIncomes
        {
            get
            {
                if ((_SourceOfIncomes == null))
                {
                    _SourceOfIncomes = base.CreateObjectSet<SourceOfIncome>("SourceOfIncomes");
                }
                return _SourceOfIncomes;
            }
        }
        private ObjectSet<SourceOfIncome> _SourceOfIncomes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecificPaymentType> SpecificPaymentTypes
        {
            get
            {
                if ((_SpecificPaymentTypes == null))
                {
                    _SpecificPaymentTypes = base.CreateObjectSet<SpecificPaymentType>("SpecificPaymentTypes");
                }
                return _SpecificPaymentTypes;
            }
        }
        private ObjectSet<SpecificPaymentType> _SpecificPaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecimenSignature> SpecimenSignatures
        {
            get
            {
                if ((_SpecimenSignatures == null))
                {
                    _SpecimenSignatures = base.CreateObjectSet<SpecimenSignature>("SpecimenSignatures");
                }
                return _SpecimenSignatures;
            }
        }
        private ObjectSet<SpecimenSignature> _SpecimenSignatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittedDocument> SubmittedDocuments
        {
            get
            {
                if ((_SubmittedDocuments == null))
                {
                    _SubmittedDocuments = base.CreateObjectSet<SubmittedDocument>("SubmittedDocuments");
                }
                return _SubmittedDocuments;
            }
        }
        private ObjectSet<SubmittedDocument> _SubmittedDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittedDocumentStatu> SubmittedDocumentStatus
        {
            get
            {
                if ((_SubmittedDocumentStatus == null))
                {
                    _SubmittedDocumentStatus = base.CreateObjectSet<SubmittedDocumentStatu>("SubmittedDocumentStatus");
                }
                return _SubmittedDocumentStatus;
            }
        }
        private ObjectSet<SubmittedDocumentStatu> _SubmittedDocumentStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittedDocumentStatusType> SubmittedDocumentStatusTypes
        {
            get
            {
                if ((_SubmittedDocumentStatusTypes == null))
                {
                    _SubmittedDocumentStatusTypes = base.CreateObjectSet<SubmittedDocumentStatusType>("SubmittedDocumentStatusTypes");
                }
                return _SubmittedDocumentStatusTypes;
            }
        }
        private ObjectSet<SubmittedDocumentStatusType> _SubmittedDocumentStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemSetting> SystemSettings
        {
            get
            {
                if ((_SystemSettings == null))
                {
                    _SystemSettings = base.CreateObjectSet<SystemSetting>("SystemSettings");
                }
                return _SystemSettings;
            }
        }
        private ObjectSet<SystemSetting> _SystemSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemSettingType> SystemSettingTypes
        {
            get
            {
                if ((_SystemSettingTypes == null))
                {
                    _SystemSettingTypes = base.CreateObjectSet<SystemSettingType>("SystemSettingTypes");
                }
                return _SystemSettingTypes;
            }
        }
        private ObjectSet<SystemSettingType> _SystemSettingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Taxpayer> Taxpayers
        {
            get
            {
                if ((_Taxpayers == null))
                {
                    _Taxpayers = base.CreateObjectSet<Taxpayer>("Taxpayers");
                }
                return _Taxpayers;
            }
        }
        private ObjectSet<Taxpayer> _Taxpayers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TelecommunicationsNumber> TelecommunicationsNumbers
        {
            get
            {
                if ((_TelecommunicationsNumbers == null))
                {
                    _TelecommunicationsNumbers = base.CreateObjectSet<TelecommunicationsNumber>("TelecommunicationsNumbers");
                }
                return _TelecommunicationsNumbers;
            }
        }
        private ObjectSet<TelecommunicationsNumber> _TelecommunicationsNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TelecommunicationsNumberType> TelecommunicationsNumberTypes
        {
            get
            {
                if ((_TelecommunicationsNumberTypes == null))
                {
                    _TelecommunicationsNumberTypes = base.CreateObjectSet<TelecommunicationsNumberType>("TelecommunicationsNumberTypes");
                }
                return _TelecommunicationsNumberTypes;
            }
        }
        private ObjectSet<TelecommunicationsNumberType> _TelecommunicationsNumberTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeUnitConversion> TimeUnitConversions
        {
            get
            {
                if ((_TimeUnitConversions == null))
                {
                    _TimeUnitConversions = base.CreateObjectSet<TimeUnitConversion>("TimeUnitConversions");
                }
                return _TimeUnitConversions;
            }
        }
        private ObjectSet<TimeUnitConversion> _TimeUnitConversions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionTaskType> TransactionTaskTypes
        {
            get
            {
                if ((_TransactionTaskTypes == null))
                {
                    _TransactionTaskTypes = base.CreateObjectSet<TransactionTaskType>("TransactionTaskTypes");
                }
                return _TransactionTaskTypes;
            }
        }
        private ObjectSet<TransactionTaskType> _TransactionTaskTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitOfMeasure> UnitOfMeasures
        {
            get
            {
                if ((_UnitOfMeasures == null))
                {
                    _UnitOfMeasures = base.CreateObjectSet<UnitOfMeasure>("UnitOfMeasures");
                }
                return _UnitOfMeasures;
            }
        }
        private ObjectSet<UnitOfMeasure> _UnitOfMeasures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitOfMeasureType> UnitOfMeasureTypes
        {
            get
            {
                if ((_UnitOfMeasureTypes == null))
                {
                    _UnitOfMeasureTypes = base.CreateObjectSet<UnitOfMeasureType>("UnitOfMeasureTypes");
                }
                return _UnitOfMeasureTypes;
            }
        }
        private ObjectSet<UnitOfMeasureType> _UnitOfMeasureTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccount> UserAccounts
        {
            get
            {
                if ((_UserAccounts == null))
                {
                    _UserAccounts = base.CreateObjectSet<UserAccount>("UserAccounts");
                }
                return _UserAccounts;
            }
        }
        private ObjectSet<UserAccount> _UserAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountStatu> UserAccountStatus
        {
            get
            {
                if ((_UserAccountStatus == null))
                {
                    _UserAccountStatus = base.CreateObjectSet<UserAccountStatu>("UserAccountStatus");
                }
                return _UserAccountStatus;
            }
        }
        private ObjectSet<UserAccountStatu> _UserAccountStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountStatusType> UserAccountStatusTypes
        {
            get
            {
                if ((_UserAccountStatusTypes == null))
                {
                    _UserAccountStatusTypes = base.CreateObjectSet<UserAccountStatusType>("UserAccountStatusTypes");
                }
                return _UserAccountStatusTypes;
            }
        }
        private ObjectSet<UserAccountStatusType> _UserAccountStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountType> UserAccountTypes
        {
            get
            {
                if ((_UserAccountTypes == null))
                {
                    _UserAccountTypes = base.CreateObjectSet<UserAccountType>("UserAccountTypes");
                }
                return _UserAccountTypes;
            }
        }
        private ObjectSet<UserAccountType> _UserAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleType> VehicleTypes
        {
            get
            {
                if ((_VehicleTypes == null))
                {
                    _VehicleTypes = base.CreateObjectSet<VehicleType>("VehicleTypes");
                }
                return _VehicleTypes;
            }
        }
        private ObjectSet<VehicleType> _VehicleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgreementViewList> AgreementViewLists
        {
            get
            {
                if ((_AgreementViewLists == null))
                {
                    _AgreementViewLists = base.CreateObjectSet<AgreementViewList>("AgreementViewLists");
                }
                return _AgreementViewLists;
            }
        }
        private ObjectSet<AgreementViewList> _AgreementViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllowedCustomersView> AllowedCustomersViews
        {
            get
            {
                if ((_AllowedCustomersViews == null))
                {
                    _AllowedCustomersViews = base.CreateObjectSet<AllowedCustomersView>("AllowedCustomersViews");
                }
                return _AllowedCustomersViews;
            }
        }
        private ObjectSet<AllowedCustomersView> _AllowedCustomersViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllowedEmployeeViewList> AllowedEmployeeViewLists
        {
            get
            {
                if ((_AllowedEmployeeViewLists == null))
                {
                    _AllowedEmployeeViewLists = base.CreateObjectSet<AllowedEmployeeViewList>("AllowedEmployeeViewLists");
                }
                return _AllowedEmployeeViewLists;
            }
        }
        private ObjectSet<AllowedEmployeeViewList> _AllowedEmployeeViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllowedGuarantorsViewList> AllowedGuarantorsViewLists
        {
            get
            {
                if ((_AllowedGuarantorsViewLists == null))
                {
                    _AllowedGuarantorsViewLists = base.CreateObjectSet<AllowedGuarantorsViewList>("AllowedGuarantorsViewLists");
                }
                return _AllowedGuarantorsViewLists;
            }
        }
        private ObjectSet<AllowedGuarantorsViewList> _AllowedGuarantorsViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllowedMortgageeViewList> AllowedMortgageeViewLists
        {
            get
            {
                if ((_AllowedMortgageeViewLists == null))
                {
                    _AllowedMortgageeViewLists = base.CreateObjectSet<AllowedMortgageeViewList>("AllowedMortgageeViewLists");
                }
                return _AllowedMortgageeViewLists;
            }
        }
        private ObjectSet<AllowedMortgageeViewList> _AllowedMortgageeViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankViewList> BankViewLists
        {
            get
            {
                if ((_BankViewLists == null))
                {
                    _BankViewLists = base.CreateObjectSet<BankViewList>("BankViewLists");
                }
                return _BankViewLists;
            }
        }
        private ObjectSet<BankViewList> _BankViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChequeViewList> ChequeViewLists
        {
            get
            {
                if ((_ChequeViewLists == null))
                {
                    _ChequeViewLists = base.CreateObjectSet<ChequeViewList>("ChequeViewLists");
                }
                return _ChequeViewLists;
            }
        }
        private ObjectSet<ChequeViewList> _ChequeViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoBorrowersViewList> CoBorrowersViewLists
        {
            get
            {
                if ((_CoBorrowersViewLists == null))
                {
                    _CoBorrowersViewLists = base.CreateObjectSet<CoBorrowersViewList>("CoBorrowersViewLists");
                }
                return _CoBorrowersViewLists;
            }
        }
        private ObjectSet<CoBorrowersViewList> _CoBorrowersViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollectionViewList> CollectionViewLists
        {
            get
            {
                if ((_CollectionViewLists == null))
                {
                    _CollectionViewLists = base.CreateObjectSet<CollectionViewList>("CollectionViewLists");
                }
                return _CollectionViewLists;
            }
        }
        private ObjectSet<CollectionViewList> _CollectionViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactViewList> ContactViewLists
        {
            get
            {
                if ((_ContactViewLists == null))
                {
                    _ContactViewLists = base.CreateObjectSet<ContactViewList>("ContactViewLists");
                }
                return _ContactViewLists;
            }
        }
        private ObjectSet<ContactViewList> _ContactViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoOwnerGuarantorViewList> CoOwnerGuarantorViewLists
        {
            get
            {
                if ((_CoOwnerGuarantorViewLists == null))
                {
                    _CoOwnerGuarantorViewLists = base.CreateObjectSet<CoOwnerGuarantorViewList>("CoOwnerGuarantorViewLists");
                }
                return _CoOwnerGuarantorViewLists;
            }
        }
        private ObjectSet<CoOwnerGuarantorViewList> _CoOwnerGuarantorViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerAndCoBorrowerListView> CustomerAndCoBorrowerListViews
        {
            get
            {
                if ((_CustomerAndCoBorrowerListViews == null))
                {
                    _CustomerAndCoBorrowerListViews = base.CreateObjectSet<CustomerAndCoBorrowerListView>("CustomerAndCoBorrowerListViews");
                }
                return _CustomerAndCoBorrowerListViews;
            }
        }
        private ObjectSet<CustomerAndCoBorrowerListView> _CustomerAndCoBorrowerListViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerViewList> CustomerViewLists
        {
            get
            {
                if ((_CustomerViewLists == null))
                {
                    _CustomerViewLists = base.CreateObjectSet<CustomerViewList>("CustomerViewLists");
                }
                return _CustomerViewLists;
            }
        }
        private ObjectSet<CustomerViewList> _CustomerViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerWithLoanViewList> CustomerWithLoanViewLists
        {
            get
            {
                if ((_CustomerWithLoanViewLists == null))
                {
                    _CustomerWithLoanViewLists = base.CreateObjectSet<CustomerWithLoanViewList>("CustomerWithLoanViewLists");
                }
                return _CustomerWithLoanViewLists;
            }
        }
        private ObjectSet<CustomerWithLoanViewList> _CustomerWithLoanViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementDetailsView> DisbursementDetailsViews
        {
            get
            {
                if ((_DisbursementDetailsViews == null))
                {
                    _DisbursementDetailsViews = base.CreateObjectSet<DisbursementDetailsView>("DisbursementDetailsViews");
                }
                return _DisbursementDetailsViews;
            }
        }
        private ObjectSet<DisbursementDetailsView> _DisbursementDetailsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementViewList> DisbursementViewLists
        {
            get
            {
                if ((_DisbursementViewLists == null))
                {
                    _DisbursementViewLists = base.CreateObjectSet<DisbursementViewList>("DisbursementViewLists");
                }
                return _DisbursementViewLists;
            }
        }
        private ObjectSet<DisbursementViewList> _DisbursementViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeViewList> EmployeeViewLists
        {
            get
            {
                if ((_EmployeeViewLists == null))
                {
                    _EmployeeViewLists = base.CreateObjectSet<EmployeeViewList>("EmployeeViewLists");
                }
                return _EmployeeViewLists;
            }
        }
        private ObjectSet<EmployeeViewList> _EmployeeViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployersViewList> EmployersViewLists
        {
            get
            {
                if ((_EmployersViewLists == null))
                {
                    _EmployersViewLists = base.CreateObjectSet<EmployersViewList>("EmployersViewLists");
                }
                return _EmployersViewLists;
            }
        }
        private ObjectSet<EmployersViewList> _EmployersViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EncashmentViewList> EncashmentViewLists
        {
            get
            {
                if ((_EncashmentViewLists == null))
                {
                    _EncashmentViewLists = base.CreateObjectSet<EncashmentViewList>("EncashmentViewLists");
                }
                return _EncashmentViewLists;
            }
        }
        private ObjectSet<EncashmentViewList> _EncashmentViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialProductViewList> FinancialProductViewLists
        {
            get
            {
                if ((_FinancialProductViewLists == null))
                {
                    _FinancialProductViewLists = base.CreateObjectSet<FinancialProductViewList>("FinancialProductViewLists");
                }
                return _FinancialProductViewLists;
            }
        }
        private ObjectSet<FinancialProductViewList> _FinancialProductViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GuarantorViewList> GuarantorViewLists
        {
            get
            {
                if ((_GuarantorViewLists == null))
                {
                    _GuarantorViewLists = base.CreateObjectSet<GuarantorViewList>("GuarantorViewLists");
                }
                return _GuarantorViewLists;
            }
        }
        private ObjectSet<GuarantorViewList> _GuarantorViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemsDetailsView> ItemsDetailsViews
        {
            get
            {
                if ((_ItemsDetailsViews == null))
                {
                    _ItemsDetailsViews = base.CreateObjectSet<ItemsDetailsView>("ItemsDetailsViews");
                }
                return _ItemsDetailsViews;
            }
        }
        private ObjectSet<ItemsDetailsView> _ItemsDetailsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanAgreementViewList> LoanAgreementViewLists
        {
            get
            {
                if ((_LoanAgreementViewLists == null))
                {
                    _LoanAgreementViewLists = base.CreateObjectSet<LoanAgreementViewList>("LoanAgreementViewLists");
                }
                return _LoanAgreementViewLists;
            }
        }
        private ObjectSet<LoanAgreementViewList> _LoanAgreementViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanApplicationViewList> LoanApplicationViewLists
        {
            get
            {
                if ((_LoanApplicationViewLists == null))
                {
                    _LoanApplicationViewLists = base.CreateObjectSet<LoanApplicationViewList>("LoanApplicationViewLists");
                }
                return _LoanApplicationViewLists;
            }
        }
        private ObjectSet<LoanApplicationViewList> _LoanApplicationViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanDisbursementViewList> LoanDisbursementViewLists
        {
            get
            {
                if ((_LoanDisbursementViewLists == null))
                {
                    _LoanDisbursementViewLists = base.CreateObjectSet<LoanDisbursementViewList>("LoanDisbursementViewLists");
                }
                return _LoanDisbursementViewLists;
            }
        }
        private ObjectSet<LoanDisbursementViewList> _LoanDisbursementViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanDisbursementVoucherViewList> LoanDisbursementVoucherViewLists
        {
            get
            {
                if ((_LoanDisbursementVoucherViewLists == null))
                {
                    _LoanDisbursementVoucherViewLists = base.CreateObjectSet<LoanDisbursementVoucherViewList>("LoanDisbursementVoucherViewLists");
                }
                return _LoanDisbursementVoucherViewLists;
            }
        }
        private ObjectSet<LoanDisbursementVoucherViewList> _LoanDisbursementVoucherViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanViewList> LoanViewLists
        {
            get
            {
                if ((_LoanViewLists == null))
                {
                    _LoanViewLists = base.CreateObjectSet<LoanViewList>("LoanViewLists");
                }
                return _LoanViewLists;
            }
        }
        private ObjectSet<LoanViewList> _LoanViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OtherDisbursementDetail> OtherDisbursementDetails
        {
            get
            {
                if ((_OtherDisbursementDetails == null))
                {
                    _OtherDisbursementDetails = base.CreateObjectSet<OtherDisbursementDetail>("OtherDisbursementDetails");
                }
                return _OtherDisbursementDetails;
            }
        }
        private ObjectSet<OtherDisbursementDetail> _OtherDisbursementDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PastDueInterestRateViewList> PastDueInterestRateViewLists
        {
            get
            {
                if ((_PastDueInterestRateViewLists == null))
                {
                    _PastDueInterestRateViewLists = base.CreateObjectSet<PastDueInterestRateViewList>("PastDueInterestRateViewLists");
                }
                return _PastDueInterestRateViewLists;
            }
        }
        private ObjectSet<PastDueInterestRateViewList> _PastDueInterestRateViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentHistoryViewList> PaymentHistoryViewLists
        {
            get
            {
                if ((_PaymentHistoryViewLists == null))
                {
                    _PaymentHistoryViewLists = base.CreateObjectSet<PaymentHistoryViewList>("PaymentHistoryViewLists");
                }
                return _PaymentHistoryViewLists;
            }
        }
        private ObjectSet<PaymentHistoryViewList> _PaymentHistoryViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PettyCashLoanApplicationViewList> PettyCashLoanApplicationViewLists
        {
            get
            {
                if ((_PettyCashLoanApplicationViewLists == null))
                {
                    _PettyCashLoanApplicationViewLists = base.CreateObjectSet<PettyCashLoanApplicationViewList>("PettyCashLoanApplicationViewLists");
                }
                return _PettyCashLoanApplicationViewLists;
            }
        }
        private ObjectSet<PettyCashLoanApplicationViewList> _PettyCashLoanApplicationViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RediscountingViewList> RediscountingViewLists
        {
            get
            {
                if ((_RediscountingViewLists == null))
                {
                    _RediscountingViewLists = base.CreateObjectSet<RediscountingViewList>("RediscountingViewLists");
                }
                return _RediscountingViewLists;
            }
        }
        private ObjectSet<RediscountingViewList> _RediscountingViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittedDocumentView> SubmittedDocumentViews
        {
            get
            {
                if ((_SubmittedDocumentViews == null))
                {
                    _SubmittedDocumentViews = base.CreateObjectSet<SubmittedDocumentView>("SubmittedDocumentViews");
                }
                return _SubmittedDocumentViews;
            }
        }
        private ObjectSet<SubmittedDocumentView> _SubmittedDocumentViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountsViewList> UserAccountsViewLists
        {
            get
            {
                if ((_UserAccountsViewLists == null))
                {
                    _UserAccountsViewLists = base.CreateObjectSet<UserAccountsViewList>("UserAccountsViewLists");
                }
                return _UserAccountsViewLists;
            }
        }
        private ObjectSet<UserAccountsViewList> _UserAccountsViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersViewList> UsersViewLists
        {
            get
            {
                if ((_UsersViewLists == null))
                {
                    _UsersViewLists = base.CreateObjectSet<UsersViewList>("UsersViewLists");
                }
                return _UsersViewLists;
            }
        }
        private ObjectSet<UsersViewList> _UsersViewLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VoucherViewList> VoucherViewLists
        {
            get
            {
                if ((_VoucherViewLists == null))
                {
                    _VoucherViewLists = base.CreateObjectSet<VoucherViewList>("VoucherViewLists");
                }
                return _VoucherViewLists;
            }
        }
        private ObjectSet<VoucherViewList> _VoucherViewLists;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addenda EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddenda(Addendum addendum)
        {
            base.AddObject("Addenda", addendum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjustmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjustmentTypes(AdjustmentType adjustmentType)
        {
            base.AddObject("AdjustmentTypes", adjustmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Agreements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgreements(Agreement agreement)
        {
            base.AddObject("Agreements", agreement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgreementItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgreementItems(AgreementItem agreementItem)
        {
            base.AddObject("AgreementItems", agreementItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgreementRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgreementRoles(AgreementRole agreementRole)
        {
            base.AddObject("AgreementRoles", agreementRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgreementTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgreementTypes(AgreementType agreementType)
        {
            base.AddObject("AgreementTypes", agreementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AmortizationSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAmortizationSchedules(AmortizationSchedule amortizationSchedule)
        {
            base.AddObject("AmortizationSchedules", amortizationSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AmortizationScheduleItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAmortizationScheduleItems(AmortizationScheduleItem amortizationScheduleItem)
        {
            base.AddObject("AmortizationScheduleItems", amortizationScheduleItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationItems(ApplicationItem applicationItem)
        {
            base.AddObject("ApplicationItems", applicationItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationTypes(ApplicationType applicationType)
        {
            base.AddObject("ApplicationTypes", applicationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssets(Asset asset)
        {
            base.AddObject("Assets", asset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetAppraisals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetAppraisals(AssetAppraisal assetAppraisal)
        {
            base.AddObject("AssetAppraisals", assetAppraisal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetRoles(AssetRole assetRole)
        {
            base.AddObject("AssetRoles", assetRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetTypes(AssetType assetType)
        {
            base.AddObject("AssetTypes", assetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanks(Bank bank)
        {
            base.AddObject("Banks", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankAccounts(BankAccount bankAccount)
        {
            base.AddObject("BankAccounts", bankAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankAccountTypes(BankAccountType bankAccountType)
        {
            base.AddObject("BankAccountTypes", bankAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankStatus(BankStatu bankStatu)
        {
            base.AddObject("BankStatus", bankStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankStatusTypes(BankStatusType bankStatusType)
        {
            base.AddObject("BankStatusTypes", bankStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillAmounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillAmounts(BillAmount billAmount)
        {
            base.AddObject("BillAmounts", billAmount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CashOnVaults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCashOnVaults(CashOnVault cashOnVault)
        {
            base.AddObject("CashOnVaults", cashOnVault);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cheques EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheques(Cheque cheque)
        {
            base.AddObject("Cheques", cheque);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChequeApplicationAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChequeApplicationAssocs(ChequeApplicationAssoc chequeApplicationAssoc)
        {
            base.AddObject("ChequeApplicationAssocs", chequeApplicationAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChequeLoanAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChequeLoanAssocs(ChequeLoanAssoc chequeLoanAssoc)
        {
            base.AddObject("ChequeLoanAssocs", chequeLoanAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChequeStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChequeStatus(ChequeStatu chequeStatu)
        {
            base.AddObject("ChequeStatus", chequeStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChequeStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChequeStatusTypes(ChequeStatusType chequeStatusType)
        {
            base.AddObject("ChequeStatusTypes", chequeStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClassificationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassificationTypes(ClassificationType classificationType)
        {
            base.AddObject("ClassificationTypes", classificationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompromiseAgreements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompromiseAgreements(CompromiseAgreement compromiseAgreement)
        {
            base.AddObject("CompromiseAgreements", compromiseAgreement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ControlNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToControlNumbers(ControlNumber controlNumber)
        {
            base.AddObject("ControlNumbers", controlNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COVTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOVTransactions(COVTransaction cOVTransaction)
        {
            base.AddObject("COVTransactions", cOVTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COVTransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOVTransactionTypes(COVTransactionType cOVTransactionType)
        {
            base.AddObject("COVTransactionTypes", cOVTransactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ctcs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCtcs(Ctc ctc)
        {
            base.AddObject("Ctcs", ctc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerCategories(CustomerCategory customerCategory)
        {
            base.AddObject("CustomerCategories", customerCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerCategoryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerCategoryTypes(CustomerCategoryType customerCategoryType)
        {
            base.AddObject("CustomerCategoryTypes", customerCategoryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerClassifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerClassifications(CustomerClassification customerClassification)
        {
            base.AddObject("CustomerClassifications", customerClassification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerSourceOfIncomes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerSourceOfIncomes(CustomerSourceOfIncome customerSourceOfIncome)
        {
            base.AddObject("CustomerSourceOfIncomes", customerSourceOfIncome);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerStatus(CustomerStatu customerStatu)
        {
            base.AddObject("CustomerStatus", customerStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerStatusTypes(CustomerStatusType customerStatusType)
        {
            base.AddObject("CustomerStatusTypes", customerStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DemandLetters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDemandLetters(DemandLetter demandLetter)
        {
            base.AddObject("DemandLetters", demandLetter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DemandLetterStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDemandLetterStatus(DemandLetterStatu demandLetterStatu)
        {
            base.AddObject("DemandLetterStatus", demandLetterStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DemandLetterStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDemandLetterStatusTypes(DemandLetterStatusType demandLetterStatusType)
        {
            base.AddObject("DemandLetterStatusTypes", demandLetterStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Denominations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDenominations(Denomination denomination)
        {
            base.AddObject("Denominations", denomination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Disbursements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursements(Disbursement disbursement)
        {
            base.AddObject("Disbursements", disbursement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementItems(DisbursementItem disbursementItem)
        {
            base.AddObject("DisbursementItems", disbursementItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementTypes(DisbursementType disbursementType)
        {
            base.AddObject("DisbursementTypes", disbursementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementVcrStatTypeAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementVcrStatTypeAssocs(DisbursementVcrStatTypeAssoc disbursementVcrStatTypeAssoc)
        {
            base.AddObject("DisbursementVcrStatTypeAssocs", disbursementVcrStatTypeAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementVcrStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementVcrStatus(DisbursementVcrStatu disbursementVcrStatu)
        {
            base.AddObject("DisbursementVcrStatus", disbursementVcrStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementVcrStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementVcrStatusTypes(DisbursementVcrStatusType disbursementVcrStatusType)
        {
            base.AddObject("DisbursementVcrStatusTypes", disbursementVcrStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DistrictTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistrictTypes(DistrictType districtType)
        {
            base.AddObject("DistrictTypes", districtType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentPages(DocumentPage documentPage)
        {
            base.AddObject("DocumentPages", documentPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EducAttainmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducAttainmentTypes(EducAttainmentType educAttainmentType)
        {
            base.AddObject("EducAttainmentTypes", educAttainmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElectronicAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElectronicAddresses(ElectronicAddress electronicAddress)
        {
            base.AddObject("ElectronicAddresses", electronicAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElectronicAddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElectronicAddressTypes(ElectronicAddressType electronicAddressType)
        {
            base.AddObject("ElectronicAddressTypes", electronicAddressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePositionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePositionTypes(EmployeePositionType employeePositionType)
        {
            base.AddObject("EmployeePositionTypes", employeePositionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployments(Employment employment)
        {
            base.AddObject("Employments", employment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Encashments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEncashments(Encashment encashment)
        {
            base.AddObject("Encashments", encashment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExchangeRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExchangeRates(ExchangeRate exchangeRate)
        {
            base.AddObject("ExchangeRates", exchangeRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExchangeRateTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExchangeRateTypes(ExchangeRateType exchangeRateType)
        {
            base.AddObject("ExchangeRateTypes", exchangeRateType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFees(Fee fee)
        {
            base.AddObject("Fees", fee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeePayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeePayments(FeePayment feePayment)
        {
            base.AddObject("FeePayments", feePayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinAcctTrans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinAcctTrans(FinAcctTran finAcctTran)
        {
            base.AddObject("FinAcctTrans", finAcctTran);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinAcctTransRels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinAcctTransRels(FinAcctTransRel finAcctTransRel)
        {
            base.AddObject("FinAcctTransRels", finAcctTransRel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinAcctTransRelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinAcctTransRelTypes(FinAcctTransRelType finAcctTransRelType)
        {
            base.AddObject("FinAcctTransRelTypes", finAcctTransRelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinAcctTransStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinAcctTransStatusTypes(FinAcctTransStatusType finAcctTransStatusType)
        {
            base.AddObject("FinAcctTransStatusTypes", finAcctTransStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinAcctTransTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinAcctTransTasks(FinAcctTransTask finAcctTransTask)
        {
            base.AddObject("FinAcctTransTasks", finAcctTransTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialAccounts(FinancialAccount financialAccount)
        {
            base.AddObject("FinancialAccounts", financialAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialAccountProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialAccountProducts(FinancialAccountProduct financialAccountProduct)
        {
            base.AddObject("FinancialAccountProducts", financialAccountProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialAccountRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialAccountRoles(FinancialAccountRole financialAccountRole)
        {
            base.AddObject("FinancialAccountRoles", financialAccountRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialAccountTypes(FinancialAccountType financialAccountType)
        {
            base.AddObject("FinancialAccountTypes", financialAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialAcctNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialAcctNotifications(FinancialAcctNotification financialAcctNotification)
        {
            base.AddObject("FinancialAcctNotifications", financialAcctNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialAcctNotificationTyps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialAcctNotificationTyps(FinancialAcctNotificationTyp financialAcctNotificationTyp)
        {
            base.AddObject("FinancialAcctNotificationTyps", financialAcctNotificationTyp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialProducts(FinancialProduct financialProduct)
        {
            base.AddObject("FinancialProducts", financialProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinlAcctTransnStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinlAcctTransnStatus(FinlAcctTransnStatu finlAcctTransnStatu)
        {
            base.AddObject("FinlAcctTransnStatus", finlAcctTransnStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinlAcctTransTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinlAcctTransTypes(FinlAcctTransType finlAcctTransType)
        {
            base.AddObject("FinlAcctTransTypes", finlAcctTransType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForeignExchanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForeignExchanges(ForeignExchange foreignExchange)
        {
            base.AddObject("ForeignExchanges", foreignExchange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForeignExchangeDetailAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForeignExchangeDetailAssocs(ForeignExchangeDetailAssoc foreignExchangeDetailAssoc)
        {
            base.AddObject("ForeignExchangeDetailAssocs", foreignExchangeDetailAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForExCheques EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForExCheques(ForExCheque forExCheque)
        {
            base.AddObject("ForExCheques", forExCheque);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForExDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForExDetails(ForExDetail forExDetail)
        {
            base.AddObject("ForExDetails", forExDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormDetails(FormDetail formDetail)
        {
            base.AddObject("FormDetails", formDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormTypes(FormType formType)
        {
            base.AddObject("FormTypes", formType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GenderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenderTypes(GenderType genderType)
        {
            base.AddObject("GenderTypes", genderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Holidays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHolidays(Holiday holiday)
        {
            base.AddObject("Holidays", holiday);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HomeOwnerships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHomeOwnerships(HomeOwnership homeOwnership)
        {
            base.AddObject("HomeOwnerships", homeOwnership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HomeOwnershipTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHomeOwnershipTypes(HomeOwnershipType homeOwnershipType)
        {
            base.AddObject("HomeOwnershipTypes", homeOwnershipType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IdentificationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdentificationTypes(IdentificationType identificationType)
        {
            base.AddObject("IdentificationTypes", identificationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InterestItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInterestItems(InterestItem interestItem)
        {
            base.AddObject("InterestItems", interestItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InterestTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInterestTypes(InterestType interestType)
        {
            base.AddObject("InterestTypes", interestType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLands(Land land)
        {
            base.AddObject("Lands", land);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LandTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLandTypes(LandType landType)
        {
            base.AddObject("LandTypes", landType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAccounts(LoanAccount loanAccount)
        {
            base.AddObject("LoanAccounts", loanAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAccountStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAccountStatus(LoanAccountStatu loanAccountStatu)
        {
            base.AddObject("LoanAccountStatus", loanAccountStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAccountStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAccountStatusTypes(LoanAccountStatusType loanAccountStatusType)
        {
            base.AddObject("LoanAccountStatusTypes", loanAccountStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAccountStatusTypeAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAccountStatusTypeAssocs(LoanAccountStatusTypeAssoc loanAccountStatusTypeAssoc)
        {
            base.AddObject("LoanAccountStatusTypeAssocs", loanAccountStatusTypeAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAdjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAdjustments(LoanAdjustment loanAdjustment)
        {
            base.AddObject("LoanAdjustments", loanAdjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAgreements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAgreements(LoanAgreement loanAgreement)
        {
            base.AddObject("LoanAgreements", loanAgreement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanApplications(LoanApplication loanApplication)
        {
            base.AddObject("LoanApplications", loanApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanApplicationFees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanApplicationFees(LoanApplicationFee loanApplicationFee)
        {
            base.AddObject("LoanApplicationFees", loanApplicationFee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanApplicationRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanApplicationRoles(LoanApplicationRole loanApplicationRole)
        {
            base.AddObject("LoanApplicationRoles", loanApplicationRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanApplicationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanApplicationStatus(LoanApplicationStatu loanApplicationStatu)
        {
            base.AddObject("LoanApplicationStatus", loanApplicationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanApplicationStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanApplicationStatusTypes(LoanApplicationStatusType loanApplicationStatusType)
        {
            base.AddObject("LoanApplicationStatusTypes", loanApplicationStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanDisbursements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanDisbursements(LoanDisbursement loanDisbursement)
        {
            base.AddObject("LoanDisbursements", loanDisbursement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanDisbursementTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanDisbursementTypes(LoanDisbursementType loanDisbursementType)
        {
            base.AddObject("LoanDisbursementTypes", loanDisbursementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanDisbursementVcrs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanDisbursementVcrs(LoanDisbursementVcr loanDisbursementVcr)
        {
            base.AddObject("LoanDisbursementVcrs", loanDisbursementVcr);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanModifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanModifications(LoanModification loanModification)
        {
            base.AddObject("LoanModifications", loanModification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanModificationPrevItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanModificationPrevItems(LoanModificationPrevItem loanModificationPrevItem)
        {
            base.AddObject("LoanModificationPrevItems", loanModificationPrevItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanModificationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanModificationStatus(LoanModificationStatu loanModificationStatu)
        {
            base.AddObject("LoanModificationStatus", loanModificationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanModificationStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanModificationStatusTypes(LoanModificationStatusType loanModificationStatusType)
        {
            base.AddObject("LoanModificationStatusTypes", loanModificationStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanModificationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanModificationTypes(LoanModificationType loanModificationType)
        {
            base.AddObject("LoanModificationTypes", loanModificationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanPayments(LoanPayment loanPayment)
        {
            base.AddObject("LoanPayments", loanPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanReAvailments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanReAvailments(LoanReAvailment loanReAvailment)
        {
            base.AddObject("LoanReAvailments", loanReAvailment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanStatements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanStatements(LoanStatement loanStatement)
        {
            base.AddObject("LoanStatements", loanStatement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanTerms(LoanTerm loanTerm)
        {
            base.AddObject("LoanTerms", loanTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Machines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMachines(Machine machine)
        {
            base.AddObject("Machines", machine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaritalStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaritalStatus(MaritalStatu maritalStatu)
        {
            base.AddObject("MaritalStatus", maritalStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaritalStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaritalStatusTypes(MaritalStatusType maritalStatusType)
        {
            base.AddObject("MaritalStatusTypes", maritalStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NationalityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNationalityTypes(NationalityType nationalityType)
        {
            base.AddObject("NationalityTypes", nationalityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NonProductFees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNonProductFees(NonProductFee nonProductFee)
        {
            base.AddObject("NonProductFees", nonProductFee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationTypes(OrganizationType organizationType)
        {
            base.AddObject("OrganizationTypes", organizationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OtherDisbursementParticulars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOtherDisbursementParticulars(OtherDisbursementParticular otherDisbursementParticular)
        {
            base.AddObject("OtherDisbursementParticulars", otherDisbursementParticular);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParties(Party party)
        {
            base.AddObject("Parties", party);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartyRelationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartyRelationships(PartyRelationship partyRelationship)
        {
            base.AddObject("PartyRelationships", partyRelationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartyRelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartyRelTypes(PartyRelType partyRelType)
        {
            base.AddObject("PartyRelTypes", partyRelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartyRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartyRoles(PartyRole partyRole)
        {
            base.AddObject("PartyRoles", partyRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartyRoleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartyRoleTypes(PartyRoleType partyRoleType)
        {
            base.AddObject("PartyRoleTypes", partyRoleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartyTypes(PartyType partyType)
        {
            base.AddObject("PartyTypes", partyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentApplications(PaymentApplication paymentApplication)
        {
            base.AddObject("PaymentApplications", paymentApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentCurrencyAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentCurrencyAssocs(PaymentCurrencyAssoc paymentCurrencyAssoc)
        {
            base.AddObject("PaymentCurrencyAssocs", paymentCurrencyAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMethodTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMethodTypes(PaymentMethodType paymentMethodType)
        {
            base.AddObject("PaymentMethodTypes", paymentMethodType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonIdentifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonIdentifications(PersonIdentification personIdentification)
        {
            base.AddObject("PersonIdentifications", personIdentification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonNames(PersonName personName)
        {
            base.AddObject("PersonNames", personName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonNameTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonNameTypes(PersonNameType personNameType)
        {
            base.AddObject("PersonNameTypes", personNameType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PettyCashLoanApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPettyCashLoanApplications(PettyCashLoanApplication pettyCashLoanApplication)
        {
            base.AddObject("PettyCashLoanApplications", pettyCashLoanApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PettyCashLoanApplicationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPettyCashLoanApplicationStatus(PettyCashLoanApplicationStatu pettyCashLoanApplicationStatu)
        {
            base.AddObject("PettyCashLoanApplicationStatus", pettyCashLoanApplicationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PettyCashLoanAppStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPettyCashLoanAppStatusTypes(PettyCashLoanAppStatusType pettyCashLoanAppStatusType)
        {
            base.AddObject("PettyCashLoanAppStatusTypes", pettyCashLoanAppStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PettyCashLoanAppStatusTypeAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPettyCashLoanAppStatusTypeAssocs(PettyCashLoanAppStatusTypeAssoc pettyCashLoanAppStatusTypeAssoc)
        {
            base.AddObject("PettyCashLoanAppStatusTypeAssocs", pettyCashLoanAppStatusTypeAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PettyCashLoanItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPettyCashLoanItems(PettyCashLoanItem pettyCashLoanItem)
        {
            base.AddObject("PettyCashLoanItems", pettyCashLoanItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostalAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostalAddresses(PostalAddress postalAddress)
        {
            base.AddObject("PostalAddresses", postalAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostalAddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostalAddressTypes(PostalAddressType postalAddressType)
        {
            base.AddObject("PostalAddressTypes", postalAddressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCategories(ProductCategory productCategory)
        {
            base.AddObject("ProductCategories", productCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategoryClassifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCategoryClassifications(ProductCategoryClassification productCategoryClassification)
        {
            base.AddObject("ProductCategoryClassifications", productCategoryClassification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategoryFeatureFunctionalApplicabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCategoryFeatureFunctionalApplicabilities(ProductCategoryFeatureFunctionalApplicability productCategoryFeatureFunctionalApplicability)
        {
            base.AddObject("ProductCategoryFeatureFunctionalApplicabilities", productCategoryFeatureFunctionalApplicability);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategoryRollups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCategoryRollups(ProductCategoryRollup productCategoryRollup)
        {
            base.AddObject("ProductCategoryRollups", productCategoryRollup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCatFeatApplicabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCatFeatApplicabilities(ProductCatFeatApplicability productCatFeatApplicability)
        {
            base.AddObject("ProductCatFeatApplicabilities", productCatFeatApplicability);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductFeatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductFeatures(ProductFeature productFeature)
        {
            base.AddObject("ProductFeatures", productFeature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductFeatureApplicabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductFeatureApplicabilities(ProductFeatureApplicability productFeatureApplicability)
        {
            base.AddObject("ProductFeatureApplicabilities", productFeatureApplicability);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductFeatureCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductFeatureCategories(ProductFeatureCategory productFeatureCategory)
        {
            base.AddObject("ProductFeatureCategories", productFeatureCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductRequiredDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductRequiredDocuments(ProductRequiredDocument productRequiredDocument)
        {
            base.AddObject("ProductRequiredDocuments", productRequiredDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductStatus(ProductStatu productStatu)
        {
            base.AddObject("ProductStatus", productStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductStatusTypes(ProductStatusType productStatusType)
        {
            base.AddObject("ProductStatusTypes", productStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceipts(Receipt receipt)
        {
            base.AddObject("Receipts", receipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptPaymentAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptPaymentAssocs(ReceiptPaymentAssoc receiptPaymentAssoc)
        {
            base.AddObject("ReceiptPaymentAssocs", receiptPaymentAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptStatus(ReceiptStatu receiptStatu)
        {
            base.AddObject("ReceiptStatus", receiptStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptStatusTypes(ReceiptStatusType receiptStatusType)
        {
            base.AddObject("ReceiptStatusTypes", receiptStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptStatusTypeAssocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptStatusTypeAssocs(ReceiptStatusTypeAssoc receiptStatusTypeAssoc)
        {
            base.AddObject("ReceiptStatusTypeAssocs", receiptStatusTypeAssoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receivables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivables(Receivable receivable)
        {
            base.AddObject("Receivables", receivable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceivableAdjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivableAdjustments(ReceivableAdjustment receivableAdjustment)
        {
            base.AddObject("ReceivableAdjustments", receivableAdjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceivableStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivableStatus(ReceivableStatu receivableStatu)
        {
            base.AddObject("ReceivableStatus", receivableStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceivableStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivableStatusTypes(ReceivableStatusType receivableStatusType)
        {
            base.AddObject("ReceivableStatusTypes", receivableStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceivableTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivableTypes(ReceivableType receivableType)
        {
            base.AddObject("ReceivableTypes", receivableType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReleaseStatements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReleaseStatements(ReleaseStatement releaseStatement)
        {
            base.AddObject("ReleaseStatements", releaseStatement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequiredDocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequiredDocumentTypes(RequiredDocumentType requiredDocumentType)
        {
            base.AddObject("RequiredDocumentTypes", requiredDocumentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleTypes(RoleType roleType)
        {
            base.AddObject("RoleTypes", roleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalaryReceipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalaryReceipts(SalaryReceipt salaryReceipt)
        {
            base.AddObject("SalaryReceipts", salaryReceipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceOfIncomes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceOfIncomes(SourceOfIncome sourceOfIncome)
        {
            base.AddObject("SourceOfIncomes", sourceOfIncome);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecificPaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecificPaymentTypes(SpecificPaymentType specificPaymentType)
        {
            base.AddObject("SpecificPaymentTypes", specificPaymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecimenSignatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecimenSignatures(SpecimenSignature specimenSignature)
        {
            base.AddObject("SpecimenSignatures", specimenSignature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittedDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittedDocuments(SubmittedDocument submittedDocument)
        {
            base.AddObject("SubmittedDocuments", submittedDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittedDocumentStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittedDocumentStatus(SubmittedDocumentStatu submittedDocumentStatu)
        {
            base.AddObject("SubmittedDocumentStatus", submittedDocumentStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittedDocumentStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittedDocumentStatusTypes(SubmittedDocumentStatusType submittedDocumentStatusType)
        {
            base.AddObject("SubmittedDocumentStatusTypes", submittedDocumentStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemSettings(SystemSetting systemSetting)
        {
            base.AddObject("SystemSettings", systemSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemSettingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemSettingTypes(SystemSettingType systemSettingType)
        {
            base.AddObject("SystemSettingTypes", systemSettingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Taxpayers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxpayers(Taxpayer taxpayer)
        {
            base.AddObject("Taxpayers", taxpayer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TelecommunicationsNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTelecommunicationsNumbers(TelecommunicationsNumber telecommunicationsNumber)
        {
            base.AddObject("TelecommunicationsNumbers", telecommunicationsNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TelecommunicationsNumberTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTelecommunicationsNumberTypes(TelecommunicationsNumberType telecommunicationsNumberType)
        {
            base.AddObject("TelecommunicationsNumberTypes", telecommunicationsNumberType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeUnitConversions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeUnitConversions(TimeUnitConversion timeUnitConversion)
        {
            base.AddObject("TimeUnitConversions", timeUnitConversion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTaskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTaskTypes(TransactionTaskType transactionTaskType)
        {
            base.AddObject("TransactionTaskTypes", transactionTaskType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitOfMeasures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitOfMeasures(UnitOfMeasure unitOfMeasure)
        {
            base.AddObject("UnitOfMeasures", unitOfMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitOfMeasureTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitOfMeasureTypes(UnitOfMeasureType unitOfMeasureType)
        {
            base.AddObject("UnitOfMeasureTypes", unitOfMeasureType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccounts(UserAccount userAccount)
        {
            base.AddObject("UserAccounts", userAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountStatus(UserAccountStatu userAccountStatu)
        {
            base.AddObject("UserAccountStatus", userAccountStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountStatusTypes(UserAccountStatusType userAccountStatusType)
        {
            base.AddObject("UserAccountStatusTypes", userAccountStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountTypes(UserAccountType userAccountType)
        {
            base.AddObject("UserAccountTypes", userAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicleTypes(VehicleType vehicleType)
        {
            base.AddObject("VehicleTypes", vehicleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgreementViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgreementViewLists(AgreementViewList agreementViewList)
        {
            base.AddObject("AgreementViewLists", agreementViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllowedCustomersViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllowedCustomersViews(AllowedCustomersView allowedCustomersView)
        {
            base.AddObject("AllowedCustomersViews", allowedCustomersView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllowedEmployeeViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllowedEmployeeViewLists(AllowedEmployeeViewList allowedEmployeeViewList)
        {
            base.AddObject("AllowedEmployeeViewLists", allowedEmployeeViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllowedGuarantorsViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllowedGuarantorsViewLists(AllowedGuarantorsViewList allowedGuarantorsViewList)
        {
            base.AddObject("AllowedGuarantorsViewLists", allowedGuarantorsViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllowedMortgageeViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllowedMortgageeViewLists(AllowedMortgageeViewList allowedMortgageeViewList)
        {
            base.AddObject("AllowedMortgageeViewLists", allowedMortgageeViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankViewLists(BankViewList bankViewList)
        {
            base.AddObject("BankViewLists", bankViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChequeViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChequeViewLists(ChequeViewList chequeViewList)
        {
            base.AddObject("ChequeViewLists", chequeViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CoBorrowersViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoBorrowersViewLists(CoBorrowersViewList coBorrowersViewList)
        {
            base.AddObject("CoBorrowersViewLists", coBorrowersViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollectionViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollectionViewLists(CollectionViewList collectionViewList)
        {
            base.AddObject("CollectionViewLists", collectionViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactViewLists(ContactViewList contactViewList)
        {
            base.AddObject("ContactViewLists", contactViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CoOwnerGuarantorViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoOwnerGuarantorViewLists(CoOwnerGuarantorViewList coOwnerGuarantorViewList)
        {
            base.AddObject("CoOwnerGuarantorViewLists", coOwnerGuarantorViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerAndCoBorrowerListViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerAndCoBorrowerListViews(CustomerAndCoBorrowerListView customerAndCoBorrowerListView)
        {
            base.AddObject("CustomerAndCoBorrowerListViews", customerAndCoBorrowerListView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerViewLists(CustomerViewList customerViewList)
        {
            base.AddObject("CustomerViewLists", customerViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerWithLoanViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerWithLoanViewLists(CustomerWithLoanViewList customerWithLoanViewList)
        {
            base.AddObject("CustomerWithLoanViewLists", customerWithLoanViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementDetailsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementDetailsViews(DisbursementDetailsView disbursementDetailsView)
        {
            base.AddObject("DisbursementDetailsViews", disbursementDetailsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementViewLists(DisbursementViewList disbursementViewList)
        {
            base.AddObject("DisbursementViewLists", disbursementViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeViewLists(EmployeeViewList employeeViewList)
        {
            base.AddObject("EmployeeViewLists", employeeViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployersViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployersViewLists(EmployersViewList employersViewList)
        {
            base.AddObject("EmployersViewLists", employersViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EncashmentViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEncashmentViewLists(EncashmentViewList encashmentViewList)
        {
            base.AddObject("EncashmentViewLists", encashmentViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialProductViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialProductViewLists(FinancialProductViewList financialProductViewList)
        {
            base.AddObject("FinancialProductViewLists", financialProductViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GuarantorViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGuarantorViewLists(GuarantorViewList guarantorViewList)
        {
            base.AddObject("GuarantorViewLists", guarantorViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemsDetailsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemsDetailsViews(ItemsDetailsView itemsDetailsView)
        {
            base.AddObject("ItemsDetailsViews", itemsDetailsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanAgreementViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanAgreementViewLists(LoanAgreementViewList loanAgreementViewList)
        {
            base.AddObject("LoanAgreementViewLists", loanAgreementViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanApplicationViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanApplicationViewLists(LoanApplicationViewList loanApplicationViewList)
        {
            base.AddObject("LoanApplicationViewLists", loanApplicationViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanDisbursementViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanDisbursementViewLists(LoanDisbursementViewList loanDisbursementViewList)
        {
            base.AddObject("LoanDisbursementViewLists", loanDisbursementViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanDisbursementVoucherViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanDisbursementVoucherViewLists(LoanDisbursementVoucherViewList loanDisbursementVoucherViewList)
        {
            base.AddObject("LoanDisbursementVoucherViewLists", loanDisbursementVoucherViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanViewLists(LoanViewList loanViewList)
        {
            base.AddObject("LoanViewLists", loanViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OtherDisbursementDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOtherDisbursementDetails(OtherDisbursementDetail otherDisbursementDetail)
        {
            base.AddObject("OtherDisbursementDetails", otherDisbursementDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PastDueInterestRateViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPastDueInterestRateViewLists(PastDueInterestRateViewList pastDueInterestRateViewList)
        {
            base.AddObject("PastDueInterestRateViewLists", pastDueInterestRateViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentHistoryViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentHistoryViewLists(PaymentHistoryViewList paymentHistoryViewList)
        {
            base.AddObject("PaymentHistoryViewLists", paymentHistoryViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PettyCashLoanApplicationViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPettyCashLoanApplicationViewLists(PettyCashLoanApplicationViewList pettyCashLoanApplicationViewList)
        {
            base.AddObject("PettyCashLoanApplicationViewLists", pettyCashLoanApplicationViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RediscountingViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRediscountingViewLists(RediscountingViewList rediscountingViewList)
        {
            base.AddObject("RediscountingViewLists", rediscountingViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittedDocumentViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittedDocumentViews(SubmittedDocumentView submittedDocumentView)
        {
            base.AddObject("SubmittedDocumentViews", submittedDocumentView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountsViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountsViewLists(UserAccountsViewList userAccountsViewList)
        {
            base.AddObject("UserAccountsViewLists", userAccountsViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersViewLists(UsersViewList usersViewList)
        {
            base.AddObject("UsersViewLists", usersViewList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VoucherViewLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVoucherViewLists(VoucherViewList voucherViewList)
        {
            base.AddObject("VoucherViewLists", voucherViewList);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Addendum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Addendum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Addendum object.
        /// </summary>
        /// <param name="addendumId">Initial value of the AddendumId property.</param>
        public static Addendum CreateAddendum(global::System.Int32 addendumId)
        {
            Addendum addendum = new Addendum();
            addendum.AddendumId = addendumId;
            return addendum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddendumId
        {
            get
            {
                return _AddendumId;
            }
            set
            {
                if (_AddendumId != value)
                {
                    OnAddendumIdChanging(value);
                    ReportPropertyChanging("AddendumId");
                    _AddendumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddendumId");
                    OnAddendumIdChanged();
                }
            }
        }
        private global::System.Int32 _AddendumId;
        partial void OnAddendumIdChanging(global::System.Int32 value);
        partial void OnAddendumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                OnAgreementIdChanging(value);
                ReportPropertyChanging("AgreementId");
                _AgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementId");
                OnAgreementIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AgreementId;
        partial void OnAgreementIdChanging(Nullable<global::System.Int32> value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AgreementItemId
        {
            get
            {
                return _AgreementItemId;
            }
            set
            {
                OnAgreementItemIdChanging(value);
                ReportPropertyChanging("AgreementItemId");
                _AgreementItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementItemId");
                OnAgreementItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AgreementItemId;
        partial void OnAgreementItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnAgreementItemIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDENDUM_REFERENCE_AGREEMEN", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDENDUM_REFERENCE_AGREEMEN2", "AgreementItem")]
        public AgreementItem AgreementItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgreementItem>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN2", "AgreementItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgreementItem>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN2", "AgreementItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AgreementItem> AgreementItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgreementItem>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN2", "AgreementItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AgreementItem>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN2", "AgreementItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static Address CreateAddress(global::System.Int32 addressId, global::System.Int32 partyId, global::System.DateTime effectiveDate)
        {
            Address address = new Address();
            address.AddressId = addressId;
            address.PartyId = partyId;
            address.EffectiveDate = effectiveDate;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressTypeId
        {
            get
            {
                return _AddressTypeId;
            }
            set
            {
                OnAddressTypeIdChanging(value);
                ReportPropertyChanging("AddressTypeId");
                _AddressTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressTypeId");
                OnAddressTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressTypeId;
        partial void OnAddressTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                OnAssetIdChanging(value);
                ReportPropertyChanging("AssetId");
                _AssetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetId");
                OnAssetIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AssetId;
        partial void OnAssetIdChanging(Nullable<global::System.Int32> value);
        partial void OnAssetIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_ADDRESST", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("FinancialModel.FK_ADDRESS_REFERENCE_ADDRESST", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("FinancialModel.FK_ADDRESS_REFERENCE_ADDRESST", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("FinancialModel.FK_ADDRESS_REFERENCE_ADDRESST", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("FinancialModel.FK_ADDRESS_REFERENCE_ADDRESST", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_ASSET", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ADDRESS_REFERENCE_ASSET", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ADDRESS_REFERENCE_ASSET", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ADDRESS_REFERENCE_ASSET", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_ADDRESS_REFERENCE_ASSET", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_PARTY", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_ADDRESS_REFERENCE_PARTY", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_ADDRESS_REFERENCE_PARTY", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_ADDRESS_REFERENCE_PARTY", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("FinancialModel.FK_ADDRESS_REFERENCE_PARTY", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ELECTRON_REFERENCE_ADDRESS", "ElectronicAddress")]
        public ElectronicAddress ElectronicAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElectronicAddress>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "ElectronicAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElectronicAddress>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "ElectronicAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ElectronicAddress> ElectronicAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElectronicAddress>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "ElectronicAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ElectronicAddress>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "ElectronicAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_ADDRESS", "PostalAddress")]
        public PostalAddress PostalAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "PostalAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "PostalAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalAddress> PostalAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "PostalAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "PostalAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TELECOMM_REFERENCE_ADDRESS", "TelecommunicationsNumber")]
        public TelecommunicationsNumber TelecommunicationsNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelecommunicationsNumber>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "TelecommunicationsNumber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelecommunicationsNumber>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "TelecommunicationsNumber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TelecommunicationsNumber> TelecommunicationsNumberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelecommunicationsNumber>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "TelecommunicationsNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TelecommunicationsNumber>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "TelecommunicationsNumber", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AddressType CreateAddressType(global::System.Int32 id, global::System.String name)
        {
            AddressType addressType = new AddressType();
            addressType.Id = id;
            addressType.Name = name;
            return addressType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_ADDRESST", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("FinancialModel.FK_ADDRESS_REFERENCE_ADDRESST", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("FinancialModel.FK_ADDRESS_REFERENCE_ADDRESST", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AdjustmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjustmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjustmentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isCreditIndicator">Initial value of the IsCreditIndicator property.</param>
        public static AdjustmentType CreateAdjustmentType(global::System.Int32 id, global::System.String name, global::System.Boolean isCreditIndicator)
        {
            AdjustmentType adjustmentType = new AdjustmentType();
            adjustmentType.Id = id;
            adjustmentType.Name = name;
            adjustmentType.IsCreditIndicator = isCreditIndicator;
            return adjustmentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCreditIndicator
        {
            get
            {
                return _IsCreditIndicator;
            }
            set
            {
                OnIsCreditIndicatorChanging(value);
                ReportPropertyChanging("IsCreditIndicator");
                _IsCreditIndicator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCreditIndicator");
                OnIsCreditIndicatorChanged();
            }
        }
        private global::System.Boolean _IsCreditIndicator;
        partial void OnIsCreditIndicatorChanging(global::System.Boolean value);
        partial void OnIsCreditIndicatorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANADJU_REFERENCE_ADJUSTME", "LoanAdjustment")]
        public EntityCollection<LoanAdjustment> LoanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAdjustment>("FinancialModel.FK_LOANADJU_REFERENCE_ADJUSTME", "LoanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAdjustment>("FinancialModel.FK_LOANADJU_REFERENCE_ADJUSTME", "LoanAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_ADJUSTME", "ReceivableAdjustment")]
        public EntityCollection<ReceivableAdjustment> ReceivableAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceivableAdjustment>("FinancialModel.FK_RECEIVAB_REFERENCE_ADJUSTME", "ReceivableAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceivableAdjustment>("FinancialModel.FK_RECEIVAB_REFERENCE_ADJUSTME", "ReceivableAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Agreement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agreement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Agreement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="agreementTypeId">Initial value of the AgreementTypeId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="agreementDate">Initial value of the AgreementDate property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static Agreement CreateAgreement(global::System.Int32 id, global::System.Int32 agreementTypeId, global::System.Int32 applicationId, global::System.DateTime agreementDate, global::System.DateTime effectiveDate)
        {
            Agreement agreement = new Agreement();
            agreement.Id = id;
            agreement.AgreementTypeId = agreementTypeId;
            agreement.ApplicationId = applicationId;
            agreement.AgreementDate = agreementDate;
            agreement.EffectiveDate = effectiveDate;
            return agreement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementTypeId
        {
            get
            {
                return _AgreementTypeId;
            }
            set
            {
                OnAgreementTypeIdChanging(value);
                ReportPropertyChanging("AgreementTypeId");
                _AgreementTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementTypeId");
                OnAgreementTypeIdChanged();
            }
        }
        private global::System.Int32 _AgreementTypeId;
        partial void OnAgreementTypeIdChanging(global::System.Int32 value);
        partial void OnAgreementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentAgreementId
        {
            get
            {
                return _ParentAgreementId;
            }
            set
            {
                OnParentAgreementIdChanging(value);
                ReportPropertyChanging("ParentAgreementId");
                _ParentAgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentAgreementId");
                OnParentAgreementIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentAgreementId;
        partial void OnParentAgreementIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AgreementDate
        {
            get
            {
                return _AgreementDate;
            }
            set
            {
                OnAgreementDateChanging(value);
                ReportPropertyChanging("AgreementDate");
                _AgreementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementDate");
                OnAgreementDateChanged();
            }
        }
        private global::System.DateTime _AgreementDate;
        partial void OnAgreementDateChanging(global::System.DateTime value);
        partial void OnAgreementDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDENDUM_REFERENCE_AGREEMEN", "Addendum")]
        public EntityCollection<Addendum> Addenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addendum>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN", "Addendum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addendum>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN", "Addendum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN2", "AgreementRole")]
        public EntityCollection<AgreementRole> AgreementRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AgreementRole>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN2", "AgreementRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AgreementRole>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN2", "AgreementRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement1")]
        public EntityCollection<Agreement> Agreement1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement")]
        public Agreement Agreement2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> Agreement2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN3", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN4", "AgreementType")]
        public AgreementType AgreementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgreementType>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN4", "AgreementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgreementType>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN4", "AgreementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AgreementType> AgreementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgreementType>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN4", "AgreementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AgreementType>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN4", "AgreementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN5", "AgreementItem")]
        public EntityCollection<AgreementItem> AgreementItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AgreementItem>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN5", "AgreementItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AgreementItem>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN5", "AgreementItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_APPLICAT", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_AGREEMEN_REFERENCE_APPLICAT", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_AGREEMEN_REFERENCE_APPLICAT", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_AGREEMEN_REFERENCE_APPLICAT", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("FinancialModel.FK_AGREEMEN_REFERENCE_APPLICAT", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COMPROMI_REFERENCE_AGREEMEN", "CompromiseAgreement")]
        public CompromiseAgreement CompromiseAgreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompromiseAgreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "CompromiseAgreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompromiseAgreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "CompromiseAgreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompromiseAgreement> CompromiseAgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompromiseAgreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "CompromiseAgreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompromiseAgreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "CompromiseAgreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_AGREEMEN", "FinancialAccount")]
        public EntityCollection<FinancialAccount> FinancialAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_AGREEMEN", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_AGREEMEN", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAGRE_REFERENCE_AGREEMEN", "LoanAgreement")]
        public LoanAgreement LoanAgreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAgreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "LoanAgreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAgreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "LoanAgreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAgreement> LoanAgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAgreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "LoanAgreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAgreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "LoanAgreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANDISB_REFERENCE_AGREEMEN", "LoanDisbursementVcr")]
        public EntityCollection<LoanDisbursementVcr> LoanDisbursementVcrs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanDisbursementVcr>("FinancialModel.FK_LOANDISB_REFERENCE_AGREEMEN", "LoanDisbursementVcr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanDisbursementVcr>("FinancialModel.FK_LOANDISB_REFERENCE_AGREEMEN", "LoanDisbursementVcr", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AgreementItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgreementItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AgreementItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="loanAmount">Initial value of the LoanAmount property.</param>
        /// <param name="loanTermLength">Initial value of the LoanTermLength property.</param>
        /// <param name="loanTermUom">Initial value of the LoanTermUom property.</param>
        /// <param name="interestComputationMode">Initial value of the InterestComputationMode property.</param>
        /// <param name="interestRate">Initial value of the InterestRate property.</param>
        /// <param name="interestRateDescription">Initial value of the InterestRateDescription property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static AgreementItem CreateAgreementItem(global::System.Int32 id, global::System.Int32 agreementId, global::System.Decimal loanAmount, global::System.Int32 loanTermLength, global::System.String loanTermUom, global::System.String interestComputationMode, global::System.Decimal interestRate, global::System.String interestRateDescription, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            AgreementItem agreementItem = new AgreementItem();
            agreementItem.Id = id;
            agreementItem.AgreementId = agreementId;
            agreementItem.LoanAmount = loanAmount;
            agreementItem.LoanTermLength = loanTermLength;
            agreementItem.LoanTermUom = loanTermUom;
            agreementItem.InterestComputationMode = interestComputationMode;
            agreementItem.InterestRate = interestRate;
            agreementItem.InterestRateDescription = interestRateDescription;
            agreementItem.TransitionDateTime = transitionDateTime;
            agreementItem.IsActive = isActive;
            return agreementItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                OnAgreementIdChanging(value);
                ReportPropertyChanging("AgreementId");
                _AgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementId");
                OnAgreementIdChanged();
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanAmount
        {
            get
            {
                return _LoanAmount;
            }
            set
            {
                OnLoanAmountChanging(value);
                ReportPropertyChanging("LoanAmount");
                _LoanAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAmount");
                OnLoanAmountChanged();
            }
        }
        private global::System.Decimal _LoanAmount;
        partial void OnLoanAmountChanging(global::System.Decimal value);
        partial void OnLoanAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanTermLength
        {
            get
            {
                return _LoanTermLength;
            }
            set
            {
                OnLoanTermLengthChanging(value);
                ReportPropertyChanging("LoanTermLength");
                _LoanTermLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanTermLength");
                OnLoanTermLengthChanged();
            }
        }
        private global::System.Int32 _LoanTermLength;
        partial void OnLoanTermLengthChanging(global::System.Int32 value);
        partial void OnLoanTermLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoanTermUom
        {
            get
            {
                return _LoanTermUom;
            }
            set
            {
                OnLoanTermUomChanging(value);
                ReportPropertyChanging("LoanTermUom");
                _LoanTermUom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoanTermUom");
                OnLoanTermUomChanged();
            }
        }
        private global::System.String _LoanTermUom;
        partial void OnLoanTermUomChanging(global::System.String value);
        partial void OnLoanTermUomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InterestComputationMode
        {
            get
            {
                return _InterestComputationMode;
            }
            set
            {
                OnInterestComputationModeChanging(value);
                ReportPropertyChanging("InterestComputationMode");
                _InterestComputationMode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InterestComputationMode");
                OnInterestComputationModeChanged();
            }
        }
        private global::System.String _InterestComputationMode;
        partial void OnInterestComputationModeChanging(global::System.String value);
        partial void OnInterestComputationModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InterestRate
        {
            get
            {
                return _InterestRate;
            }
            set
            {
                OnInterestRateChanging(value);
                ReportPropertyChanging("InterestRate");
                _InterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestRate");
                OnInterestRateChanged();
            }
        }
        private global::System.Decimal _InterestRate;
        partial void OnInterestRateChanging(global::System.Decimal value);
        partial void OnInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InterestRateDescription
        {
            get
            {
                return _InterestRateDescription;
            }
            set
            {
                OnInterestRateDescriptionChanging(value);
                ReportPropertyChanging("InterestRateDescription");
                _InterestRateDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InterestRateDescription");
                OnInterestRateDescriptionChanged();
            }
        }
        private global::System.String _InterestRateDescription;
        partial void OnInterestRateDescriptionChanging(global::System.String value);
        partial void OnInterestRateDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PastDueInterestRate
        {
            get
            {
                return _PastDueInterestRate;
            }
            set
            {
                OnPastDueInterestRateChanging(value);
                ReportPropertyChanging("PastDueInterestRate");
                _PastDueInterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PastDueInterestRate");
                OnPastDueInterestRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _PastDueInterestRate;
        partial void OnPastDueInterestRateChanging(Nullable<global::System.Decimal> value);
        partial void OnPastDueInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PastDueInterestRateDescript
        {
            get
            {
                return _PastDueInterestRateDescript;
            }
            set
            {
                OnPastDueInterestRateDescriptChanging(value);
                ReportPropertyChanging("PastDueInterestRateDescript");
                _PastDueInterestRateDescript = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PastDueInterestRateDescript");
                OnPastDueInterestRateDescriptChanged();
            }
        }
        private global::System.String _PastDueInterestRateDescript;
        partial void OnPastDueInterestRateDescriptChanging(global::System.String value);
        partial void OnPastDueInterestRateDescriptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentMode
        {
            get
            {
                return _PaymentMode;
            }
            set
            {
                OnPaymentModeChanging(value);
                ReportPropertyChanging("PaymentMode");
                _PaymentMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentMode");
                OnPaymentModeChanged();
            }
        }
        private global::System.String _PaymentMode;
        partial void OnPaymentModeChanging(global::System.String value);
        partial void OnPaymentModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MethodOfChargingInterest
        {
            get
            {
                return _MethodOfChargingInterest;
            }
            set
            {
                OnMethodOfChargingInterestChanging(value);
                ReportPropertyChanging("MethodOfChargingInterest");
                _MethodOfChargingInterest = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MethodOfChargingInterest");
                OnMethodOfChargingInterestChanged();
            }
        }
        private global::System.String _MethodOfChargingInterest;
        partial void OnMethodOfChargingInterestChanging(global::System.String value);
        partial void OnMethodOfChargingInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDENDUM_REFERENCE_AGREEMEN2", "Addendum")]
        public EntityCollection<Addendum> Addenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addendum>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN2", "Addendum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addendum>("FinancialModel.FK_ADDENDUM_REFERENCE_AGREEMEN2", "Addendum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN5", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN5", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN5", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN5", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN5", "Agreement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AgreementRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgreementRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AgreementRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        public static AgreementRole CreateAgreementRole(global::System.Int32 id, global::System.Int32 agreementId, global::System.Int32 partyRoleId)
        {
            AgreementRole agreementRole = new AgreementRole();
            agreementRole.Id = id;
            agreementRole.AgreementId = agreementId;
            agreementRole.PartyRoleId = partyRoleId;
            return agreementRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                OnAgreementIdChanging(value);
                ReportPropertyChanging("AgreementId");
                _AgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementId");
                OnAgreementIdChanged();
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN2", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN2", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN2", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN2", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN2", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_AGREEMEN_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_AGREEMEN_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_AGREEMEN_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_AGREEMEN_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AgreementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgreementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AgreementType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AgreementType CreateAgreementType(global::System.Int32 id, global::System.String name)
        {
            AgreementType agreementType = new AgreementType();
            agreementType.Id = id;
            agreementType.Name = name;
            return agreementType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_AGREEMEN4", "Agreement")]
        public EntityCollection<Agreement> Agreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN4", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_AGREEMEN4", "Agreement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AgreementViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgreementViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AgreementViewList object.
        /// </summary>
        /// <param name="loanAgreementID">Initial value of the LoanAgreementID property.</param>
        /// <param name="loanProduct">Initial value of the LoanProduct property.</param>
        /// <param name="loanDisbursementVcrId">Initial value of the LoanDisbursementVcrId property.</param>
        public static AgreementViewList CreateAgreementViewList(global::System.Int32 loanAgreementID, global::System.String loanProduct, global::System.Int32 loanDisbursementVcrId)
        {
            AgreementViewList agreementViewList = new AgreementViewList();
            agreementViewList.LoanAgreementID = loanAgreementID;
            agreementViewList.LoanProduct = loanProduct;
            agreementViewList.LoanDisbursementVcrId = loanDisbursementVcrId;
            return agreementViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanAgreementID
        {
            get
            {
                return _LoanAgreementID;
            }
            set
            {
                if (_LoanAgreementID != value)
                {
                    OnLoanAgreementIDChanging(value);
                    ReportPropertyChanging("LoanAgreementID");
                    _LoanAgreementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanAgreementID");
                    OnLoanAgreementIDChanged();
                }
            }
        }
        private global::System.Int32 _LoanAgreementID;
        partial void OnLoanAgreementIDChanging(global::System.Int32 value);
        partial void OnLoanAgreementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoanProduct
        {
            get
            {
                return _LoanProduct;
            }
            set
            {
                if (_LoanProduct != value)
                {
                    OnLoanProductChanging(value);
                    ReportPropertyChanging("LoanProduct");
                    _LoanProduct = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoanProduct");
                    OnLoanProductChanged();
                }
            }
        }
        private global::System.String _LoanProduct;
        partial void OnLoanProductChanging(global::System.String value);
        partial void OnLoanProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanDisbursementVcrId
        {
            get
            {
                return _LoanDisbursementVcrId;
            }
            set
            {
                if (_LoanDisbursementVcrId != value)
                {
                    OnLoanDisbursementVcrIdChanging(value);
                    ReportPropertyChanging("LoanDisbursementVcrId");
                    _LoanDisbursementVcrId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanDisbursementVcrId");
                    OnLoanDisbursementVcrIdChanged();
                }
            }
        }
        private global::System.Int32 _LoanDisbursementVcrId;
        partial void OnLoanDisbursementVcrIdChanging(global::System.Int32 value);
        partial void OnLoanDisbursementVcrIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AllowedCustomersView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllowedCustomersView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllowedCustomersView object.
        /// </summary>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static AllowedCustomersView CreateAllowedCustomersView(global::System.Int32 partyRoleId, global::System.Int32 partyId)
        {
            AllowedCustomersView allowedCustomersView = new AllowedCustomersView();
            allowedCustomersView.PartyRoleId = partyRoleId;
            allowedCustomersView.PartyId = partyId;
            return allowedCustomersView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AllowedEmployeeViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllowedEmployeeViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllowedEmployeeViewList object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static AllowedEmployeeViewList CreateAllowedEmployeeViewList(global::System.Int32 partyId)
        {
            AllowedEmployeeViewList allowedEmployeeViewList = new AllowedEmployeeViewList();
            allowedEmployeeViewList.PartyId = partyId;
            return allowedEmployeeViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AllowedGuarantorsViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllowedGuarantorsViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllowedGuarantorsViewList object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static AllowedGuarantorsViewList CreateAllowedGuarantorsViewList(global::System.Int32 partyId)
        {
            AllowedGuarantorsViewList allowedGuarantorsViewList = new AllowedGuarantorsViewList();
            allowedGuarantorsViewList.PartyId = partyId;
            return allowedGuarantorsViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AllowedMortgageeViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllowedMortgageeViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllowedMortgageeViewList object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="partyType">Initial value of the PartyType property.</param>
        public static AllowedMortgageeViewList CreateAllowedMortgageeViewList(global::System.Int32 partyId, global::System.String partyType)
        {
            AllowedMortgageeViewList allowedMortgageeViewList = new AllowedMortgageeViewList();
            allowedMortgageeViewList.PartyId = partyId;
            allowedMortgageeViewList.PartyType = partyType;
            return allowedMortgageeViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartyType
        {
            get
            {
                return _PartyType;
            }
            set
            {
                if (_PartyType != value)
                {
                    OnPartyTypeChanging(value);
                    ReportPropertyChanging("PartyType");
                    _PartyType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PartyType");
                    OnPartyTypeChanged();
                }
            }
        }
        private global::System.String _PartyType;
        partial void OnPartyTypeChanging(global::System.String value);
        partial void OnPartyTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AmortizationSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AmortizationSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AmortizationSchedule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="dateGenerated">Initial value of the DateGenerated property.</param>
        /// <param name="loanReleaseDate">Initial value of the LoanReleaseDate property.</param>
        /// <param name="paymentStartDate">Initial value of the PaymentStartDate property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static AmortizationSchedule CreateAmortizationSchedule(global::System.Int32 id, global::System.Int32 agreementId, global::System.DateTime dateGenerated, global::System.DateTime loanReleaseDate, global::System.DateTime paymentStartDate, global::System.DateTime effectiveDate)
        {
            AmortizationSchedule amortizationSchedule = new AmortizationSchedule();
            amortizationSchedule.Id = id;
            amortizationSchedule.AgreementId = agreementId;
            amortizationSchedule.DateGenerated = dateGenerated;
            amortizationSchedule.LoanReleaseDate = loanReleaseDate;
            amortizationSchedule.PaymentStartDate = paymentStartDate;
            amortizationSchedule.EffectiveDate = effectiveDate;
            return amortizationSchedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                OnAgreementIdChanging(value);
                ReportPropertyChanging("AgreementId");
                _AgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementId");
                OnAgreementIdChanged();
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentAmortizationScheduleId
        {
            get
            {
                return _ParentAmortizationScheduleId;
            }
            set
            {
                OnParentAmortizationScheduleIdChanging(value);
                ReportPropertyChanging("ParentAmortizationScheduleId");
                _ParentAmortizationScheduleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentAmortizationScheduleId");
                OnParentAmortizationScheduleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentAmortizationScheduleId;
        partial void OnParentAmortizationScheduleIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentAmortizationScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateGenerated
        {
            get
            {
                return _DateGenerated;
            }
            set
            {
                OnDateGeneratedChanging(value);
                ReportPropertyChanging("DateGenerated");
                _DateGenerated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateGenerated");
                OnDateGeneratedChanged();
            }
        }
        private global::System.DateTime _DateGenerated;
        partial void OnDateGeneratedChanging(global::System.DateTime value);
        partial void OnDateGeneratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoanReleaseDate
        {
            get
            {
                return _LoanReleaseDate;
            }
            set
            {
                OnLoanReleaseDateChanging(value);
                ReportPropertyChanging("LoanReleaseDate");
                _LoanReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanReleaseDate");
                OnLoanReleaseDateChanged();
            }
        }
        private global::System.DateTime _LoanReleaseDate;
        partial void OnLoanReleaseDateChanging(global::System.DateTime value);
        partial void OnLoanReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentStartDate
        {
            get
            {
                return _PaymentStartDate;
            }
            set
            {
                OnPaymentStartDateChanging(value);
                ReportPropertyChanging("PaymentStartDate");
                _PaymentStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentStartDate");
                OnPaymentStartDateChanged();
            }
        }
        private global::System.DateTime _PaymentStartDate;
        partial void OnPaymentStartDateChanging(global::System.DateTime value);
        partial void OnPaymentStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationScheduleItem")]
        public EntityCollection<AmortizationScheduleItem> AmortizationScheduleItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AmortizationScheduleItem>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationScheduleItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AmortizationScheduleItem>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationScheduleItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule1")]
        public EntityCollection<AmortizationSchedule> AmortizationSchedule1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule")]
        public AmortizationSchedule AmortizationSchedule2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AmortizationSchedule> AmortizationSchedule2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA2", "AmortizationSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_LOANAGRE", "LoanAgreement")]
        public LoanAgreement LoanAgreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAgreement>("FinancialModel.FK_AMORTIZA_REFERENCE_LOANAGRE", "LoanAgreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAgreement>("FinancialModel.FK_AMORTIZA_REFERENCE_LOANAGRE", "LoanAgreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAgreement> LoanAgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAgreement>("FinancialModel.FK_AMORTIZA_REFERENCE_LOANAGRE", "LoanAgreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAgreement>("FinancialModel.FK_AMORTIZA_REFERENCE_LOANAGRE", "LoanAgreement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AmortizationScheduleItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AmortizationScheduleItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AmortizationScheduleItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amortizationScheduleId">Initial value of the AmortizationScheduleId property.</param>
        /// <param name="scheduledPaymentDate">Initial value of the ScheduledPaymentDate property.</param>
        /// <param name="principalPayment">Initial value of the PrincipalPayment property.</param>
        /// <param name="interestPayment">Initial value of the InterestPayment property.</param>
        /// <param name="principalBalance">Initial value of the PrincipalBalance property.</param>
        /// <param name="totalLoanBalance">Initial value of the TotalLoanBalance property.</param>
        /// <param name="isBilledIndicator">Initial value of the IsBilledIndicator property.</param>
        public static AmortizationScheduleItem CreateAmortizationScheduleItem(global::System.Int32 id, global::System.Int32 amortizationScheduleId, global::System.DateTime scheduledPaymentDate, global::System.Decimal principalPayment, global::System.Decimal interestPayment, global::System.Decimal principalBalance, global::System.Decimal totalLoanBalance, global::System.Boolean isBilledIndicator)
        {
            AmortizationScheduleItem amortizationScheduleItem = new AmortizationScheduleItem();
            amortizationScheduleItem.Id = id;
            amortizationScheduleItem.AmortizationScheduleId = amortizationScheduleId;
            amortizationScheduleItem.ScheduledPaymentDate = scheduledPaymentDate;
            amortizationScheduleItem.PrincipalPayment = principalPayment;
            amortizationScheduleItem.InterestPayment = interestPayment;
            amortizationScheduleItem.PrincipalBalance = principalBalance;
            amortizationScheduleItem.TotalLoanBalance = totalLoanBalance;
            amortizationScheduleItem.IsBilledIndicator = isBilledIndicator;
            return amortizationScheduleItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmortizationScheduleId
        {
            get
            {
                return _AmortizationScheduleId;
            }
            set
            {
                OnAmortizationScheduleIdChanging(value);
                ReportPropertyChanging("AmortizationScheduleId");
                _AmortizationScheduleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmortizationScheduleId");
                OnAmortizationScheduleIdChanged();
            }
        }
        private global::System.Int32 _AmortizationScheduleId;
        partial void OnAmortizationScheduleIdChanging(global::System.Int32 value);
        partial void OnAmortizationScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScheduledPaymentDate
        {
            get
            {
                return _ScheduledPaymentDate;
            }
            set
            {
                OnScheduledPaymentDateChanging(value);
                ReportPropertyChanging("ScheduledPaymentDate");
                _ScheduledPaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduledPaymentDate");
                OnScheduledPaymentDateChanged();
            }
        }
        private global::System.DateTime _ScheduledPaymentDate;
        partial void OnScheduledPaymentDateChanging(global::System.DateTime value);
        partial void OnScheduledPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrincipalPayment
        {
            get
            {
                return _PrincipalPayment;
            }
            set
            {
                OnPrincipalPaymentChanging(value);
                ReportPropertyChanging("PrincipalPayment");
                _PrincipalPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrincipalPayment");
                OnPrincipalPaymentChanged();
            }
        }
        private global::System.Decimal _PrincipalPayment;
        partial void OnPrincipalPaymentChanging(global::System.Decimal value);
        partial void OnPrincipalPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InterestPayment
        {
            get
            {
                return _InterestPayment;
            }
            set
            {
                OnInterestPaymentChanging(value);
                ReportPropertyChanging("InterestPayment");
                _InterestPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestPayment");
                OnInterestPaymentChanged();
            }
        }
        private global::System.Decimal _InterestPayment;
        partial void OnInterestPaymentChanging(global::System.Decimal value);
        partial void OnInterestPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrincipalBalance
        {
            get
            {
                return _PrincipalBalance;
            }
            set
            {
                OnPrincipalBalanceChanging(value);
                ReportPropertyChanging("PrincipalBalance");
                _PrincipalBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrincipalBalance");
                OnPrincipalBalanceChanged();
            }
        }
        private global::System.Decimal _PrincipalBalance;
        partial void OnPrincipalBalanceChanging(global::System.Decimal value);
        partial void OnPrincipalBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalLoanBalance
        {
            get
            {
                return _TotalLoanBalance;
            }
            set
            {
                OnTotalLoanBalanceChanging(value);
                ReportPropertyChanging("TotalLoanBalance");
                _TotalLoanBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalLoanBalance");
                OnTotalLoanBalanceChanged();
            }
        }
        private global::System.Decimal _TotalLoanBalance;
        partial void OnTotalLoanBalanceChanging(global::System.Decimal value);
        partial void OnTotalLoanBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBilledIndicator
        {
            get
            {
                return _IsBilledIndicator;
            }
            set
            {
                OnIsBilledIndicatorChanging(value);
                ReportPropertyChanging("IsBilledIndicator");
                _IsBilledIndicator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBilledIndicator");
                OnIsBilledIndicatorChanged();
            }
        }
        private global::System.Boolean _IsBilledIndicator;
        partial void OnIsBilledIndicatorChanging(global::System.Boolean value);
        partial void OnIsBilledIndicatorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationSchedule")]
        public AmortizationSchedule AmortizationSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AmortizationSchedule> AmortizationScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_AMORTIZA", "AmortizationSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationType">Initial value of the ApplicationType property.</param>
        /// <param name="applicationDate">Initial value of the ApplicationDate property.</param>
        public static Application CreateApplication(global::System.Int32 id, global::System.Int32 applicationType, global::System.DateTime applicationDate)
        {
            Application application = new Application();
            application.Id = id;
            application.ApplicationType = applicationType;
            application.ApplicationDate = applicationDate;
            return application;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationType
        {
            get
            {
                return _ApplicationType;
            }
            set
            {
                OnApplicationTypeChanging(value);
                ReportPropertyChanging("ApplicationType");
                _ApplicationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationType");
                OnApplicationTypeChanged();
            }
        }
        private global::System.Int32 _ApplicationType;
        partial void OnApplicationTypeChanging(global::System.Int32 value);
        partial void OnApplicationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicationDate
        {
            get
            {
                return _ApplicationDate;
            }
            set
            {
                OnApplicationDateChanging(value);
                ReportPropertyChanging("ApplicationDate");
                _ApplicationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationDate");
                OnApplicationDateChanged();
            }
        }
        private global::System.DateTime _ApplicationDate;
        partial void OnApplicationDateChanging(global::System.DateTime value);
        partial void OnApplicationDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_APPLICAT", "Agreement")]
        public EntityCollection<Agreement> Agreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_APPLICAT", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agreement>("FinancialModel.FK_AGREEMEN_REFERENCE_APPLICAT", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_APPLICAT", "ApplicationItem")]
        public EntityCollection<ApplicationItem> ApplicationItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationItem>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT", "ApplicationItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationItem>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT", "ApplicationItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_APPLICAT2", "ApplicationType")]
        public ApplicationType ApplicationType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationType>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT2", "ApplicationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationType>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT2", "ApplicationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationType> ApplicationType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationType>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT2", "ApplicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationType>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT2", "ApplicationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeApplicationAssoc_Application", "ChequeApplicationAssoc")]
        public EntityCollection<ChequeApplicationAssoc> ChequeApplicationAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChequeApplicationAssoc>("FinancialModel.FK_ChequeApplicationAssoc_Application", "ChequeApplicationAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChequeApplicationAssoc>("FinancialModel.FK_ChequeApplicationAssoc_Application", "ChequeApplicationAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_APPLICAT", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_APPLICAT", "PettyCashLoanApplication")]
        public PettyCashLoanApplication PettyCashLoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "PettyCashLoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "PettyCashLoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PettyCashLoanApplication> PettyCashLoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "PettyCashLoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "PettyCashLoanApplication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ApplicationItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="prodFeatApplicabilityId">Initial value of the ProdFeatApplicabilityId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ApplicationItem CreateApplicationItem(global::System.Int32 id, global::System.Int32 applicationId, global::System.Int32 prodFeatApplicabilityId, global::System.DateTime effectiveDate)
        {
            ApplicationItem applicationItem = new ApplicationItem();
            applicationItem.Id = id;
            applicationItem.ApplicationId = applicationId;
            applicationItem.ProdFeatApplicabilityId = prodFeatApplicabilityId;
            applicationItem.EffectiveDate = effectiveDate;
            return applicationItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProdFeatApplicabilityId
        {
            get
            {
                return _ProdFeatApplicabilityId;
            }
            set
            {
                OnProdFeatApplicabilityIdChanging(value);
                ReportPropertyChanging("ProdFeatApplicabilityId");
                _ProdFeatApplicabilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProdFeatApplicabilityId");
                OnProdFeatApplicabilityIdChanged();
            }
        }
        private global::System.Int32 _ProdFeatApplicabilityId;
        partial void OnProdFeatApplicabilityIdChanging(global::System.Int32 value);
        partial void OnProdFeatApplicabilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeeComputedValue
        {
            get
            {
                return _FeeComputedValue;
            }
            set
            {
                OnFeeComputedValueChanging(value);
                ReportPropertyChanging("FeeComputedValue");
                _FeeComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeComputedValue");
                OnFeeComputedValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeeComputedValue;
        partial void OnFeeComputedValueChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeComputedValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_APPLICAT", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_PRODUCTF", "ProductFeatureApplicability")]
        public ProductFeatureApplicability ProductFeatureApplicability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_APPLICAT_REFERENCE_PRODUCTF", "ProductFeatureApplicability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_APPLICAT_REFERENCE_PRODUCTF", "ProductFeatureApplicability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFeatureApplicability> ProductFeatureApplicabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_APPLICAT_REFERENCE_PRODUCTF", "ProductFeatureApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_APPLICAT_REFERENCE_PRODUCTF", "ProductFeatureApplicability", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ApplicationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ApplicationType CreateApplicationType(global::System.Int32 id, global::System.String name)
        {
            ApplicationType applicationType = new ApplicationType();
            applicationType.Id = id;
            applicationType.Name = name;
            return applicationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_APPLICAT2", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT2", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("FinancialModel.FK_APPLICAT_REFERENCE_APPLICAT2", "Application", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Asset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Asset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Asset object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="assetTypeId">Initial value of the AssetTypeId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isMortgaged">Initial value of the IsMortgaged property.</param>
        public static Asset CreateAsset(global::System.Int32 id, global::System.Int32 assetTypeId, global::System.Int32 applicationId, global::System.String description, global::System.Boolean isMortgaged)
        {
            Asset asset = new Asset();
            asset.Id = id;
            asset.AssetTypeId = assetTypeId;
            asset.ApplicationId = applicationId;
            asset.Description = description;
            asset.IsMortgaged = isMortgaged;
            return asset;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetTypeId
        {
            get
            {
                return _AssetTypeId;
            }
            set
            {
                OnAssetTypeIdChanging(value);
                ReportPropertyChanging("AssetTypeId");
                _AssetTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetTypeId");
                OnAssetTypeIdChanged();
            }
        }
        private global::System.Int32 _AssetTypeId;
        partial void OnAssetTypeIdChanging(global::System.Int32 value);
        partial void OnAssetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AcquisitionCost
        {
            get
            {
                return _AcquisitionCost;
            }
            set
            {
                OnAcquisitionCostChanging(value);
                ReportPropertyChanging("AcquisitionCost");
                _AcquisitionCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcquisitionCost");
                OnAcquisitionCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _AcquisitionCost;
        partial void OnAcquisitionCostChanging(Nullable<global::System.Decimal> value);
        partial void OnAcquisitionCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMortgaged
        {
            get
            {
                return _IsMortgaged;
            }
            set
            {
                OnIsMortgagedChanging(value);
                ReportPropertyChanging("IsMortgaged");
                _IsMortgaged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMortgaged");
                OnIsMortgagedChanged();
            }
        }
        private global::System.Boolean _IsMortgaged;
        partial void OnIsMortgagedChanging(global::System.Boolean value);
        partial void OnIsMortgagedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_ASSET", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("FinancialModel.FK_ADDRESS_REFERENCE_ASSET", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("FinancialModel.FK_ADDRESS_REFERENCE_ASSET", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSET_REFERENCE_ASSETTYP", "AssetType")]
        public AssetType AssetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("FinancialModel.FK_ASSET_REFERENCE_ASSETTYP", "AssetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("FinancialModel.FK_ASSET_REFERENCE_ASSETTYP", "AssetType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetType> AssetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("FinancialModel.FK_ASSET_REFERENCE_ASSETTYP", "AssetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetType>("FinancialModel.FK_ASSET_REFERENCE_ASSETTYP", "AssetType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSET_REFERENCE_LOANAPPL", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_ASSET_REFERENCE_LOANAPPL", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_ASSET_REFERENCE_LOANAPPL", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_ASSET_REFERENCE_LOANAPPL", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_ASSET_REFERENCE_LOANAPPL", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETAPP_REFERENCE_ASSET", "AssetAppraisal")]
        public EntityCollection<AssetAppraisal> AssetAppraisals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssetAppraisal>("FinancialModel.FK_ASSETAPP_REFERENCE_ASSET", "AssetAppraisal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssetAppraisal>("FinancialModel.FK_ASSETAPP_REFERENCE_ASSET", "AssetAppraisal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETROL_REFERENCE_ASSET", "AssetRole")]
        public EntityCollection<AssetRole> AssetRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssetRole>("FinancialModel.FK_ASSETROL_REFERENCE_ASSET", "AssetRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssetRole>("FinancialModel.FK_ASSETROL_REFERENCE_ASSET", "AssetRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_ASSET", "BankAccount")]
        public BankAccount BankAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "BankAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "BankAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankAccount> BankAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "BankAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "BankAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LAND_REFERENCE_ASSET", "Land")]
        public Land Land
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Land").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Land").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Land> LandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Land");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Land>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Land", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Machine_Asset", "Machine")]
        public Machine Machine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("FinancialModel.FK_Machine_Asset", "Machine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("FinancialModel.FK_Machine_Asset", "Machine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Machine> MachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("FinancialModel.FK_Machine_Asset", "Machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Machine>("FinancialModel.FK_Machine_Asset", "Machine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Vehicle_Asset1", "Vehicle")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("FinancialModel.FK_Vehicle_Asset1", "Vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("FinancialModel.FK_Vehicle_Asset1", "Vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("FinancialModel.FK_Vehicle_Asset1", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("FinancialModel.FK_Vehicle_Asset1", "Vehicle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AssetAppraisal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetAppraisal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetAppraisal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="assetId">Initial value of the AssetId property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="dateAppraised">Initial value of the DateAppraised property.</param>
        /// <param name="marketValue">Initial value of the MarketValue property.</param>
        /// <param name="appraisedValue">Initial value of the AppraisedValue property.</param>
        public static AssetAppraisal CreateAssetAppraisal(global::System.Int32 id, global::System.Int32 assetId, global::System.Int32 partyRoleId, global::System.DateTime dateAppraised, global::System.Decimal marketValue, global::System.Decimal appraisedValue)
        {
            AssetAppraisal assetAppraisal = new AssetAppraisal();
            assetAppraisal.Id = id;
            assetAppraisal.AssetId = assetId;
            assetAppraisal.PartyRoleId = partyRoleId;
            assetAppraisal.DateAppraised = dateAppraised;
            assetAppraisal.MarketValue = marketValue;
            assetAppraisal.AppraisedValue = appraisedValue;
            return assetAppraisal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                OnAssetIdChanging(value);
                ReportPropertyChanging("AssetId");
                _AssetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetId");
                OnAssetIdChanged();
            }
        }
        private global::System.Int32 _AssetId;
        partial void OnAssetIdChanging(global::System.Int32 value);
        partial void OnAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAppraised
        {
            get
            {
                return _DateAppraised;
            }
            set
            {
                OnDateAppraisedChanging(value);
                ReportPropertyChanging("DateAppraised");
                _DateAppraised = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAppraised");
                OnDateAppraisedChanged();
            }
        }
        private global::System.DateTime _DateAppraised;
        partial void OnDateAppraisedChanging(global::System.DateTime value);
        partial void OnDateAppraisedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MarketValue
        {
            get
            {
                return _MarketValue;
            }
            set
            {
                OnMarketValueChanging(value);
                ReportPropertyChanging("MarketValue");
                _MarketValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketValue");
                OnMarketValueChanged();
            }
        }
        private global::System.Decimal _MarketValue;
        partial void OnMarketValueChanging(global::System.Decimal value);
        partial void OnMarketValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AppraisedValue
        {
            get
            {
                return _AppraisedValue;
            }
            set
            {
                OnAppraisedValueChanging(value);
                ReportPropertyChanging("AppraisedValue");
                _AppraisedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppraisedValue");
                OnAppraisedValueChanged();
            }
        }
        private global::System.Decimal _AppraisedValue;
        partial void OnAppraisedValueChanging(global::System.Decimal value);
        partial void OnAppraisedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETAPP_REFERENCE_ASSET", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ASSETAPP_REFERENCE_ASSET", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ASSETAPP_REFERENCE_ASSET", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ASSETAPP_REFERENCE_ASSET", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_ASSETAPP_REFERENCE_ASSET", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETAPP_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ASSETAPP_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ASSETAPP_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ASSETAPP_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_ASSETAPP_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AssetRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="assetId">Initial value of the AssetId property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        public static AssetRole CreateAssetRole(global::System.Int32 id, global::System.Int32 assetId, global::System.Int32 partyRoleId)
        {
            AssetRole assetRole = new AssetRole();
            assetRole.Id = id;
            assetRole.AssetId = assetId;
            assetRole.PartyRoleId = partyRoleId;
            return assetRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                OnAssetIdChanging(value);
                ReportPropertyChanging("AssetId");
                _AssetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetId");
                OnAssetIdChanged();
            }
        }
        private global::System.Int32 _AssetId;
        partial void OnAssetIdChanging(global::System.Int32 value);
        partial void OnAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EquityValue
        {
            get
            {
                return _EquityValue;
            }
            set
            {
                OnEquityValueChanging(value);
                ReportPropertyChanging("EquityValue");
                _EquityValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquityValue");
                OnEquityValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _EquityValue;
        partial void OnEquityValueChanging(Nullable<global::System.Decimal> value);
        partial void OnEquityValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETROL_REFERENCE_ASSET", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ASSETROL_REFERENCE_ASSET", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ASSETROL_REFERENCE_ASSET", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_ASSETROL_REFERENCE_ASSET", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_ASSETROL_REFERENCE_ASSET", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETROL_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ASSETROL_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ASSETROL_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ASSETROL_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_ASSETROL_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="AssetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isAppraisableIndicator">Initial value of the IsAppraisableIndicator property.</param>
        public static AssetType CreateAssetType(global::System.Int32 id, global::System.String name, global::System.Boolean isAppraisableIndicator)
        {
            AssetType assetType = new AssetType();
            assetType.Id = id;
            assetType.Name = name;
            assetType.IsAppraisableIndicator = isAppraisableIndicator;
            return assetType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAppraisableIndicator
        {
            get
            {
                return _IsAppraisableIndicator;
            }
            set
            {
                OnIsAppraisableIndicatorChanging(value);
                ReportPropertyChanging("IsAppraisableIndicator");
                _IsAppraisableIndicator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAppraisableIndicator");
                OnIsAppraisableIndicatorChanged();
            }
        }
        private global::System.Boolean _IsAppraisableIndicator;
        partial void OnIsAppraisableIndicatorChanging(global::System.Boolean value);
        partial void OnIsAppraisableIndicatorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSET_REFERENCE_ASSETTYP", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("FinancialModel.FK_ASSET_REFERENCE_ASSETTYP", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("FinancialModel.FK_ASSET_REFERENCE_ASSETTYP", "Asset", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        public static Bank CreateBank(global::System.Int32 partyRoleId)
        {
            Bank bank = new Bank();
            bank.PartyRoleId = partyRoleId;
            return bank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acronym
        {
            get
            {
                return _Acronym;
            }
            set
            {
                OnAcronymChanging(value);
                ReportPropertyChanging("Acronym");
                _Acronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acronym");
                OnAcronymChanged();
            }
        }
        private global::System.String _Acronym;
        partial void OnAcronymChanging(global::System.String value);
        partial void OnAcronymChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANK_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKSTAT_REFERENCE_BANK", "BankStatus")]
        public EntityCollection<BankStatu> BankStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BankStatu>("FinancialModel.FK_BANKSTAT_REFERENCE_BANK", "BankStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BankStatu>("FinancialModel.FK_BANKSTAT_REFERENCE_BANK", "BankStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="BankAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankAccount object.
        /// </summary>
        /// <param name="assetId">Initial value of the AssetId property.</param>
        /// <param name="bankAccountTypeId">Initial value of the BankAccountTypeId property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="accountName">Initial value of the AccountName property.</param>
        public static BankAccount CreateBankAccount(global::System.Int32 assetId, global::System.Int32 bankAccountTypeId, global::System.String accountNumber, global::System.String accountName)
        {
            BankAccount bankAccount = new BankAccount();
            bankAccount.AssetId = assetId;
            bankAccount.BankAccountTypeId = bankAccountTypeId;
            bankAccount.AccountNumber = accountNumber;
            bankAccount.AccountName = accountName;
            return bankAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                if (_AssetId != value)
                {
                    OnAssetIdChanging(value);
                    ReportPropertyChanging("AssetId");
                    _AssetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetId");
                    OnAssetIdChanged();
                }
            }
        }
        private global::System.Int32 _AssetId;
        partial void OnAssetIdChanging(global::System.Int32 value);
        partial void OnAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankAccountTypeId
        {
            get
            {
                return _BankAccountTypeId;
            }
            set
            {
                OnBankAccountTypeIdChanging(value);
                ReportPropertyChanging("BankAccountTypeId");
                _BankAccountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankAccountTypeId");
                OnBankAccountTypeIdChanged();
            }
        }
        private global::System.Int32 _BankAccountTypeId;
        partial void OnBankAccountTypeIdChanging(global::System.Int32 value);
        partial void OnBankAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BankPartyRoleId
        {
            get
            {
                return _BankPartyRoleId;
            }
            set
            {
                OnBankPartyRoleIdChanging(value);
                ReportPropertyChanging("BankPartyRoleId");
                _BankPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankPartyRoleId");
                OnBankPartyRoleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BankPartyRoleId;
        partial void OnBankPartyRoleIdChanging(Nullable<global::System.Int32> value);
        partial void OnBankPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationId;
        partial void OnApplicationIdChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountName
        {
            get
            {
                return _AccountName;
            }
            set
            {
                OnAccountNameChanging(value);
                ReportPropertyChanging("AccountName");
                _AccountName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountName");
                OnAccountNameChanged();
            }
        }
        private global::System.String _AccountName;
        partial void OnAccountNameChanging(global::System.String value);
        partial void OnAccountNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_ASSET", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_BANKACCO_REFERENCE_ASSET", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_BANKACCO", "BankAccountType")]
        public BankAccountType BankAccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccountType>("FinancialModel.FK_BANKACCO_REFERENCE_BANKACCO", "BankAccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccountType>("FinancialModel.FK_BANKACCO_REFERENCE_BANKACCO", "BankAccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankAccountType> BankAccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccountType>("FinancialModel.FK_BANKACCO_REFERENCE_BANKACCO", "BankAccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankAccountType>("FinancialModel.FK_BANKACCO_REFERENCE_BANKACCO", "BankAccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_LOANAPPL", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_BANKACCO_REFERENCE_LOANAPPL", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_BANKACCO_REFERENCE_LOANAPPL", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_BANKACCO_REFERENCE_LOANAPPL", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_BANKACCO_REFERENCE_LOANAPPL", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_BANKACCO_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_BANKACCO_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_BANKACCO_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_BANKACCO_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="BankAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankAccountType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BankAccountType CreateBankAccountType(global::System.Int32 id, global::System.String name)
        {
            BankAccountType bankAccountType = new BankAccountType();
            bankAccountType.Id = id;
            bankAccountType.Name = name;
            return bankAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_BANKACCO", "BankAccount")]
        public EntityCollection<BankAccount> BankAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_BANKACCO", "BankAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_BANKACCO", "BankAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="BankStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="bankStatusTypeId">Initial value of the BankStatusTypeId property.</param>
        public static BankStatu CreateBankStatu(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.Int32 bankStatusTypeId)
        {
            BankStatu bankStatu = new BankStatu();
            bankStatu.Id = id;
            bankStatu.PartyRoleId = partyRoleId;
            bankStatu.BankStatusTypeId = bankStatusTypeId;
            return bankStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankStatusTypeId
        {
            get
            {
                return _BankStatusTypeId;
            }
            set
            {
                OnBankStatusTypeIdChanging(value);
                ReportPropertyChanging("BankStatusTypeId");
                _BankStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankStatusTypeId");
                OnBankStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _BankStatusTypeId;
        partial void OnBankStatusTypeIdChanging(global::System.Int32 value);
        partial void OnBankStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKSTAT_REFERENCE_BANK", "Bank")]
        public Bank Bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("FinancialModel.FK_BANKSTAT_REFERENCE_BANK", "Bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("FinancialModel.FK_BANKSTAT_REFERENCE_BANK", "Bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bank> BankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("FinancialModel.FK_BANKSTAT_REFERENCE_BANK", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bank>("FinancialModel.FK_BANKSTAT_REFERENCE_BANK", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatusType")]
        public BankStatusType BankStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankStatusType>("FinancialModel.FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankStatusType>("FinancialModel.FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankStatusType> BankStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankStatusType>("FinancialModel.FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankStatusType>("FinancialModel.FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="BankStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BankStatusType CreateBankStatusType(global::System.Int32 id, global::System.String name)
        {
            BankStatusType bankStatusType = new BankStatusType();
            bankStatusType.Id = id;
            bankStatusType.Name = name;
            return bankStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatus")]
        public EntityCollection<BankStatu> BankStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BankStatu>("FinancialModel.FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BankStatu>("FinancialModel.FK_BANKSTAT_REFERENCE_BANKSTAT", "BankStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="BankViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankViewList object.
        /// </summary>
        /// <param name="partyRoleID">Initial value of the PartyRoleID property.</param>
        /// <param name="organization_Name">Initial value of the Organization_Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static BankViewList CreateBankViewList(global::System.Int32 partyRoleID, global::System.String organization_Name, global::System.String status)
        {
            BankViewList bankViewList = new BankViewList();
            bankViewList.PartyRoleID = partyRoleID;
            bankViewList.Organization_Name = organization_Name;
            bankViewList.Status = status;
            return bankViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleID
        {
            get
            {
                return _PartyRoleID;
            }
            set
            {
                if (_PartyRoleID != value)
                {
                    OnPartyRoleIDChanging(value);
                    ReportPropertyChanging("PartyRoleID");
                    _PartyRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleID");
                    OnPartyRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleID;
        partial void OnPartyRoleIDChanging(global::System.Int32 value);
        partial void OnPartyRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Organization_Name
        {
            get
            {
                return _Organization_Name;
            }
            set
            {
                if (_Organization_Name != value)
                {
                    OnOrganization_NameChanging(value);
                    ReportPropertyChanging("Organization_Name");
                    _Organization_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Organization_Name");
                    OnOrganization_NameChanged();
                }
            }
        }
        private global::System.String _Organization_Name;
        partial void OnOrganization_NameChanging(global::System.String value);
        partial void OnOrganization_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acronym
        {
            get
            {
                return _Acronym;
            }
            set
            {
                OnAcronymChanging(value);
                ReportPropertyChanging("Acronym");
                _Acronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acronym");
                OnAcronymChanged();
            }
        }
        private global::System.String _Acronym;
        partial void OnAcronymChanging(global::System.String value);
        partial void OnAcronymChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="BillAmount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillAmount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillAmount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static BillAmount CreateBillAmount(global::System.Int32 id, global::System.Decimal amount)
        {
            BillAmount billAmount = new BillAmount();
            billAmount.Id = id;
            billAmount.Amount = amount;
            return billAmount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CashOnVault")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashOnVault : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CashOnVault object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="closedByPartyRoleId">Initial value of the ClosedByPartyRoleId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CashOnVault CreateCashOnVault(global::System.Int32 id, global::System.Int32 currencyId, global::System.Decimal amount, global::System.Int32 closedByPartyRoleId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            CashOnVault cashOnVault = new CashOnVault();
            cashOnVault.Id = id;
            cashOnVault.CurrencyId = currencyId;
            cashOnVault.Amount = amount;
            cashOnVault.ClosedByPartyRoleId = closedByPartyRoleId;
            cashOnVault.TransitionDateTime = transitionDateTime;
            cashOnVault.IsActive = isActive;
            return cashOnVault;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.Int32 _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Int32 value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClosedByPartyRoleId
        {
            get
            {
                return _ClosedByPartyRoleId;
            }
            set
            {
                OnClosedByPartyRoleIdChanging(value);
                ReportPropertyChanging("ClosedByPartyRoleId");
                _ClosedByPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosedByPartyRoleId");
                OnClosedByPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _ClosedByPartyRoleId;
        partial void OnClosedByPartyRoleIdChanging(global::System.Int32 value);
        partial void OnClosedByPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CashOnVault_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_CashOnVault_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_CashOnVault_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_CashOnVault_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_CashOnVault_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CashOnVault_PartyRole", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CashOnVault_PartyRole", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CashOnVault_PartyRole", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CashOnVault_PartyRole", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_CashOnVault_PartyRole", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Cheque")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cheque : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cheque object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="bankPartyRoleId">Initial value of the BankPartyRoleId property.</param>
        /// <param name="checkDate">Initial value of the CheckDate property.</param>
        public static Cheque CreateCheque(global::System.Int32 id, global::System.Int32 paymentId, global::System.Int32 bankPartyRoleId, global::System.DateTime checkDate)
        {
            Cheque cheque = new Cheque();
            cheque.Id = id;
            cheque.PaymentId = paymentId;
            cheque.BankPartyRoleId = bankPartyRoleId;
            cheque.CheckDate = checkDate;
            return cheque;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankPartyRoleId
        {
            get
            {
                return _BankPartyRoleId;
            }
            set
            {
                OnBankPartyRoleIdChanging(value);
                ReportPropertyChanging("BankPartyRoleId");
                _BankPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankPartyRoleId");
                OnBankPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _BankPartyRoleId;
        partial void OnBankPartyRoleIdChanging(global::System.Int32 value);
        partial void OnBankPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CheckDate
        {
            get
            {
                return _CheckDate;
            }
            set
            {
                OnCheckDateChanging(value);
                ReportPropertyChanging("CheckDate");
                _CheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckDate");
                OnCheckDateChanged();
            }
        }
        private global::System.DateTime _CheckDate;
        partial void OnCheckDateChanging(global::System.DateTime value);
        partial void OnCheckDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Cheque_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_Cheque_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_Cheque_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_Cheque_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_Cheque_Payment", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CHEQUE_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CHEQUE_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CHEQUE_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CHEQUE_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_CHEQUE_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeApplicationAssoc_Cheque", "ChequeApplicationAssoc")]
        public EntityCollection<ChequeApplicationAssoc> ChequeApplicationAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChequeApplicationAssoc>("FinancialModel.FK_ChequeApplicationAssoc_Cheque", "ChequeApplicationAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChequeApplicationAssoc>("FinancialModel.FK_ChequeApplicationAssoc_Cheque", "ChequeApplicationAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeLoanAssoc_Cheque", "ChequeLoanAssoc")]
        public EntityCollection<ChequeLoanAssoc> ChequeLoanAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChequeLoanAssoc>("FinancialModel.FK_ChequeLoanAssoc_Cheque", "ChequeLoanAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChequeLoanAssoc>("FinancialModel.FK_ChequeLoanAssoc_Cheque", "ChequeLoanAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CHEQUEST_REFERENCE_CHEQUE", "ChequeStatus")]
        public EntityCollection<ChequeStatu> ChequeStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChequeStatu>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUE", "ChequeStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChequeStatu>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUE", "ChequeStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ChequeApplicationAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChequeApplicationAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChequeApplicationAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="chequeId">Initial value of the ChequeId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static ChequeApplicationAssoc CreateChequeApplicationAssoc(global::System.Int32 id, global::System.Int32 chequeId, global::System.Int32 applicationId)
        {
            ChequeApplicationAssoc chequeApplicationAssoc = new ChequeApplicationAssoc();
            chequeApplicationAssoc.Id = id;
            chequeApplicationAssoc.ChequeId = chequeId;
            chequeApplicationAssoc.ApplicationId = applicationId;
            return chequeApplicationAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChequeId
        {
            get
            {
                return _ChequeId;
            }
            set
            {
                OnChequeIdChanging(value);
                ReportPropertyChanging("ChequeId");
                _ChequeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChequeId");
                OnChequeIdChanged();
            }
        }
        private global::System.Int32 _ChequeId;
        partial void OnChequeIdChanging(global::System.Int32 value);
        partial void OnChequeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeApplicationAssoc_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_ChequeApplicationAssoc_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_ChequeApplicationAssoc_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_ChequeApplicationAssoc_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("FinancialModel.FK_ChequeApplicationAssoc_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeApplicationAssoc_Cheque", "Cheque")]
        public Cheque Cheque
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_ChequeApplicationAssoc_Cheque", "Cheque").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_ChequeApplicationAssoc_Cheque", "Cheque").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cheque> ChequeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_ChequeApplicationAssoc_Cheque", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cheque>("FinancialModel.FK_ChequeApplicationAssoc_Cheque", "Cheque", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ChequeLoanAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChequeLoanAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChequeLoanAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="chequeId">Initial value of the ChequeId property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        public static ChequeLoanAssoc CreateChequeLoanAssoc(global::System.Int32 id, global::System.Int32 chequeId, global::System.Int32 financialAccountId)
        {
            ChequeLoanAssoc chequeLoanAssoc = new ChequeLoanAssoc();
            chequeLoanAssoc.Id = id;
            chequeLoanAssoc.ChequeId = chequeId;
            chequeLoanAssoc.FinancialAccountId = financialAccountId;
            return chequeLoanAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChequeId
        {
            get
            {
                return _ChequeId;
            }
            set
            {
                OnChequeIdChanging(value);
                ReportPropertyChanging("ChequeId");
                _ChequeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChequeId");
                OnChequeIdChanged();
            }
        }
        private global::System.Int32 _ChequeId;
        partial void OnChequeIdChanging(global::System.Int32 value);
        partial void OnChequeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeLoanAssoc_Cheque", "Cheque")]
        public Cheque Cheque
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_ChequeLoanAssoc_Cheque", "Cheque").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_ChequeLoanAssoc_Cheque", "Cheque").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cheque> ChequeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_ChequeLoanAssoc_Cheque", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cheque>("FinancialModel.FK_ChequeLoanAssoc_Cheque", "Cheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeLoanAssoc_LoanAccount", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_ChequeLoanAssoc_LoanAccount", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_ChequeLoanAssoc_LoanAccount", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_ChequeLoanAssoc_LoanAccount", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_ChequeLoanAssoc_LoanAccount", "LoanAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ChequeStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChequeStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChequeStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="checkStatusTypeId">Initial value of the CheckStatusTypeId property.</param>
        /// <param name="checkId">Initial value of the CheckId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ChequeStatu CreateChequeStatu(global::System.Int32 id, global::System.Int32 checkStatusTypeId, global::System.Int32 checkId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            ChequeStatu chequeStatu = new ChequeStatu();
            chequeStatu.Id = id;
            chequeStatu.CheckStatusTypeId = checkStatusTypeId;
            chequeStatu.CheckId = checkId;
            chequeStatu.TransitionDateTime = transitionDateTime;
            chequeStatu.IsActive = isActive;
            return chequeStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckStatusTypeId
        {
            get
            {
                return _CheckStatusTypeId;
            }
            set
            {
                OnCheckStatusTypeIdChanging(value);
                ReportPropertyChanging("CheckStatusTypeId");
                _CheckStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckStatusTypeId");
                OnCheckStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _CheckStatusTypeId;
        partial void OnCheckStatusTypeIdChanging(global::System.Int32 value);
        partial void OnCheckStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckId
        {
            get
            {
                return _CheckId;
            }
            set
            {
                OnCheckIdChanging(value);
                ReportPropertyChanging("CheckId");
                _CheckId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckId");
                OnCheckIdChanged();
            }
        }
        private global::System.Int32 _CheckId;
        partial void OnCheckIdChanging(global::System.Int32 value);
        partial void OnCheckIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CHEQUEST_REFERENCE_CHEQUE", "Cheque")]
        public Cheque Cheque
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUE", "Cheque").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUE", "Cheque").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cheque> ChequeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cheque>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUE", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cheque>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUE", "Cheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatusType")]
        public ChequeStatusType ChequeStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChequeStatusType>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChequeStatusType>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChequeStatusType> ChequeStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChequeStatusType>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChequeStatusType>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ChequeStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChequeStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChequeStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ChequeStatusType CreateChequeStatusType(global::System.Int32 id, global::System.String name)
        {
            ChequeStatusType chequeStatusType = new ChequeStatusType();
            chequeStatusType.Id = id;
            chequeStatusType.Name = name;
            return chequeStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatus")]
        public EntityCollection<ChequeStatu> ChequeStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChequeStatu>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChequeStatu>("FinancialModel.FK_CHEQUEST_REFERENCE_CHEQUEST", "ChequeStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ChequeViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChequeViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChequeViewList object.
        /// </summary>
        /// <param name="hiddenPaymentId">Initial value of the HiddenPaymentId property.</param>
        /// <param name="bank">Initial value of the Bank property.</param>
        /// <param name="date_Received">Initial value of the Date_Received property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="cheque_Date">Initial value of the Cheque_Date property.</param>
        public static ChequeViewList CreateChequeViewList(global::System.Int32 hiddenPaymentId, global::System.String bank, global::System.DateTime date_Received, global::System.Decimal amount, global::System.String status, global::System.DateTime cheque_Date)
        {
            ChequeViewList chequeViewList = new ChequeViewList();
            chequeViewList.HiddenPaymentId = hiddenPaymentId;
            chequeViewList.Bank = bank;
            chequeViewList.Date_Received = date_Received;
            chequeViewList.Amount = amount;
            chequeViewList.Status = status;
            chequeViewList.Cheque_Date = cheque_Date;
            return chequeViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HiddenPaymentId
        {
            get
            {
                return _HiddenPaymentId;
            }
            set
            {
                if (_HiddenPaymentId != value)
                {
                    OnHiddenPaymentIdChanging(value);
                    ReportPropertyChanging("HiddenPaymentId");
                    _HiddenPaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HiddenPaymentId");
                    OnHiddenPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _HiddenPaymentId;
        partial void OnHiddenPaymentIdChanging(global::System.Int32 value);
        partial void OnHiddenPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChequeNumber
        {
            get
            {
                return _ChequeNumber;
            }
            set
            {
                OnChequeNumberChanging(value);
                ReportPropertyChanging("ChequeNumber");
                _ChequeNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChequeNumber");
                OnChequeNumberChanged();
            }
        }
        private global::System.String _ChequeNumber;
        partial void OnChequeNumberChanging(global::System.String value);
        partial void OnChequeNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                if (_Bank != value)
                {
                    OnBankChanging(value);
                    ReportPropertyChanging("Bank");
                    _Bank = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Bank");
                    OnBankChanged();
                }
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_Received
        {
            get
            {
                return _Date_Received;
            }
            set
            {
                if (_Date_Received != value)
                {
                    OnDate_ReceivedChanging(value);
                    ReportPropertyChanging("Date_Received");
                    _Date_Received = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date_Received");
                    OnDate_ReceivedChanged();
                }
            }
        }
        private global::System.DateTime _Date_Received;
        partial void OnDate_ReceivedChanging(global::System.DateTime value);
        partial void OnDate_ReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Received_From
        {
            get
            {
                return _Received_From;
            }
            set
            {
                OnReceived_FromChanging(value);
                ReportPropertyChanging("Received_From");
                _Received_From = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Received_From");
                OnReceived_FromChanged();
            }
        }
        private global::System.String _Received_From;
        partial void OnReceived_FromChanging(global::System.String value);
        partial void OnReceived_FromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Cheque_Date
        {
            get
            {
                return _Cheque_Date;
            }
            set
            {
                if (_Cheque_Date != value)
                {
                    OnCheque_DateChanging(value);
                    ReportPropertyChanging("Cheque_Date");
                    _Cheque_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Cheque_Date");
                    OnCheque_DateChanged();
                }
            }
        }
        private global::System.DateTime _Cheque_Date;
        partial void OnCheque_DateChanging(global::System.DateTime value);
        partial void OnCheque_DateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ClassificationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassificationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClassificationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="district">Initial value of the District property.</param>
        public static ClassificationType CreateClassificationType(global::System.Int32 id, global::System.String district)
        {
            ClassificationType classificationType = new ClassificationType();
            classificationType.Id = id;
            classificationType.District = district;
            return classificationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StationNumber
        {
            get
            {
                return _StationNumber;
            }
            set
            {
                OnStationNumberChanging(value);
                ReportPropertyChanging("StationNumber");
                _StationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StationNumber");
                OnStationNumberChanged();
            }
        }
        private global::System.String _StationNumber;
        partial void OnStationNumberChanging(global::System.String value);
        partial void OnStationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictTypeId
        {
            get
            {
                return _DistrictTypeId;
            }
            set
            {
                OnDistrictTypeIdChanging(value);
                ReportPropertyChanging("DistrictTypeId");
                _DistrictTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistrictTypeId");
                OnDistrictTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictTypeId;
        partial void OnDistrictTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ClassificationType_DistrictType", "DistrictType")]
        public DistrictType DistrictType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DistrictType>("FinancialModel.FK_ClassificationType_DistrictType", "DistrictType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DistrictType>("FinancialModel.FK_ClassificationType_DistrictType", "DistrictType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DistrictType> DistrictTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DistrictType>("FinancialModel.FK_ClassificationType_DistrictType", "DistrictType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DistrictType>("FinancialModel.FK_ClassificationType_DistrictType", "DistrictType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CLASSIFI", "CustomerClassification")]
        public EntityCollection<CustomerClassification> CustomerClassifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerClassification>("FinancialModel.FK_CUSTOMER_REFERENCE_CLASSIFI", "CustomerClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerClassification>("FinancialModel.FK_CUSTOMER_REFERENCE_CLASSIFI", "CustomerClassification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CoBorrowersViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoBorrowersViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CoBorrowersViewList object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static CoBorrowersViewList CreateCoBorrowersViewList(global::System.Int32 partyId)
        {
            CoBorrowersViewList coBorrowersViewList = new CoBorrowersViewList();
            coBorrowersViewList.PartyId = partyId;
            return coBorrowersViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CollectionViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollectionViewList object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="paymentType">Initial value of the PaymentType property.</param>
        public static CollectionViewList CreateCollectionViewList(global::System.DateTime date, global::System.Decimal amount, global::System.String paymentType)
        {
            CollectionViewList collectionViewList = new CollectionViewList();
            collectionViewList.Date = date;
            collectionViewList.Amount = amount;
            collectionViewList.PaymentType = paymentType;
            return collectionViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CollectionId
        {
            get
            {
                return _CollectionId;
            }
            set
            {
                OnCollectionIdChanging(value);
                ReportPropertyChanging("CollectionId");
                _CollectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionId");
                OnCollectionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CollectionId;
        partial void OnCollectionIdChanging(Nullable<global::System.Int32> value);
        partial void OnCollectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentType
        {
            get
            {
                return _PaymentType;
            }
            set
            {
                if (_PaymentType != value)
                {
                    OnPaymentTypeChanging(value);
                    ReportPropertyChanging("PaymentType");
                    _PaymentType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PaymentType");
                    OnPaymentTypeChanged();
                }
            }
        }
        private global::System.String _PaymentType;
        partial void OnPaymentTypeChanging(global::System.String value);
        partial void OnPaymentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Collector
        {
            get
            {
                return _Collector;
            }
            set
            {
                OnCollectorChanging(value);
                ReportPropertyChanging("Collector");
                _Collector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Collector");
                OnCollectorChanged();
            }
        }
        private global::System.String _Collector;
        partial void OnCollectorChanging(global::System.String value);
        partial void OnCollectorChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CompromiseAgreement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompromiseAgreement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompromiseAgreement object.
        /// </summary>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        public static CompromiseAgreement CreateCompromiseAgreement(global::System.Int32 agreementId)
        {
            CompromiseAgreement compromiseAgreement = new CompromiseAgreement();
            compromiseAgreement.AgreementId = agreementId;
            return compromiseAgreement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                if (_AgreementId != value)
                {
                    OnAgreementIdChanging(value);
                    ReportPropertyChanging("AgreementId");
                    _AgreementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgreementId");
                    OnAgreementIdChanged();
                }
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COMPROMI_REFERENCE_AGREEMEN", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_COMPROMI_REFERENCE_AGREEMEN", "Agreement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ContactViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactViewList object.
        /// </summary>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="partyType">Initial value of the PartyType property.</param>
        public static ContactViewList CreateContactViewList(global::System.Int32 partyRoleId, global::System.String partyType)
        {
            ContactViewList contactViewList = new ContactViewList();
            contactViewList.PartyRoleId = partyRoleId;
            contactViewList.PartyType = partyType;
            return contactViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartyType
        {
            get
            {
                return _PartyType;
            }
            set
            {
                if (_PartyType != value)
                {
                    OnPartyTypeChanging(value);
                    ReportPropertyChanging("PartyType");
                    _PartyType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PartyType");
                    OnPartyTypeChanged();
                }
            }
        }
        private global::System.String _PartyType;
        partial void OnPartyTypeChanging(global::System.String value);
        partial void OnPartyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ControlNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ControlNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ControlNumber object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="formTypeId">Initial value of the FormTypeId property.</param>
        /// <param name="lastControlNumber">Initial value of the LastControlNumber property.</param>
        public static ControlNumber CreateControlNumber(global::System.Int32 id, global::System.Int32 formTypeId, global::System.Int32 lastControlNumber)
        {
            ControlNumber controlNumber = new ControlNumber();
            controlNumber.Id = id;
            controlNumber.FormTypeId = formTypeId;
            controlNumber.LastControlNumber = lastControlNumber;
            return controlNumber;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTypeId
        {
            get
            {
                return _FormTypeId;
            }
            set
            {
                OnFormTypeIdChanging(value);
                ReportPropertyChanging("FormTypeId");
                _FormTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTypeId");
                OnFormTypeIdChanged();
            }
        }
        private global::System.Int32 _FormTypeId;
        partial void OnFormTypeIdChanging(global::System.Int32 value);
        partial void OnFormTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastControlNumber
        {
            get
            {
                return _LastControlNumber;
            }
            set
            {
                OnLastControlNumberChanging(value);
                ReportPropertyChanging("LastControlNumber");
                _LastControlNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastControlNumber");
                OnLastControlNumberChanged();
            }
        }
        private global::System.Int32 _LastControlNumber;
        partial void OnLastControlNumberChanging(global::System.Int32 value);
        partial void OnLastControlNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentId;
        partial void OnPaymentIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationId;
        partial void OnApplicationIdChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ControlNumbers_FormType", "FormType")]
        public FormType FormType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("FinancialModel.FK_ControlNumbers_FormType", "FormType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("FinancialModel.FK_ControlNumbers_FormType", "FormType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormType> FormTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("FinancialModel.FK_ControlNumbers_FormType", "FormType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormType>("FinancialModel.FK_ControlNumbers_FormType", "FormType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ControlNumbers_LoanApplication", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_ControlNumbers_LoanApplication", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_ControlNumbers_LoanApplication", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_ControlNumbers_LoanApplication", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_ControlNumbers_LoanApplication", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ControlNumbers_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_ControlNumbers_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_ControlNumbers_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_ControlNumbers_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_ControlNumbers_Payment", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CoOwnerGuarantorViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoOwnerGuarantorViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CoOwnerGuarantorViewList object.
        /// </summary>
        /// <param name="financialAccountRole">Initial value of the FinancialAccountRole property.</param>
        /// <param name="hiddenFinancialAccountID">Initial value of the HiddenFinancialAccountID property.</param>
        public static CoOwnerGuarantorViewList CreateCoOwnerGuarantorViewList(global::System.String financialAccountRole, global::System.Int32 hiddenFinancialAccountID)
        {
            CoOwnerGuarantorViewList coOwnerGuarantorViewList = new CoOwnerGuarantorViewList();
            coOwnerGuarantorViewList.FinancialAccountRole = financialAccountRole;
            coOwnerGuarantorViewList.HiddenFinancialAccountID = hiddenFinancialAccountID;
            return coOwnerGuarantorViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FinancialAccountRole
        {
            get
            {
                return _FinancialAccountRole;
            }
            set
            {
                if (_FinancialAccountRole != value)
                {
                    OnFinancialAccountRoleChanging(value);
                    ReportPropertyChanging("FinancialAccountRole");
                    _FinancialAccountRole = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FinancialAccountRole");
                    OnFinancialAccountRoleChanged();
                }
            }
        }
        private global::System.String _FinancialAccountRole;
        partial void OnFinancialAccountRoleChanging(global::System.String value);
        partial void OnFinancialAccountRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HiddenFinancialAccountID
        {
            get
            {
                return _HiddenFinancialAccountID;
            }
            set
            {
                if (_HiddenFinancialAccountID != value)
                {
                    OnHiddenFinancialAccountIDChanging(value);
                    ReportPropertyChanging("HiddenFinancialAccountID");
                    _HiddenFinancialAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HiddenFinancialAccountID");
                    OnHiddenFinancialAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _HiddenFinancialAccountID;
        partial void OnHiddenFinancialAccountIDChanging(global::System.Int32 value);
        partial void OnHiddenFinancialAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GuarantorName
        {
            get
            {
                return _GuarantorName;
            }
            set
            {
                OnGuarantorNameChanging(value);
                ReportPropertyChanging("GuarantorName");
                _GuarantorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GuarantorName");
                OnGuarantorNameChanged();
            }
        }
        private global::System.String _GuarantorName;
        partial void OnGuarantorNameChanging(global::System.String value);
        partial void OnGuarantorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellphoneNumber
        {
            get
            {
                return _CellphoneNumber;
            }
            set
            {
                OnCellphoneNumberChanging(value);
                ReportPropertyChanging("CellphoneNumber");
                _CellphoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellphoneNumber");
                OnCellphoneNumberChanged();
            }
        }
        private global::System.String _CellphoneNumber;
        partial void OnCellphoneNumberChanging(global::System.String value);
        partial void OnCellphoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone_Number
        {
            get
            {
                return _Telephone_Number;
            }
            set
            {
                OnTelephone_NumberChanging(value);
                ReportPropertyChanging("Telephone_Number");
                _Telephone_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone_Number");
                OnTelephone_NumberChanged();
            }
        }
        private global::System.String _Telephone_Number;
        partial void OnTelephone_NumberChanging(global::System.String value);
        partial void OnTelephone_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GuarantorAddress
        {
            get
            {
                return _GuarantorAddress;
            }
            set
            {
                OnGuarantorAddressChanging(value);
                ReportPropertyChanging("GuarantorAddress");
                _GuarantorAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GuarantorAddress");
                OnGuarantorAddressChanged();
            }
        }
        private global::System.String _GuarantorAddress;
        partial void OnGuarantorAddressChanging(global::System.String value);
        partial void OnGuarantorAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryTelephoneCode
        {
            get
            {
                return _CountryTelephoneCode;
            }
            set
            {
                OnCountryTelephoneCodeChanging(value);
                ReportPropertyChanging("CountryTelephoneCode");
                _CountryTelephoneCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryTelephoneCode");
                OnCountryTelephoneCodeChanged();
            }
        }
        private global::System.String _CountryTelephoneCode;
        partial void OnCountryTelephoneCodeChanging(global::System.String value);
        partial void OnCountryTelephoneCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_COUNTRY", "PostalAddress")]
        public EntityCollection<PostalAddress> PostalAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_COUNTRY", "PostalAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_COUNTRY", "PostalAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="COVTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COVTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COVTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="processedByPartyRoleId">Initial value of the ProcessedByPartyRoleId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="cOVTransTypeId">Initial value of the COVTransTypeId property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        public static COVTransaction CreateCOVTransaction(global::System.Int32 id, global::System.Int32 processedByPartyRoleId, global::System.Decimal amount, global::System.Int32 currencyId, global::System.Int32 cOVTransTypeId, global::System.DateTime transactionDate, global::System.DateTime entryDate)
        {
            COVTransaction cOVTransaction = new COVTransaction();
            cOVTransaction.Id = id;
            cOVTransaction.ProcessedByPartyRoleId = processedByPartyRoleId;
            cOVTransaction.Amount = amount;
            cOVTransaction.CurrencyId = currencyId;
            cOVTransaction.COVTransTypeId = cOVTransTypeId;
            cOVTransaction.TransactionDate = transactionDate;
            cOVTransaction.EntryDate = entryDate;
            return cOVTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessedByPartyRoleId
        {
            get
            {
                return _ProcessedByPartyRoleId;
            }
            set
            {
                OnProcessedByPartyRoleIdChanging(value);
                ReportPropertyChanging("ProcessedByPartyRoleId");
                _ProcessedByPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedByPartyRoleId");
                OnProcessedByPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _ProcessedByPartyRoleId;
        partial void OnProcessedByPartyRoleIdChanging(global::System.Int32 value);
        partial void OnProcessedByPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.Int32 _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Int32 value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COVTransTypeId
        {
            get
            {
                return _COVTransTypeId;
            }
            set
            {
                OnCOVTransTypeIdChanging(value);
                ReportPropertyChanging("COVTransTypeId");
                _COVTransTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COVTransTypeId");
                OnCOVTransTypeIdChanged();
            }
        }
        private global::System.Int32 _COVTransTypeId;
        partial void OnCOVTransTypeIdChanging(global::System.Int32 value);
        partial void OnCOVTransTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COVDetails_COVTransactionType", "COVTransactionType")]
        public COVTransactionType COVTransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COVTransactionType>("FinancialModel.FK_COVDetails_COVTransactionType", "COVTransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COVTransactionType>("FinancialModel.FK_COVDetails_COVTransactionType", "COVTransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COVTransactionType> COVTransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COVTransactionType>("FinancialModel.FK_COVDetails_COVTransactionType", "COVTransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COVTransactionType>("FinancialModel.FK_COVDetails_COVTransactionType", "COVTransactionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COVDetails_PartyRole", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_COVDetails_PartyRole", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_COVDetails_PartyRole", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_COVDetails_PartyRole", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_COVDetails_PartyRole", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COVTransaction_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_COVTransaction_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_COVTransaction_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_COVTransaction_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_COVTransaction_Currency", "Currency", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="COVTransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COVTransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COVTransactionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static COVTransactionType CreateCOVTransactionType(global::System.Int32 id, global::System.String name)
        {
            COVTransactionType cOVTransactionType = new COVTransactionType();
            cOVTransactionType.Id = id;
            cOVTransactionType.Name = name;
            return cOVTransactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COVDetails_COVTransactionType", "COVTransaction")]
        public EntityCollection<COVTransaction> COVTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COVTransaction>("FinancialModel.FK_COVDetails_COVTransactionType", "COVTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COVTransaction>("FinancialModel.FK_COVDetails_COVTransactionType", "COVTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Ctc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ctc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ctc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="ctcNumber">Initial value of the CtcNumber property.</param>
        /// <param name="dateIssued">Initial value of the DateIssued property.</param>
        /// <param name="issuedWhere">Initial value of the IssuedWhere property.</param>
        public static Ctc CreateCtc(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.String ctcNumber, global::System.DateTime dateIssued, global::System.String issuedWhere)
        {
            Ctc ctc = new Ctc();
            ctc.Id = id;
            ctc.PartyRoleId = partyRoleId;
            ctc.CtcNumber = ctcNumber;
            ctc.DateIssued = dateIssued;
            ctc.IssuedWhere = issuedWhere;
            return ctc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CtcNumber
        {
            get
            {
                return _CtcNumber;
            }
            set
            {
                OnCtcNumberChanging(value);
                ReportPropertyChanging("CtcNumber");
                _CtcNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CtcNumber");
                OnCtcNumberChanged();
            }
        }
        private global::System.String _CtcNumber;
        partial void OnCtcNumberChanging(global::System.String value);
        partial void OnCtcNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateIssued
        {
            get
            {
                return _DateIssued;
            }
            set
            {
                OnDateIssuedChanging(value);
                ReportPropertyChanging("DateIssued");
                _DateIssued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateIssued");
                OnDateIssuedChanged();
            }
        }
        private global::System.DateTime _DateIssued;
        partial void OnDateIssuedChanging(global::System.DateTime value);
        partial void OnDateIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssuedWhere
        {
            get
            {
                return _IssuedWhere;
            }
            set
            {
                OnIssuedWhereChanging(value);
                ReportPropertyChanging("IssuedWhere");
                _IssuedWhere = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssuedWhere");
                OnIssuedWhereChanged();
            }
        }
        private global::System.String _IssuedWhere;
        partial void OnIssuedWhereChanging(global::System.String value);
        partial void OnIssuedWhereChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CTC_REFERENCE_TAXPAYER", "Taxpayer")]
        public Taxpayer Taxpayer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxpayer>("FinancialModel.FK_CTC_REFERENCE_TAXPAYER", "Taxpayer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxpayer>("FinancialModel.FK_CTC_REFERENCE_TAXPAYER", "Taxpayer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Taxpayer> TaxpayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxpayer>("FinancialModel.FK_CTC_REFERENCE_TAXPAYER", "Taxpayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Taxpayer>("FinancialModel.FK_CTC_REFERENCE_TAXPAYER", "Taxpayer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static Currency CreateCurrency(global::System.Int32 id, global::System.String symbol)
        {
            Currency currency = new Currency();
            currency.Id = id;
            currency.Symbol = symbol;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CashOnVault_Currency", "CashOnVault")]
        public EntityCollection<CashOnVault> CashOnVaults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashOnVault>("FinancialModel.FK_CashOnVault_Currency", "CashOnVault");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashOnVault>("FinancialModel.FK_CashOnVault_Currency", "CashOnVault", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COVTransaction_Currency", "COVTransaction")]
        public EntityCollection<COVTransaction> COVTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COVTransaction>("FinancialModel.FK_COVTransaction_Currency", "COVTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COVTransaction>("FinancialModel.FK_COVTransaction_Currency", "COVTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ExchangeRate_Currency", "ExchangeRate")]
        public EntityCollection<ExchangeRate> ExchangeRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeRate>("FinancialModel.FK_ExchangeRate_Currency", "ExchangeRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeRate>("FinancialModel.FK_ExchangeRate_Currency", "ExchangeRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ExchangeRate_Currency1", "ExchangeRate")]
        public EntityCollection<ExchangeRate> ExchangeRates1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeRate>("FinancialModel.FK_ExchangeRate_Currency1", "ExchangeRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeRate>("FinancialModel.FK_ExchangeRate_Currency1", "ExchangeRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_Currency", "ForeignExchange")]
        public EntityCollection<ForeignExchange> ForeignExchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_Currency", "ForeignExchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_Currency", "ForeignExchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_Currency1", "ForeignExchange")]
        public EntityCollection<ForeignExchange> ForeignExchanges1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_Currency1", "ForeignExchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_Currency1", "ForeignExchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeAmount_Currency", "ForExDetail")]
        public EntityCollection<ForExDetail> ForExDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForExDetail>("FinancialModel.FK_ForeignExchangeAmount_Currency", "ForExDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForExDetail>("FinancialModel.FK_ForeignExchangeAmount_Currency", "ForExDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PaymentCurrencyAssoc_Currency", "PaymentCurrencyAssoc")]
        public EntityCollection<PaymentCurrencyAssoc> PaymentCurrencyAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentCurrencyAssoc>("FinancialModel.FK_PaymentCurrencyAssoc_Currency", "PaymentCurrencyAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentCurrencyAssoc>("FinancialModel.FK_PaymentCurrencyAssoc_Currency", "PaymentCurrencyAssoc", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        public static Customer CreateCustomer(global::System.Int32 partyRoleId)
        {
            Customer customer = new Customer();
            customer.PartyRoleId = partyRoleId;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CreditLimit
        {
            get
            {
                return _CreditLimit;
            }
            set
            {
                OnCreditLimitChanging(value);
                ReportPropertyChanging("CreditLimit");
                _CreditLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditLimit");
                OnCreditLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CreditLimit;
        partial void OnCreditLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnCreditLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOME_", "CustomerCategory")]
        public EntityCollection<CustomerCategory> CustomerCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerCategory>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOME_", "CustomerCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerCategory>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOME_", "CustomerCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER", "CustomerClassification")]
        public EntityCollection<CustomerClassification> CustomerClassifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerClassification>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER", "CustomerClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerClassification>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER", "CustomerClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER2", "CustomerSourceOfIncome")]
        public EntityCollection<CustomerSourceOfIncome> CustomerSourceOfIncomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerSourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER2", "CustomerSourceOfIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerSourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER2", "CustomerSourceOfIncome", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER3", "CustomerStatus")]
        public EntityCollection<CustomerStatu> CustomerStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerStatu>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER3", "CustomerStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerStatu>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER3", "CustomerStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerAndCoBorrowerListView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerAndCoBorrowerListView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerAndCoBorrowerListView object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static CustomerAndCoBorrowerListView CreateCustomerAndCoBorrowerListView(global::System.Int32 partyId, global::System.Int32 partyRoleId, global::System.String role)
        {
            CustomerAndCoBorrowerListView customerAndCoBorrowerListView = new CustomerAndCoBorrowerListView();
            customerAndCoBorrowerListView.PartyId = partyId;
            customerAndCoBorrowerListView.PartyRoleId = partyRoleId;
            customerAndCoBorrowerListView.Role = role;
            return customerAndCoBorrowerListView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                if (_Role != value)
                {
                    OnRoleChanging(value);
                    ReportPropertyChanging("Role");
                    _Role = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Role");
                    OnRoleChanged();
                }
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="customerCategoryType">Initial value of the CustomerCategoryType property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static CustomerCategory CreateCustomerCategory(global::System.Int32 id, global::System.Int32 customerCategoryType, global::System.Int32 partyRoleId, global::System.DateTime effectiveDate)
        {
            CustomerCategory customerCategory = new CustomerCategory();
            customerCategory.Id = id;
            customerCategory.CustomerCategoryType = customerCategoryType;
            customerCategory.PartyRoleId = partyRoleId;
            customerCategory.EffectiveDate = effectiveDate;
            return customerCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerCategoryType
        {
            get
            {
                return _CustomerCategoryType;
            }
            set
            {
                OnCustomerCategoryTypeChanging(value);
                ReportPropertyChanging("CustomerCategoryType");
                _CustomerCategoryType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerCategoryType");
                OnCustomerCategoryTypeChanged();
            }
        }
        private global::System.Int32 _CustomerCategoryType;
        partial void OnCustomerCategoryTypeChanging(global::System.Int32 value);
        partial void OnCustomerCategoryTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOME_", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOME_", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOME_", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOME_", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOME_", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategoryType")]
        public CustomerCategoryType CustomerCategoryType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerCategoryType>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategoryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerCategoryType>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategoryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerCategoryType> CustomerCategoryType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerCategoryType>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerCategoryType>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategoryType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerCategoryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerCategoryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerCategoryType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CustomerCategoryType CreateCustomerCategoryType(global::System.Int32 id)
        {
            CustomerCategoryType customerCategoryType = new CustomerCategoryType();
            customerCategoryType.Id = id;
            return customerCategoryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategory")]
        public EntityCollection<CustomerCategory> CustomerCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerCategory>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerCategory>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER1", "CustomerCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerClassification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerClassification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerClassification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="classificationTypeId">Initial value of the ClassificationTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static CustomerClassification CreateCustomerClassification(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.Int32 classificationTypeId, global::System.DateTime effectiveDate)
        {
            CustomerClassification customerClassification = new CustomerClassification();
            customerClassification.Id = id;
            customerClassification.PartyRoleId = partyRoleId;
            customerClassification.ClassificationTypeId = classificationTypeId;
            customerClassification.EffectiveDate = effectiveDate;
            return customerClassification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationTypeId
        {
            get
            {
                return _ClassificationTypeId;
            }
            set
            {
                OnClassificationTypeIdChanging(value);
                ReportPropertyChanging("ClassificationTypeId");
                _ClassificationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassificationTypeId");
                OnClassificationTypeIdChanged();
            }
        }
        private global::System.Int32 _ClassificationTypeId;
        partial void OnClassificationTypeIdChanging(global::System.Int32 value);
        partial void OnClassificationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CLASSIFI", "ClassificationType")]
        public ClassificationType ClassificationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassificationType>("FinancialModel.FK_CUSTOMER_REFERENCE_CLASSIFI", "ClassificationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassificationType>("FinancialModel.FK_CUSTOMER_REFERENCE_CLASSIFI", "ClassificationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClassificationType> ClassificationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassificationType>("FinancialModel.FK_CUSTOMER_REFERENCE_CLASSIFI", "ClassificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClassificationType>("FinancialModel.FK_CUSTOMER_REFERENCE_CLASSIFI", "ClassificationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerSourceOfIncome")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerSourceOfIncome : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerSourceOfIncome object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="sourceOfIncomeId">Initial value of the SourceOfIncomeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="income">Initial value of the Income property.</param>
        public static CustomerSourceOfIncome CreateCustomerSourceOfIncome(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.Int32 sourceOfIncomeId, global::System.DateTime effectiveDate, global::System.Decimal income)
        {
            CustomerSourceOfIncome customerSourceOfIncome = new CustomerSourceOfIncome();
            customerSourceOfIncome.Id = id;
            customerSourceOfIncome.PartyRoleId = partyRoleId;
            customerSourceOfIncome.SourceOfIncomeId = sourceOfIncomeId;
            customerSourceOfIncome.EffectiveDate = effectiveDate;
            customerSourceOfIncome.Income = income;
            return customerSourceOfIncome;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceOfIncomeId
        {
            get
            {
                return _SourceOfIncomeId;
            }
            set
            {
                OnSourceOfIncomeIdChanging(value);
                ReportPropertyChanging("SourceOfIncomeId");
                _SourceOfIncomeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceOfIncomeId");
                OnSourceOfIncomeIdChanged();
            }
        }
        private global::System.Int32 _SourceOfIncomeId;
        partial void OnSourceOfIncomeIdChanging(global::System.Int32 value);
        partial void OnSourceOfIncomeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Income
        {
            get
            {
                return _Income;
            }
            set
            {
                OnIncomeChanging(value);
                ReportPropertyChanging("Income");
                _Income = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Income");
                OnIncomeChanged();
            }
        }
        private global::System.Decimal _Income;
        partial void OnIncomeChanging(global::System.Decimal value);
        partial void OnIncomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER2", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER2", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER2", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER2", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER2", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_SOURCEOF", "SourceOfIncome")]
        public SourceOfIncome SourceOfIncome
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_SOURCEOF", "SourceOfIncome").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_SOURCEOF", "SourceOfIncome").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SourceOfIncome> SourceOfIncomeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_SOURCEOF", "SourceOfIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_SOURCEOF", "SourceOfIncome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="customerStatusTypeId">Initial value of the CustomerStatusTypeId property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CustomerStatu CreateCustomerStatu(global::System.Int32 id, global::System.Int32 customerStatusTypeId, global::System.Int32 partyRoleId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            CustomerStatu customerStatu = new CustomerStatu();
            customerStatu.Id = id;
            customerStatu.CustomerStatusTypeId = customerStatusTypeId;
            customerStatu.PartyRoleId = partyRoleId;
            customerStatu.TransitionDateTime = transitionDateTime;
            customerStatu.IsActive = isActive;
            return customerStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerStatusTypeId
        {
            get
            {
                return _CustomerStatusTypeId;
            }
            set
            {
                OnCustomerStatusTypeIdChanging(value);
                ReportPropertyChanging("CustomerStatusTypeId");
                _CustomerStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerStatusTypeId");
                OnCustomerStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _CustomerStatusTypeId;
        partial void OnCustomerStatusTypeIdChanging(global::System.Int32 value);
        partial void OnCustomerStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_CUSTOMER3", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER3", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER3", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER3", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_CUSTOMER3", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER", "CustomerStatusType")]
        public CustomerStatusType CustomerStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerStatusType>("FinancialModel.FK_CUSTOMER", "CustomerStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerStatusType>("FinancialModel.FK_CUSTOMER", "CustomerStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerStatusType> CustomerStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerStatusType>("FinancialModel.FK_CUSTOMER", "CustomerStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerStatusType>("FinancialModel.FK_CUSTOMER", "CustomerStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CustomerStatusType CreateCustomerStatusType(global::System.Int32 id, global::System.String name)
        {
            CustomerStatusType customerStatusType = new CustomerStatusType();
            customerStatusType.Id = id;
            customerStatusType.Name = name;
            return customerStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER", "CustomerStatus")]
        public EntityCollection<CustomerStatu> CustomerStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerStatu>("FinancialModel.FK_CUSTOMER", "CustomerStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerStatu>("FinancialModel.FK_CUSTOMER", "CustomerStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerViewList object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="partyType">Initial value of the PartyType property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static CustomerViewList CreateCustomerViewList(global::System.Int32 customerId, global::System.Int32 partyId, global::System.String partyType, global::System.String status)
        {
            CustomerViewList customerViewList = new CustomerViewList();
            customerViewList.CustomerId = customerId;
            customerViewList.PartyId = partyId;
            customerViewList.PartyType = partyType;
            customerViewList.Status = status;
            return customerViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartyType
        {
            get
            {
                return _PartyType;
            }
            set
            {
                if (_PartyType != value)
                {
                    OnPartyTypeChanging(value);
                    ReportPropertyChanging("PartyType");
                    _PartyType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PartyType");
                    OnPartyTypeChanged();
                }
            }
        }
        private global::System.String _PartyType;
        partial void OnPartyTypeChanging(global::System.String value);
        partial void OnPartyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="CustomerWithLoanViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerWithLoanViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerWithLoanViewList object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="partyType">Initial value of the PartyType property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static CustomerWithLoanViewList CreateCustomerWithLoanViewList(global::System.Int32 customerId, global::System.String partyType, global::System.String status)
        {
            CustomerWithLoanViewList customerWithLoanViewList = new CustomerWithLoanViewList();
            customerWithLoanViewList.CustomerId = customerId;
            customerWithLoanViewList.PartyType = partyType;
            customerWithLoanViewList.Status = status;
            return customerWithLoanViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartyType
        {
            get
            {
                return _PartyType;
            }
            set
            {
                if (_PartyType != value)
                {
                    OnPartyTypeChanging(value);
                    ReportPropertyChanging("PartyType");
                    _PartyType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PartyType");
                    OnPartyTypeChanged();
                }
            }
        }
        private global::System.String _PartyType;
        partial void OnPartyTypeChanging(global::System.String value);
        partial void OnPartyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DemandLetter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DemandLetter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DemandLetter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        public static DemandLetter CreateDemandLetter(global::System.Int32 id, global::System.Int32 financialAccountId)
        {
            DemandLetter demandLetter = new DemandLetter();
            demandLetter.Id = id;
            demandLetter.FinancialAccountId = financialAccountId;
            return demandLetter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSent
        {
            get
            {
                return _DateSent;
            }
            set
            {
                OnDateSentChanging(value);
                ReportPropertyChanging("DateSent");
                _DateSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSent");
                OnDateSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSent;
        partial void OnDateSentChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePromisedToPay
        {
            get
            {
                return _DatePromisedToPay;
            }
            set
            {
                OnDatePromisedToPayChanging(value);
                ReportPropertyChanging("DatePromisedToPay");
                _DatePromisedToPay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePromisedToPay");
                OnDatePromisedToPayChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePromisedToPay;
        partial void OnDatePromisedToPayChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePromisedToPayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetterStatus")]
        public EntityCollection<DemandLetterStatu> DemandLetterStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DemandLetterStatu>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetterStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DemandLetterStatu>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetterStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_LOANACCO", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_DEMANDLE_REFERENCE_LOANACCO", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_DEMANDLE_REFERENCE_LOANACCO", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_DEMANDLE_REFERENCE_LOANACCO", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_DEMANDLE_REFERENCE_LOANACCO", "LoanAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DemandLetterStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DemandLetterStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DemandLetterStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="demandLetterId">Initial value of the DemandLetterId property.</param>
        /// <param name="demandLetterStatusTypeId">Initial value of the DemandLetterStatusTypeId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static DemandLetterStatu CreateDemandLetterStatu(global::System.Int32 id, global::System.Int32 demandLetterId, global::System.Int32 demandLetterStatusTypeId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            DemandLetterStatu demandLetterStatu = new DemandLetterStatu();
            demandLetterStatu.Id = id;
            demandLetterStatu.DemandLetterId = demandLetterId;
            demandLetterStatu.DemandLetterStatusTypeId = demandLetterStatusTypeId;
            demandLetterStatu.TransitionDateTime = transitionDateTime;
            demandLetterStatu.IsActive = isActive;
            return demandLetterStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DemandLetterId
        {
            get
            {
                return _DemandLetterId;
            }
            set
            {
                OnDemandLetterIdChanging(value);
                ReportPropertyChanging("DemandLetterId");
                _DemandLetterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DemandLetterId");
                OnDemandLetterIdChanged();
            }
        }
        private global::System.Int32 _DemandLetterId;
        partial void OnDemandLetterIdChanging(global::System.Int32 value);
        partial void OnDemandLetterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DemandLetterStatusTypeId
        {
            get
            {
                return _DemandLetterStatusTypeId;
            }
            set
            {
                OnDemandLetterStatusTypeIdChanging(value);
                ReportPropertyChanging("DemandLetterStatusTypeId");
                _DemandLetterStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DemandLetterStatusTypeId");
                OnDemandLetterStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _DemandLetterStatusTypeId;
        partial void OnDemandLetterStatusTypeIdChanging(global::System.Int32 value);
        partial void OnDemandLetterStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetter")]
        public DemandLetter DemandLetter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DemandLetter>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DemandLetter>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DemandLetter> DemandLetterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DemandLetter>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DemandLetter>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLE", "DemandLetter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatusType")]
        public DemandLetterStatusType DemandLetterStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DemandLetterStatusType>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DemandLetterStatusType>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DemandLetterStatusType> DemandLetterStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DemandLetterStatusType>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DemandLetterStatusType>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DemandLetterStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DemandLetterStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DemandLetterStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DemandLetterStatusType CreateDemandLetterStatusType(global::System.Int32 id)
        {
            DemandLetterStatusType demandLetterStatusType = new DemandLetterStatusType();
            demandLetterStatusType.Id = id;
            return demandLetterStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatus")]
        public EntityCollection<DemandLetterStatu> DemandLetterStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DemandLetterStatu>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DemandLetterStatu>("FinancialModel.FK_DEMANDLE_REFERENCE_DEMANDLES", "DemandLetterStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Denomination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Denomination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Denomination object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="billAmount">Initial value of the BillAmount property.</param>
        /// <param name="forExDetailId">Initial value of the ForExDetailId property.</param>
        public static Denomination CreateDenomination(global::System.Int32 id, global::System.Decimal billAmount, global::System.Int32 forExDetailId)
        {
            Denomination denomination = new Denomination();
            denomination.Id = id;
            denomination.BillAmount = billAmount;
            denomination.ForExDetailId = forExDetailId;
            return denomination;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BillAmount
        {
            get
            {
                return _BillAmount;
            }
            set
            {
                OnBillAmountChanging(value);
                ReportPropertyChanging("BillAmount");
                _BillAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillAmount");
                OnBillAmountChanged();
            }
        }
        private global::System.Decimal _BillAmount;
        partial void OnBillAmountChanging(global::System.Decimal value);
        partial void OnBillAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForExDetailId
        {
            get
            {
                return _ForExDetailId;
            }
            set
            {
                OnForExDetailIdChanging(value);
                ReportPropertyChanging("ForExDetailId");
                _ForExDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForExDetailId");
                OnForExDetailIdChanged();
            }
        }
        private global::System.Int32 _ForExDetailId;
        partial void OnForExDetailIdChanging(global::System.Int32 value);
        partial void OnForExDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Denomination_ForeignExchangeAmount", "ForExDetail")]
        public ForExDetail ForExDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_Denomination_ForeignExchangeAmount", "ForExDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_Denomination_ForeignExchangeAmount", "ForExDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForExDetail> ForExDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_Denomination_ForeignExchangeAmount", "ForExDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ForExDetail>("FinancialModel.FK_Denomination_ForeignExchangeAmount", "ForExDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Disbursement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Disbursement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Disbursement object.
        /// </summary>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="disbursementTypeId">Initial value of the DisbursementTypeId property.</param>
        public static Disbursement CreateDisbursement(global::System.Int32 paymentId, global::System.Int32 disbursementTypeId)
        {
            Disbursement disbursement = new Disbursement();
            disbursement.PaymentId = paymentId;
            disbursement.DisbursementTypeId = disbursementTypeId;
            return disbursement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeId
        {
            get
            {
                return _DisbursementTypeId;
            }
            set
            {
                OnDisbursementTypeIdChanging(value);
                ReportPropertyChanging("DisbursementTypeId");
                _DisbursementTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementTypeId");
                OnDisbursementTypeIdChanged();
            }
        }
        private global::System.Int32 _DisbursementTypeId;
        partial void OnDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedToName
        {
            get
            {
                return _DisbursedToName;
            }
            set
            {
                OnDisbursedToNameChanging(value);
                ReportPropertyChanging("DisbursedToName");
                _DisbursedToName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedToName");
                OnDisbursedToNameChanged();
            }
        }
        private global::System.String _DisbursedToName;
        partial void OnDisbursedToNameChanging(global::System.String value);
        partial void OnDisbursedToNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE", "DisbursementItem")]
        public EntityCollection<DisbursementItem> DisbursementItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementItem>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE", "DisbursementItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementItem>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE", "DisbursementItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE5", "DisbursementType")]
        public DisbursementType DisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE5", "DisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE5", "DisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementType> DisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE5", "DisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE5", "DisbursementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_PAYMENT", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ENCASHME_REFERENCE_DISBURSE", "Encashment")]
        public Encashment Encashment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Encashment>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Encashment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Encashment>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Encashment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Encashment> EncashmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Encashment>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Encashment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Encashment>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Encashment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANDISB_REFERENCE_DISBURSE2", "LoanDisbursement")]
        public LoanDisbursement LoanDisbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "LoanDisbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "LoanDisbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanDisbursement> LoanDisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "LoanDisbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanDisbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "LoanDisbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Receivable_Disbursement", "Receivable")]
        public EntityCollection<Receivable> Receivables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receivable>("FinancialModel.FK_Receivable_Disbursement", "Receivable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receivable>("FinancialModel.FK_Receivable_Disbursement", "Receivable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementDetailsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementDetailsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementDetailsView object.
        /// </summary>
        /// <param name="dateDisbursed">Initial value of the DateDisbursed property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        public static DisbursementDetailsView CreateDisbursementDetailsView(global::System.DateTime dateDisbursed, global::System.String paymentMethod)
        {
            DisbursementDetailsView disbursementDetailsView = new DisbursementDetailsView();
            disbursementDetailsView.DateDisbursed = dateDisbursed;
            disbursementDetailsView.PaymentMethod = paymentMethod;
            return disbursementDetailsView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateDisbursed
        {
            get
            {
                return _DateDisbursed;
            }
            set
            {
                if (_DateDisbursed != value)
                {
                    OnDateDisbursedChanging(value);
                    ReportPropertyChanging("DateDisbursed");
                    _DateDisbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateDisbursed");
                    OnDateDisbursedChanged();
                }
            }
        }
        private global::System.DateTime _DateDisbursed;
        partial void OnDateDisbursedChanging(global::System.DateTime value);
        partial void OnDateDisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedTo
        {
            get
            {
                return _DisbursedTo;
            }
            set
            {
                OnDisbursedToChanging(value);
                ReportPropertyChanging("DisbursedTo");
                _DisbursedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedTo");
                OnDisbursedToChanged();
            }
        }
        private global::System.String _DisbursedTo;
        partial void OnDisbursedToChanging(global::System.String value);
        partial void OnDisbursedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                if (_PaymentMethod != value)
                {
                    OnPaymentMethodChanging(value);
                    ReportPropertyChanging("PaymentMethod");
                    _PaymentMethod = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PaymentMethod");
                    OnPaymentMethodChanged();
                }
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedBy
        {
            get
            {
                return _DisbursedBy;
            }
            set
            {
                OnDisbursedByChanging(value);
                ReportPropertyChanging("DisbursedBy");
                _DisbursedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedBy");
                OnDisbursedByChanged();
            }
        }
        private global::System.String _DisbursedBy;
        partial void OnDisbursedByChanging(global::System.String value);
        partial void OnDisbursedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="particular">Initial value of the Particular property.</param>
        /// <param name="perItemAmount">Initial value of the PerItemAmount property.</param>
        public static DisbursementItem CreateDisbursementItem(global::System.Int32 id, global::System.Int32 paymentId, global::System.String particular, global::System.Decimal perItemAmount)
        {
            DisbursementItem disbursementItem = new DisbursementItem();
            disbursementItem.Id = id;
            disbursementItem.PaymentId = paymentId;
            disbursementItem.Particular = particular;
            disbursementItem.PerItemAmount = perItemAmount;
            return disbursementItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Particular
        {
            get
            {
                return _Particular;
            }
            set
            {
                OnParticularChanging(value);
                ReportPropertyChanging("Particular");
                _Particular = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Particular");
                OnParticularChanged();
            }
        }
        private global::System.String _Particular;
        partial void OnParticularChanging(global::System.String value);
        partial void OnParticularChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PerItemAmount
        {
            get
            {
                return _PerItemAmount;
            }
            set
            {
                OnPerItemAmountChanging(value);
                ReportPropertyChanging("PerItemAmount");
                _PerItemAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerItemAmount");
                OnPerItemAmountChanged();
            }
        }
        private global::System.Decimal _PerItemAmount;
        partial void OnPerItemAmountChanging(global::System.Decimal value);
        partial void OnPerItemAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE", "Disbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DisbursementType CreateDisbursementType(global::System.Int32 id)
        {
            DisbursementType disbursementType = new DisbursementType();
            disbursementType.Id = id;
            return disbursementType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE5", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE5", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE5", "Disbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementVcrStatTypeAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementVcrStatTypeAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementVcrStatTypeAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fromStatusTypeId">Initial value of the FromStatusTypeId property.</param>
        /// <param name="toStatusTypeId">Initial value of the ToStatusTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static DisbursementVcrStatTypeAssoc CreateDisbursementVcrStatTypeAssoc(global::System.Int32 id, global::System.Int32 fromStatusTypeId, global::System.Int32 toStatusTypeId, global::System.DateTime effectiveDate)
        {
            DisbursementVcrStatTypeAssoc disbursementVcrStatTypeAssoc = new DisbursementVcrStatTypeAssoc();
            disbursementVcrStatTypeAssoc.Id = id;
            disbursementVcrStatTypeAssoc.FromStatusTypeId = fromStatusTypeId;
            disbursementVcrStatTypeAssoc.ToStatusTypeId = toStatusTypeId;
            disbursementVcrStatTypeAssoc.EffectiveDate = effectiveDate;
            return disbursementVcrStatTypeAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromStatusTypeId
        {
            get
            {
                return _FromStatusTypeId;
            }
            set
            {
                OnFromStatusTypeIdChanging(value);
                ReportPropertyChanging("FromStatusTypeId");
                _FromStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromStatusTypeId");
                OnFromStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _FromStatusTypeId;
        partial void OnFromStatusTypeIdChanging(global::System.Int32 value);
        partial void OnFromStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToStatusTypeId
        {
            get
            {
                return _ToStatusTypeId;
            }
            set
            {
                OnToStatusTypeIdChanging(value);
                ReportPropertyChanging("ToStatusTypeId");
                _ToStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToStatusTypeId");
                OnToStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _ToStatusTypeId;
        partial void OnToStatusTypeIdChanging(global::System.Int32 value);
        partial void OnToStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatusType")]
        public DisbursementVcrStatusType DisbursementVcrStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementVcrStatusType> DisbursementVcrStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatusType")]
        public DisbursementVcrStatusType DisbursementVcrStatusType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementVcrStatusType> DisbursementVcrStatusType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementVcrStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementVcrStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementVcrStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="disbursementVoucherStatTypId">Initial value of the DisbursementVoucherStatTypId property.</param>
        /// <param name="loanDisbursementVoucherId">Initial value of the LoanDisbursementVoucherId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static DisbursementVcrStatu CreateDisbursementVcrStatu(global::System.Int32 id, global::System.Int32 disbursementVoucherStatTypId, global::System.Int32 loanDisbursementVoucherId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            DisbursementVcrStatu disbursementVcrStatu = new DisbursementVcrStatu();
            disbursementVcrStatu.Id = id;
            disbursementVcrStatu.DisbursementVoucherStatTypId = disbursementVoucherStatTypId;
            disbursementVcrStatu.LoanDisbursementVoucherId = loanDisbursementVoucherId;
            disbursementVcrStatu.TransitionDateTime = transitionDateTime;
            disbursementVcrStatu.IsActive = isActive;
            return disbursementVcrStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementVoucherStatTypId
        {
            get
            {
                return _DisbursementVoucherStatTypId;
            }
            set
            {
                OnDisbursementVoucherStatTypIdChanging(value);
                ReportPropertyChanging("DisbursementVoucherStatTypId");
                _DisbursementVoucherStatTypId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementVoucherStatTypId");
                OnDisbursementVoucherStatTypIdChanged();
            }
        }
        private global::System.Int32 _DisbursementVoucherStatTypId;
        partial void OnDisbursementVoucherStatTypIdChanging(global::System.Int32 value);
        partial void OnDisbursementVoucherStatTypIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanDisbursementVoucherId
        {
            get
            {
                return _LoanDisbursementVoucherId;
            }
            set
            {
                OnLoanDisbursementVoucherIdChanging(value);
                ReportPropertyChanging("LoanDisbursementVoucherId");
                _LoanDisbursementVoucherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanDisbursementVoucherId");
                OnLoanDisbursementVoucherIdChanged();
            }
        }
        private global::System.Int32 _LoanDisbursementVoucherId;
        partial void OnLoanDisbursementVoucherIdChanging(global::System.Int32 value);
        partial void OnLoanDisbursementVoucherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatusType")]
        public DisbursementVcrStatusType DisbursementVcrStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisbursementVcrStatusType> DisbursementVcrStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisbursementVcrStatusType>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_LOANDISB", "LoanDisbursementVcr")]
        public LoanDisbursementVcr LoanDisbursementVcr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_DISBURSE_REFERENCE_LOANDISB", "LoanDisbursementVcr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_DISBURSE_REFERENCE_LOANDISB", "LoanDisbursementVcr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanDisbursementVcr> LoanDisbursementVcrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_DISBURSE_REFERENCE_LOANDISB", "LoanDisbursementVcr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_DISBURSE_REFERENCE_LOANDISB", "LoanDisbursementVcr", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementVcrStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementVcrStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementVcrStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DisbursementVcrStatusType CreateDisbursementVcrStatusType(global::System.Int32 id, global::System.String name)
        {
            DisbursementVcrStatusType disbursementVcrStatusType = new DisbursementVcrStatusType();
            disbursementVcrStatusType.Id = id;
            disbursementVcrStatusType.Name = name;
            return disbursementVcrStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatTypeAssoc")]
        public EntityCollection<DisbursementVcrStatTypeAssoc> DisbursementVcrStatTypeAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementVcrStatTypeAssoc>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementVcrStatTypeAssoc>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE2", "DisbursementVcrStatTypeAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatTypeAssoc")]
        public EntityCollection<DisbursementVcrStatTypeAssoc> DisbursementVcrStatTypeAssocs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementVcrStatTypeAssoc>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementVcrStatTypeAssoc>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE3", "DisbursementVcrStatTypeAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatus")]
        public EntityCollection<DisbursementVcrStatu> DisbursementVcrStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementVcrStatu>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementVcrStatu>("FinancialModel.FK_DISBURSE_REFERENCE_DISBURSE4", "DisbursementVcrStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DisbursementViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementViewList object.
        /// </summary>
        /// <param name="disbursementId">Initial value of the DisbursementId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="disbursementTypeId">Initial value of the DisbursementTypeId property.</param>
        public static DisbursementViewList CreateDisbursementViewList(global::System.Int32 disbursementId, global::System.DateTime date, global::System.Decimal amount, global::System.String type, global::System.Int32 disbursementTypeId)
        {
            DisbursementViewList disbursementViewList = new DisbursementViewList();
            disbursementViewList.DisbursementId = disbursementId;
            disbursementViewList.Date = date;
            disbursementViewList.Amount = amount;
            disbursementViewList.Type = type;
            disbursementViewList.DisbursementTypeId = disbursementTypeId;
            return disbursementViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementId
        {
            get
            {
                return _DisbursementId;
            }
            set
            {
                if (_DisbursementId != value)
                {
                    OnDisbursementIdChanging(value);
                    ReportPropertyChanging("DisbursementId");
                    _DisbursementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementId");
                    OnDisbursementIdChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementId;
        partial void OnDisbursementIdChanging(global::System.Int32 value);
        partial void OnDisbursementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedTo
        {
            get
            {
                return _DisbursedTo;
            }
            set
            {
                OnDisbursedToChanging(value);
                ReportPropertyChanging("DisbursedTo");
                _DisbursedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedTo");
                OnDisbursedToChanged();
            }
        }
        private global::System.String _DisbursedTo;
        partial void OnDisbursedToChanging(global::System.String value);
        partial void OnDisbursedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedBy
        {
            get
            {
                return _DisbursedBy;
            }
            set
            {
                OnDisbursedByChanging(value);
                ReportPropertyChanging("DisbursedBy");
                _DisbursedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedBy");
                OnDisbursedByChanged();
            }
        }
        private global::System.String _DisbursedBy;
        partial void OnDisbursedByChanging(global::System.String value);
        partial void OnDisbursedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeId
        {
            get
            {
                return _DisbursementTypeId;
            }
            set
            {
                if (_DisbursementTypeId != value)
                {
                    OnDisbursementTypeIdChanging(value);
                    ReportPropertyChanging("DisbursementTypeId");
                    _DisbursementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeId");
                    OnDisbursementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeId;
        partial void OnDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursementType
        {
            get
            {
                return _DisbursementType;
            }
            set
            {
                OnDisbursementTypeChanging(value);
                ReportPropertyChanging("DisbursementType");
                _DisbursementType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursementType");
                OnDisbursementTypeChanged();
            }
        }
        private global::System.String _DisbursementType;
        partial void OnDisbursementTypeChanging(global::System.String value);
        partial void OnDisbursementTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DistrictType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DistrictType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistrictType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DistrictType CreateDistrictType(global::System.Int32 id, global::System.String name)
        {
            DistrictType districtType = new DistrictType();
            districtType.Id = id;
            districtType.Name = name;
            return districtType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ClassificationType_DistrictType", "ClassificationType")]
        public EntityCollection<ClassificationType> ClassificationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassificationType>("FinancialModel.FK_ClassificationType_DistrictType", "ClassificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassificationType>("FinancialModel.FK_ClassificationType_DistrictType", "ClassificationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="DocumentPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentPage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="submittedDocumentId">Initial value of the SubmittedDocumentId property.</param>
        /// <param name="imageFilename">Initial value of the ImageFilename property.</param>
        /// <param name="imageFilePath">Initial value of the ImageFilePath property.</param>
        public static DocumentPage CreateDocumentPage(global::System.Int32 id, global::System.Int32 submittedDocumentId, global::System.String imageFilename, global::System.String imageFilePath)
        {
            DocumentPage documentPage = new DocumentPage();
            documentPage.Id = id;
            documentPage.SubmittedDocumentId = submittedDocumentId;
            documentPage.ImageFilename = imageFilename;
            documentPage.ImageFilePath = imageFilePath;
            return documentPage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubmittedDocumentId
        {
            get
            {
                return _SubmittedDocumentId;
            }
            set
            {
                OnSubmittedDocumentIdChanging(value);
                ReportPropertyChanging("SubmittedDocumentId");
                _SubmittedDocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmittedDocumentId");
                OnSubmittedDocumentIdChanged();
            }
        }
        private global::System.Int32 _SubmittedDocumentId;
        partial void OnSubmittedDocumentIdChanging(global::System.Int32 value);
        partial void OnSubmittedDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageFilename
        {
            get
            {
                return _ImageFilename;
            }
            set
            {
                OnImageFilenameChanging(value);
                ReportPropertyChanging("ImageFilename");
                _ImageFilename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageFilename");
                OnImageFilenameChanged();
            }
        }
        private global::System.String _ImageFilename;
        partial void OnImageFilenameChanging(global::System.String value);
        partial void OnImageFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageFilePath
        {
            get
            {
                return _ImageFilePath;
            }
            set
            {
                OnImageFilePathChanging(value);
                ReportPropertyChanging("ImageFilePath");
                _ImageFilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageFilePath");
                OnImageFilePathChanged();
            }
        }
        private global::System.String _ImageFilePath;
        partial void OnImageFilePathChanging(global::System.String value);
        partial void OnImageFilePathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DOCUMENT_REFERENCE_SUBMITTE", "SubmittedDocument")]
        public SubmittedDocument SubmittedDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocument>("FinancialModel.FK_DOCUMENT_REFERENCE_SUBMITTE", "SubmittedDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocument>("FinancialModel.FK_DOCUMENT_REFERENCE_SUBMITTE", "SubmittedDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubmittedDocument> SubmittedDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocument>("FinancialModel.FK_DOCUMENT_REFERENCE_SUBMITTE", "SubmittedDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubmittedDocument>("FinancialModel.FK_DOCUMENT_REFERENCE_SUBMITTE", "SubmittedDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="EducAttainmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducAttainmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EducAttainmentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EducAttainmentType CreateEducAttainmentType(global::System.Int32 id, global::System.String name)
        {
            EducAttainmentType educAttainmentType = new EducAttainmentType();
            educAttainmentType.Id = id;
            educAttainmentType.Name = name;
            return educAttainmentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_EDUCATTA", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("FinancialModel.FK_PERSON_REFERENCE_EDUCATTA", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("FinancialModel.FK_PERSON_REFERENCE_EDUCATTA", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ElectronicAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElectronicAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElectronicAddress object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="electronicAddressString">Initial value of the ElectronicAddressString property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        public static ElectronicAddress CreateElectronicAddress(global::System.Int32 addressId, global::System.String electronicAddressString, global::System.Boolean isPrimary)
        {
            ElectronicAddress electronicAddress = new ElectronicAddress();
            electronicAddress.AddressId = addressId;
            electronicAddress.ElectronicAddressString = electronicAddressString;
            electronicAddress.IsPrimary = isPrimary;
            return electronicAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ElectronicAddressTypeId
        {
            get
            {
                return _ElectronicAddressTypeId;
            }
            set
            {
                OnElectronicAddressTypeIdChanging(value);
                ReportPropertyChanging("ElectronicAddressTypeId");
                _ElectronicAddressTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ElectronicAddressTypeId");
                OnElectronicAddressTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ElectronicAddressTypeId;
        partial void OnElectronicAddressTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnElectronicAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ElectronicAddressString
        {
            get
            {
                return _ElectronicAddressString;
            }
            set
            {
                OnElectronicAddressStringChanging(value);
                ReportPropertyChanging("ElectronicAddressString");
                _ElectronicAddressString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ElectronicAddressString");
                OnElectronicAddressStringChanged();
            }
        }
        private global::System.String _ElectronicAddressString;
        partial void OnElectronicAddressStringChanging(global::System.String value);
        partial void OnElectronicAddressStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ELECTRON_REFERENCE_ADDRESS", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("FinancialModel.FK_ELECTRON_REFERENCE_ADDRESS", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddressType")]
        public ElectronicAddressType ElectronicAddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElectronicAddressType>("FinancialModel.FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElectronicAddressType>("FinancialModel.FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ElectronicAddressType> ElectronicAddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElectronicAddressType>("FinancialModel.FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ElectronicAddressType>("FinancialModel.FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddressType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ElectronicAddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElectronicAddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElectronicAddressType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ElectronicAddressType CreateElectronicAddressType(global::System.Int32 id, global::System.String name)
        {
            ElectronicAddressType electronicAddressType = new ElectronicAddressType();
            electronicAddressType.Id = id;
            electronicAddressType.Name = name;
            return electronicAddressType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddress")]
        public EntityCollection<ElectronicAddress> ElectronicAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElectronicAddress>("FinancialModel.FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElectronicAddress>("FinancialModel.FK_ELECTRON_REFERENCE_ELECTRON", "ElectronicAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static Employee CreateEmployee(global::System.Int32 partyRoleId, global::System.String position)
        {
            Employee employee = new Employee();
            employee.PartyRoleId = partyRoleId;
            employee.Position = position;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployeeIdNumber
        {
            get
            {
                return _EmployeeIdNumber;
            }
            set
            {
                OnEmployeeIdNumberChanging(value);
                ReportPropertyChanging("EmployeeIdNumber");
                _EmployeeIdNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployeeIdNumber");
                OnEmployeeIdNumberChanged();
            }
        }
        private global::System.String _EmployeeIdNumber;
        partial void OnEmployeeIdNumberChanging(global::System.String value);
        partial void OnEmployeeIdNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SssNumber
        {
            get
            {
                return _SssNumber;
            }
            set
            {
                OnSssNumberChanging(value);
                ReportPropertyChanging("SssNumber");
                _SssNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SssNumber");
                OnSssNumberChanged();
            }
        }
        private global::System.String _SssNumber;
        partial void OnSssNumberChanging(global::System.String value);
        partial void OnSssNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GsisNumber
        {
            get
            {
                return _GsisNumber;
            }
            set
            {
                OnGsisNumberChanging(value);
                ReportPropertyChanging("GsisNumber");
                _GsisNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GsisNumber");
                OnGsisNumberChanged();
            }
        }
        private global::System.String _GsisNumber;
        partial void OnGsisNumberChanging(global::System.String value);
        partial void OnGsisNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwaNumber
        {
            get
            {
                return _OwaNumber;
            }
            set
            {
                OnOwaNumberChanging(value);
                ReportPropertyChanging("OwaNumber");
                _OwaNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwaNumber");
                OnOwaNumberChanged();
            }
        }
        private global::System.String _OwaNumber;
        partial void OnOwaNumberChanging(global::System.String value);
        partial void OnOwaNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhicNumber
        {
            get
            {
                return _PhicNumber;
            }
            set
            {
                OnPhicNumberChanging(value);
                ReportPropertyChanging("PhicNumber");
                _PhicNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhicNumber");
                OnPhicNumberChanged();
            }
        }
        private global::System.String _PhicNumber;
        partial void OnPhicNumberChanging(global::System.String value);
        partial void OnPhicNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_EMPLOYEE_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="EmployeePositionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePositionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePositionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EmployeePositionType CreateEmployeePositionType(global::System.Int32 id, global::System.String name)
        {
            EmployeePositionType employeePositionType = new EmployeePositionType();
            employeePositionType.Id = id;
            employeePositionType.Name = name;
            return employeePositionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="EmployeeViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeViewList object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="employmentStatus">Initial value of the EmploymentStatus property.</param>
        public static EmployeeViewList CreateEmployeeViewList(global::System.Int32 employeeId, global::System.String employmentStatus)
        {
            EmployeeViewList employeeViewList = new EmployeeViewList();
            employeeViewList.EmployeeId = employeeId;
            employeeViewList.EmploymentStatus = employmentStatus;
            return employeeViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployeeIdNumber
        {
            get
            {
                return _EmployeeIdNumber;
            }
            set
            {
                OnEmployeeIdNumberChanging(value);
                ReportPropertyChanging("EmployeeIdNumber");
                _EmployeeIdNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployeeIdNumber");
                OnEmployeeIdNumberChanged();
            }
        }
        private global::System.String _EmployeeIdNumber;
        partial void OnEmployeeIdNumberChanging(global::System.String value);
        partial void OnEmployeeIdNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmploymentStatus
        {
            get
            {
                return _EmploymentStatus;
            }
            set
            {
                if (_EmploymentStatus != value)
                {
                    OnEmploymentStatusChanging(value);
                    ReportPropertyChanging("EmploymentStatus");
                    _EmploymentStatus = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmploymentStatus");
                    OnEmploymentStatusChanged();
                }
            }
        }
        private global::System.String _EmploymentStatus;
        partial void OnEmploymentStatusChanging(global::System.String value);
        partial void OnEmploymentStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="EmployersViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployersViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployersViewList object.
        /// </summary>
        /// <param name="partyType">Initial value of the PartyType property.</param>
        /// <param name="employerID">Initial value of the EmployerID property.</param>
        public static EmployersViewList CreateEmployersViewList(global::System.String partyType, global::System.Int32 employerID)
        {
            EmployersViewList employersViewList = new EmployersViewList();
            employersViewList.PartyType = partyType;
            employersViewList.EmployerID = employerID;
            return employersViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartyType
        {
            get
            {
                return _PartyType;
            }
            set
            {
                if (_PartyType != value)
                {
                    OnPartyTypeChanging(value);
                    ReportPropertyChanging("PartyType");
                    _PartyType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PartyType");
                    OnPartyTypeChanged();
                }
            }
        }
        private global::System.String _PartyType;
        partial void OnPartyTypeChanging(global::System.String value);
        partial void OnPartyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployerID
        {
            get
            {
                return _EmployerID;
            }
            set
            {
                if (_EmployerID != value)
                {
                    OnEmployerIDChanging(value);
                    ReportPropertyChanging("EmployerID");
                    _EmployerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployerID");
                    OnEmployerIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployerID;
        partial void OnEmployerIDChanging(global::System.Int32 value);
        partial void OnEmployerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessAddress
        {
            get
            {
                return _BusinessAddress;
            }
            set
            {
                OnBusinessAddressChanging(value);
                ReportPropertyChanging("BusinessAddress");
                _BusinessAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessAddress");
                OnBusinessAddressChanged();
            }
        }
        private global::System.String _BusinessAddress;
        partial void OnBusinessAddressChanging(global::System.String value);
        partial void OnBusinessAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Employment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employment object.
        /// </summary>
        /// <param name="partyRelationshipId">Initial value of the PartyRelationshipId property.</param>
        /// <param name="employmentStatus">Initial value of the EmploymentStatus property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        public static Employment CreateEmployment(global::System.Int32 partyRelationshipId, global::System.String employmentStatus, global::System.String salary)
        {
            Employment employment = new Employment();
            employment.PartyRelationshipId = partyRelationshipId;
            employment.EmploymentStatus = employmentStatus;
            employment.Salary = salary;
            return employment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRelationshipId
        {
            get
            {
                return _PartyRelationshipId;
            }
            set
            {
                if (_PartyRelationshipId != value)
                {
                    OnPartyRelationshipIdChanging(value);
                    ReportPropertyChanging("PartyRelationshipId");
                    _PartyRelationshipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRelationshipId");
                    OnPartyRelationshipIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRelationshipId;
        partial void OnPartyRelationshipIdChanging(global::System.Int32 value);
        partial void OnPartyRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmploymentStatus
        {
            get
            {
                return _EmploymentStatus;
            }
            set
            {
                OnEmploymentStatusChanging(value);
                ReportPropertyChanging("EmploymentStatus");
                _EmploymentStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmploymentStatus");
                OnEmploymentStatusChanged();
            }
        }
        private global::System.String _EmploymentStatus;
        partial void OnEmploymentStatusChanging(global::System.String value);
        partial void OnEmploymentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.String _Salary;
        partial void OnSalaryChanging(global::System.String value);
        partial void OnSalaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_EMPLOYME_REFERENCE_PARTYREL", "PartyRelationship")]
        public PartyRelationship PartyRelationship
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRelationship>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "PartyRelationship").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRelationship>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "PartyRelationship").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRelationship> PartyRelationshipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRelationship>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "PartyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRelationship>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "PartyRelationship", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Encashment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Encashment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Encashment object.
        /// </summary>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="surcharge">Initial value of the Surcharge property.</param>
        public static Encashment CreateEncashment(global::System.Int32 paymentId, global::System.Decimal surcharge)
        {
            Encashment encashment = new Encashment();
            encashment.PaymentId = paymentId;
            encashment.Surcharge = surcharge;
            return encashment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Surcharge
        {
            get
            {
                return _Surcharge;
            }
            set
            {
                OnSurchargeChanging(value);
                ReportPropertyChanging("Surcharge");
                _Surcharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Surcharge");
                OnSurchargeChanged();
            }
        }
        private global::System.Decimal _Surcharge;
        partial void OnSurchargeChanging(global::System.Decimal value);
        partial void OnSurchargeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ENCASHME_REFERENCE_DISBURSE", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("FinancialModel.FK_ENCASHME_REFERENCE_DISBURSE", "Disbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="EncashmentViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EncashmentViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EncashmentViewList object.
        /// </summary>
        /// <param name="check_Date">Initial value of the Check_Date property.</param>
        /// <param name="date_Disbursed">Initial value of the Date_Disbursed property.</param>
        /// <param name="surcharge_Fee">Initial value of the Surcharge_Fee property.</param>
        /// <param name="amount_Disbursed">Initial value of the Amount_Disbursed property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="disbursementTypeId">Initial value of the DisbursementTypeId property.</param>
        public static EncashmentViewList CreateEncashmentViewList(global::System.DateTime check_Date, global::System.DateTime date_Disbursed, global::System.Decimal surcharge_Fee, global::System.Decimal amount_Disbursed, global::System.Int32 paymentId, global::System.Int32 disbursementTypeId)
        {
            EncashmentViewList encashmentViewList = new EncashmentViewList();
            encashmentViewList.Check_Date = check_Date;
            encashmentViewList.Date_Disbursed = date_Disbursed;
            encashmentViewList.Surcharge_Fee = surcharge_Fee;
            encashmentViewList.Amount_Disbursed = amount_Disbursed;
            encashmentViewList.PaymentId = paymentId;
            encashmentViewList.DisbursementTypeId = disbursementTypeId;
            return encashmentViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Check_Number
        {
            get
            {
                return _Check_Number;
            }
            set
            {
                OnCheck_NumberChanging(value);
                ReportPropertyChanging("Check_Number");
                _Check_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Check_Number");
                OnCheck_NumberChanged();
            }
        }
        private global::System.String _Check_Number;
        partial void OnCheck_NumberChanging(global::System.String value);
        partial void OnCheck_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Check_Date
        {
            get
            {
                return _Check_Date;
            }
            set
            {
                if (_Check_Date != value)
                {
                    OnCheck_DateChanging(value);
                    ReportPropertyChanging("Check_Date");
                    _Check_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Check_Date");
                    OnCheck_DateChanged();
                }
            }
        }
        private global::System.DateTime _Check_Date;
        partial void OnCheck_DateChanging(global::System.DateTime value);
        partial void OnCheck_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Check_Amount
        {
            get
            {
                return _Check_Amount;
            }
            set
            {
                OnCheck_AmountChanging(value);
                ReportPropertyChanging("Check_Amount");
                _Check_Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Check_Amount");
                OnCheck_AmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Check_Amount;
        partial void OnCheck_AmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCheck_AmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_Disbursed
        {
            get
            {
                return _Date_Disbursed;
            }
            set
            {
                if (_Date_Disbursed != value)
                {
                    OnDate_DisbursedChanging(value);
                    ReportPropertyChanging("Date_Disbursed");
                    _Date_Disbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date_Disbursed");
                    OnDate_DisbursedChanged();
                }
            }
        }
        private global::System.DateTime _Date_Disbursed;
        partial void OnDate_DisbursedChanging(global::System.DateTime value);
        partial void OnDate_DisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedTo
        {
            get
            {
                return _DisbursedTo;
            }
            set
            {
                OnDisbursedToChanging(value);
                ReportPropertyChanging("DisbursedTo");
                _DisbursedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedTo");
                OnDisbursedToChanged();
            }
        }
        private global::System.String _DisbursedTo;
        partial void OnDisbursedToChanging(global::System.String value);
        partial void OnDisbursedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Surcharge_Fee
        {
            get
            {
                return _Surcharge_Fee;
            }
            set
            {
                if (_Surcharge_Fee != value)
                {
                    OnSurcharge_FeeChanging(value);
                    ReportPropertyChanging("Surcharge_Fee");
                    _Surcharge_Fee = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Surcharge_Fee");
                    OnSurcharge_FeeChanged();
                }
            }
        }
        private global::System.Decimal _Surcharge_Fee;
        partial void OnSurcharge_FeeChanging(global::System.Decimal value);
        partial void OnSurcharge_FeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount_Disbursed
        {
            get
            {
                return _Amount_Disbursed;
            }
            set
            {
                if (_Amount_Disbursed != value)
                {
                    OnAmount_DisbursedChanging(value);
                    ReportPropertyChanging("Amount_Disbursed");
                    _Amount_Disbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount_Disbursed");
                    OnAmount_DisbursedChanged();
                }
            }
        }
        private global::System.Decimal _Amount_Disbursed;
        partial void OnAmount_DisbursedChanging(global::System.Decimal value);
        partial void OnAmount_DisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Disbursed_By
        {
            get
            {
                return _Disbursed_By;
            }
            set
            {
                OnDisbursed_ByChanging(value);
                ReportPropertyChanging("Disbursed_By");
                _Disbursed_By = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Disbursed_By");
                OnDisbursed_ByChanged();
            }
        }
        private global::System.String _Disbursed_By;
        partial void OnDisbursed_ByChanging(global::System.String value);
        partial void OnDisbursed_ByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeId
        {
            get
            {
                return _DisbursementTypeId;
            }
            set
            {
                if (_DisbursementTypeId != value)
                {
                    OnDisbursementTypeIdChanging(value);
                    ReportPropertyChanging("DisbursementTypeId");
                    _DisbursementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeId");
                    OnDisbursementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeId;
        partial void OnDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ExchangeRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExchangeRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeRate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="currencyFromId">Initial value of the CurrencyFromId property.</param>
        /// <param name="currencyToId">Initial value of the CurrencyToId property.</param>
        /// <param name="exchangeRateTypeId">Initial value of the ExchangeRateTypeId property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ExchangeRate CreateExchangeRate(global::System.Int32 id, global::System.Int32 currencyFromId, global::System.Int32 currencyToId, global::System.Int32 exchangeRateTypeId, global::System.Decimal rate, global::System.DateTime date, global::System.Boolean isActive)
        {
            ExchangeRate exchangeRate = new ExchangeRate();
            exchangeRate.Id = id;
            exchangeRate.CurrencyFromId = currencyFromId;
            exchangeRate.CurrencyToId = currencyToId;
            exchangeRate.ExchangeRateTypeId = exchangeRateTypeId;
            exchangeRate.Rate = rate;
            exchangeRate.Date = date;
            exchangeRate.IsActive = isActive;
            return exchangeRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyFromId
        {
            get
            {
                return _CurrencyFromId;
            }
            set
            {
                OnCurrencyFromIdChanging(value);
                ReportPropertyChanging("CurrencyFromId");
                _CurrencyFromId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyFromId");
                OnCurrencyFromIdChanged();
            }
        }
        private global::System.Int32 _CurrencyFromId;
        partial void OnCurrencyFromIdChanging(global::System.Int32 value);
        partial void OnCurrencyFromIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyToId
        {
            get
            {
                return _CurrencyToId;
            }
            set
            {
                OnCurrencyToIdChanging(value);
                ReportPropertyChanging("CurrencyToId");
                _CurrencyToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyToId");
                OnCurrencyToIdChanged();
            }
        }
        private global::System.Int32 _CurrencyToId;
        partial void OnCurrencyToIdChanging(global::System.Int32 value);
        partial void OnCurrencyToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExchangeRateTypeId
        {
            get
            {
                return _ExchangeRateTypeId;
            }
            set
            {
                OnExchangeRateTypeIdChanging(value);
                ReportPropertyChanging("ExchangeRateTypeId");
                _ExchangeRateTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRateTypeId");
                OnExchangeRateTypeIdChanged();
            }
        }
        private global::System.Int32 _ExchangeRateTypeId;
        partial void OnExchangeRateTypeIdChanging(global::System.Int32 value);
        partial void OnExchangeRateTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ExchangeRate_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ExchangeRate_Currency1", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency1", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency1", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency1", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_ExchangeRate_Currency1", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ExchangeRate_ExchangeRateType", "ExchangeRateType")]
        public ExchangeRateType ExchangeRateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExchangeRateType>("FinancialModel.FK_ExchangeRate_ExchangeRateType", "ExchangeRateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExchangeRateType>("FinancialModel.FK_ExchangeRate_ExchangeRateType", "ExchangeRateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExchangeRateType> ExchangeRateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExchangeRateType>("FinancialModel.FK_ExchangeRate_ExchangeRateType", "ExchangeRateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExchangeRateType>("FinancialModel.FK_ExchangeRate_ExchangeRateType", "ExchangeRateType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_ExchangeRate", "ForeignExchange")]
        public EntityCollection<ForeignExchange> ForeignExchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_ExchangeRate", "ForeignExchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_ExchangeRate", "ForeignExchange", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ExchangeRateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExchangeRateType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeRateType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ExchangeRateType CreateExchangeRateType(global::System.Int32 id, global::System.String name)
        {
            ExchangeRateType exchangeRateType = new ExchangeRateType();
            exchangeRateType.Id = id;
            exchangeRateType.Name = name;
            return exchangeRateType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ExchangeRate_ExchangeRateType", "ExchangeRate")]
        public EntityCollection<ExchangeRate> ExchangeRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeRate>("FinancialModel.FK_ExchangeRate_ExchangeRateType", "ExchangeRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeRate>("FinancialModel.FK_ExchangeRate_ExchangeRateType", "ExchangeRate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Fee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fee object.
        /// </summary>
        /// <param name="productFeatApplicabilityId">Initial value of the ProductFeatApplicabilityId property.</param>
        public static Fee CreateFee(global::System.Int32 productFeatApplicabilityId)
        {
            Fee fee = new Fee();
            fee.ProductFeatApplicabilityId = productFeatApplicabilityId;
            return fee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductFeatApplicabilityId
        {
            get
            {
                return _ProductFeatApplicabilityId;
            }
            set
            {
                if (_ProductFeatApplicabilityId != value)
                {
                    OnProductFeatApplicabilityIdChanging(value);
                    ReportPropertyChanging("ProductFeatApplicabilityId");
                    _ProductFeatApplicabilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductFeatApplicabilityId");
                    OnProductFeatApplicabilityIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductFeatApplicabilityId;
        partial void OnProductFeatApplicabilityIdChanging(global::System.Int32 value);
        partial void OnProductFeatApplicabilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ChargeAmount
        {
            get
            {
                return _ChargeAmount;
            }
            set
            {
                OnChargeAmountChanging(value);
                ReportPropertyChanging("ChargeAmount");
                _ChargeAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargeAmount");
                OnChargeAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ChargeAmount;
        partial void OnChargeAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnChargeAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BaseAmount
        {
            get
            {
                return _BaseAmount;
            }
            set
            {
                OnBaseAmountChanging(value);
                ReportPropertyChanging("BaseAmount");
                _BaseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseAmount");
                OnBaseAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BaseAmount;
        partial void OnBaseAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBaseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PercentageRate
        {
            get
            {
                return _PercentageRate;
            }
            set
            {
                OnPercentageRateChanging(value);
                ReportPropertyChanging("PercentageRate");
                _PercentageRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentageRate");
                OnPercentageRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _PercentageRate;
        partial void OnPercentageRateChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageRateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FEE_REFERENCE_PRODUCTF", "ProductFeatureApplicability")]
        public ProductFeatureApplicability ProductFeatureApplicability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "ProductFeatureApplicability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "ProductFeatureApplicability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFeatureApplicability> ProductFeatureApplicabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "ProductFeatureApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "ProductFeatureApplicability", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FeePayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeePayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeePayment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="particular">Initial value of the Particular property.</param>
        /// <param name="feeAmount">Initial value of the FeeAmount property.</param>
        public static FeePayment CreateFeePayment(global::System.Int32 id, global::System.Int32 paymentId, global::System.String particular, global::System.Decimal feeAmount)
        {
            FeePayment feePayment = new FeePayment();
            feePayment.Id = id;
            feePayment.PaymentId = paymentId;
            feePayment.Particular = particular;
            feePayment.FeeAmount = feeAmount;
            return feePayment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Particular
        {
            get
            {
                return _Particular;
            }
            set
            {
                OnParticularChanging(value);
                ReportPropertyChanging("Particular");
                _Particular = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Particular");
                OnParticularChanged();
            }
        }
        private global::System.String _Particular;
        partial void OnParticularChanging(global::System.String value);
        partial void OnParticularChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FeeAmount
        {
            get
            {
                return _FeeAmount;
            }
            set
            {
                OnFeeAmountChanging(value);
                ReportPropertyChanging("FeeAmount");
                _FeeAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeAmount");
                OnFeeAmountChanged();
            }
        }
        private global::System.Decimal _FeeAmount;
        partial void OnFeeAmountChanging(global::System.Decimal value);
        partial void OnFeeAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FeePayment_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FeePayment_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FeePayment_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FeePayment_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_FeePayment_Payment", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinAcctTran")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinAcctTran : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinAcctTran object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialAcctTransTypeId">Initial value of the FinancialAcctTransTypeId property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static FinAcctTran CreateFinAcctTran(global::System.Int32 id, global::System.Int32 financialAcctTransTypeId, global::System.Int32 financialAccountId, global::System.DateTime transactionDate, global::System.DateTime entryDate, global::System.Decimal amount)
        {
            FinAcctTran finAcctTran = new FinAcctTran();
            finAcctTran.Id = id;
            finAcctTran.FinancialAcctTransTypeId = financialAcctTransTypeId;
            finAcctTran.FinancialAccountId = financialAccountId;
            finAcctTran.TransactionDate = transactionDate;
            finAcctTran.EntryDate = entryDate;
            finAcctTran.Amount = amount;
            return finAcctTran;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAcctTransTypeId
        {
            get
            {
                return _FinancialAcctTransTypeId;
            }
            set
            {
                OnFinancialAcctTransTypeIdChanging(value);
                ReportPropertyChanging("FinancialAcctTransTypeId");
                _FinancialAcctTransTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAcctTransTypeId");
                OnFinancialAcctTransTypeIdChanged();
            }
        }
        private global::System.Int32 _FinancialAcctTransTypeId;
        partial void OnFinancialAcctTransTypeIdChanging(global::System.Int32 value);
        partial void OnFinancialAcctTransTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentId;
        partial void OnPaymentIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTransRel")]
        public EntityCollection<FinAcctTransRel> FinAcctTransRels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTransRel>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTransRel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTransRel>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTransRel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTransRel")]
        public EntityCollection<FinAcctTransRel> FinAcctTransRels1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTransRel>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTransRel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTransRel>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTransRel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTransTask")]
        public EntityCollection<FinAcctTransTask> FinAcctTransTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTransTask>("FinancialModel.FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTransTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTransTask>("FinancialModel.FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTransTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINANCIA", "FinancialAccount")]
        public FinancialAccount FinancialAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINACCTT_REFERENCE_FINANCIA", "FinancialAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINACCTT_REFERENCE_FINANCIA", "FinancialAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccount> FinancialAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINACCTT_REFERENCE_FINANCIA", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccount>("FinancialModel.FK_FINACCTT_REFERENCE_FINANCIA", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINLACCT", "FinlAcctTransType")]
        public FinlAcctTransType FinlAcctTransType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINACCTT_REFERENCE_FINLACCT", "FinlAcctTransType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINACCTT_REFERENCE_FINLACCT", "FinlAcctTransType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinlAcctTransType> FinlAcctTransTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINACCTT_REFERENCE_FINLACCT", "FinlAcctTransType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINACCTT_REFERENCE_FINLACCT", "FinlAcctTransType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_PAYMENT", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FINACCTT_REFERENCE_PAYMENT", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FINACCTT_REFERENCE_PAYMENT", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FINACCTT_REFERENCE_PAYMENT", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_FINACCTT_REFERENCE_PAYMENT", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINACCTT", "FinancialAcctNotification")]
        public EntityCollection<FinancialAcctNotification> FinancialAcctNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAcctNotification>("FinancialModel.FK_FINANCIA_REFERENCE_FINACCTT", "FinancialAcctNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAcctNotification>("FinancialModel.FK_FINANCIA_REFERENCE_FINACCTT", "FinancialAcctNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINLACCT_REFERENCE_FINACCTT", "FinlAcctTransnStatus")]
        public EntityCollection<FinlAcctTransnStatu> FinlAcctTransnStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinlAcctTransnStatu>("FinancialModel.FK_FINLACCT_REFERENCE_FINACCTT", "FinlAcctTransnStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinlAcctTransnStatu>("FinancialModel.FK_FINLACCT_REFERENCE_FINACCTT", "FinlAcctTransnStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinAcctTransRel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinAcctTransRel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinAcctTransRel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialAcctTransRelTypeId">Initial value of the FinancialAcctTransRelTypeId property.</param>
        /// <param name="fromFinancialAcctTransactionId">Initial value of the FromFinancialAcctTransactionId property.</param>
        /// <param name="toFinancialAcctTransactionId">Initial value of the ToFinancialAcctTransactionId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static FinAcctTransRel CreateFinAcctTransRel(global::System.Int32 id, global::System.Int32 financialAcctTransRelTypeId, global::System.Int32 fromFinancialAcctTransactionId, global::System.Int32 toFinancialAcctTransactionId, global::System.DateTime effectiveDate)
        {
            FinAcctTransRel finAcctTransRel = new FinAcctTransRel();
            finAcctTransRel.Id = id;
            finAcctTransRel.FinancialAcctTransRelTypeId = financialAcctTransRelTypeId;
            finAcctTransRel.FromFinancialAcctTransactionId = fromFinancialAcctTransactionId;
            finAcctTransRel.ToFinancialAcctTransactionId = toFinancialAcctTransactionId;
            finAcctTransRel.EffectiveDate = effectiveDate;
            return finAcctTransRel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAcctTransRelTypeId
        {
            get
            {
                return _FinancialAcctTransRelTypeId;
            }
            set
            {
                OnFinancialAcctTransRelTypeIdChanging(value);
                ReportPropertyChanging("FinancialAcctTransRelTypeId");
                _FinancialAcctTransRelTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAcctTransRelTypeId");
                OnFinancialAcctTransRelTypeIdChanged();
            }
        }
        private global::System.Int32 _FinancialAcctTransRelTypeId;
        partial void OnFinancialAcctTransRelTypeIdChanging(global::System.Int32 value);
        partial void OnFinancialAcctTransRelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromFinancialAcctTransactionId
        {
            get
            {
                return _FromFinancialAcctTransactionId;
            }
            set
            {
                OnFromFinancialAcctTransactionIdChanging(value);
                ReportPropertyChanging("FromFinancialAcctTransactionId");
                _FromFinancialAcctTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromFinancialAcctTransactionId");
                OnFromFinancialAcctTransactionIdChanged();
            }
        }
        private global::System.Int32 _FromFinancialAcctTransactionId;
        partial void OnFromFinancialAcctTransactionIdChanging(global::System.Int32 value);
        partial void OnFromFinancialAcctTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToFinancialAcctTransactionId
        {
            get
            {
                return _ToFinancialAcctTransactionId;
            }
            set
            {
                OnToFinancialAcctTransactionIdChanging(value);
                ReportPropertyChanging("ToFinancialAcctTransactionId");
                _ToFinancialAcctTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToFinancialAcctTransactionId");
                OnToFinancialAcctTransactionIdChanged();
            }
        }
        private global::System.Int32 _ToFinancialAcctTransactionId;
        partial void OnToFinancialAcctTransactionIdChanging(global::System.Int32 value);
        partial void OnToFinancialAcctTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTrans")]
        public FinAcctTran FinAcctTran
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTrans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTrans").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTran> FinAcctTranReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT3", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTrans")]
        public FinAcctTran FinAcctTran1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTrans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTrans").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTran> FinAcctTran1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTran>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT4", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRelType")]
        public FinAcctTransRelType FinAcctTransRelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTransRelType>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTransRelType>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTransRelType> FinAcctTransRelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTransRelType>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTransRelType>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRelType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinAcctTransRelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinAcctTransRelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinAcctTransRelType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FinAcctTransRelType CreateFinAcctTransRelType(global::System.Int32 id, global::System.String name)
        {
            FinAcctTransRelType finAcctTransRelType = new FinAcctTransRelType();
            finAcctTransRelType.Id = id;
            finAcctTransRelType.Name = name;
            return finAcctTransRelType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRel")]
        public EntityCollection<FinAcctTransRel> FinAcctTransRels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTransRel>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTransRel>("FinancialModel.FK_FIN_ACCT_REFERENCE_FIN_ACCT2", "FinAcctTransRel", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinAcctTransStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinAcctTransStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinAcctTransStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FinAcctTransStatusType CreateFinAcctTransStatusType(global::System.Int32 id, global::System.String name)
        {
            FinAcctTransStatusType finAcctTransStatusType = new FinAcctTransStatusType();
            finAcctTransStatusType.Id = id;
            finAcctTransStatusType.Name = name;
            return finAcctTransStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinlAcctTransnStatus")]
        public EntityCollection<FinlAcctTransnStatu> FinlAcctTransnStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinlAcctTransnStatu>("FinancialModel.FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinlAcctTransnStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinlAcctTransnStatu>("FinancialModel.FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinlAcctTransnStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinAcctTransTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinAcctTransTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinAcctTransTask object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="transactionTaskTypeId">Initial value of the TransactionTaskTypeId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static FinAcctTransTask CreateFinAcctTransTask(global::System.Int32 id, global::System.Int32 transactionTaskTypeId, global::System.String description)
        {
            FinAcctTransTask finAcctTransTask = new FinAcctTransTask();
            finAcctTransTask.Id = id;
            finAcctTransTask.TransactionTaskTypeId = transactionTaskTypeId;
            finAcctTransTask.Description = description;
            return finAcctTransTask;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTaskTypeId
        {
            get
            {
                return _TransactionTaskTypeId;
            }
            set
            {
                OnTransactionTaskTypeIdChanging(value);
                ReportPropertyChanging("TransactionTaskTypeId");
                _TransactionTaskTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTaskTypeId");
                OnTransactionTaskTypeIdChanged();
            }
        }
        private global::System.Int32 _TransactionTaskTypeId;
        partial void OnTransactionTaskTypeIdChanging(global::System.Int32 value);
        partial void OnTransactionTaskTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UomId
        {
            get
            {
                return _UomId;
            }
            set
            {
                OnUomIdChanging(value);
                ReportPropertyChanging("UomId");
                _UomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UomId");
                OnUomIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UomId;
        partial void OnUomIdChanging(Nullable<global::System.Int32> value);
        partial void OnUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAcctTransactionId
        {
            get
            {
                return _FinancialAcctTransactionId;
            }
            set
            {
                OnFinancialAcctTransactionIdChanging(value);
                ReportPropertyChanging("FinancialAcctTransactionId");
                _FinancialAcctTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAcctTransactionId");
                OnFinancialAcctTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAcctTransactionId;
        partial void OnFinancialAcctTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAcctTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TaskCreationDate
        {
            get
            {
                return _TaskCreationDate;
            }
            set
            {
                OnTaskCreationDateChanging(value);
                ReportPropertyChanging("TaskCreationDate");
                _TaskCreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskCreationDate");
                OnTaskCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TaskCreationDate;
        partial void OnTaskCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTaskCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestedDate
        {
            get
            {
                return _RequestedDate;
            }
            set
            {
                OnRequestedDateChanging(value);
                ReportPropertyChanging("RequestedDate");
                _RequestedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedDate");
                OnRequestedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestedDate;
        partial void OnRequestedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTrans")]
        public FinAcctTran FinAcctTran
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTrans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTrans").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTran> FinAcctTranReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINACCTT", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_TRANSACT", "TransactionTaskType")]
        public TransactionTaskType TransactionTaskType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionTaskType>("FinancialModel.FK_FINACCTT_REFERENCE_TRANSACT", "TransactionTaskType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionTaskType>("FinancialModel.FK_FINACCTT_REFERENCE_TRANSACT", "TransactionTaskType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionTaskType> TransactionTaskTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionTaskType>("FinancialModel.FK_FINACCTT_REFERENCE_TRANSACT", "TransactionTaskType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionTaskType>("FinancialModel.FK_FINACCTT_REFERENCE_TRANSACT", "TransactionTaskType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_FINACCTT_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_FINACCTT_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_FINACCTT_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_FINACCTT_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="financialAccountTypeId">Initial value of the FinancialAccountTypeId property.</param>
        public static FinancialAccount CreateFinancialAccount(global::System.Int32 id, global::System.Int32 agreementId, global::System.Int32 financialAccountTypeId)
        {
            FinancialAccount financialAccount = new FinancialAccount();
            financialAccount.Id = id;
            financialAccount.AgreementId = agreementId;
            financialAccount.FinancialAccountTypeId = financialAccountTypeId;
            return financialAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                OnAgreementIdChanging(value);
                ReportPropertyChanging("AgreementId");
                _AgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementId");
                OnAgreementIdChanged();
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentFinancialAccountId
        {
            get
            {
                return _ParentFinancialAccountId;
            }
            set
            {
                OnParentFinancialAccountIdChanging(value);
                ReportPropertyChanging("ParentFinancialAccountId");
                _ParentFinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentFinancialAccountId");
                OnParentFinancialAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentFinancialAccountId;
        partial void OnParentFinancialAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountTypeId
        {
            get
            {
                return _FinancialAccountTypeId;
            }
            set
            {
                OnFinancialAccountTypeIdChanging(value);
                ReportPropertyChanging("FinancialAccountTypeId");
                _FinancialAccountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountTypeId");
                OnFinancialAccountTypeIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountTypeId;
        partial void OnFinancialAccountTypeIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_AGREEMEN", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_FINANCIA_REFERENCE_AGREEMEN", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_FINANCIA_REFERENCE_AGREEMEN", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_FINANCIA_REFERENCE_AGREEMEN", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_FINANCIA_REFERENCE_AGREEMEN", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINANCIA", "FinAcctTrans")]
        public EntityCollection<FinAcctTran> FinAcctTrans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINANCIA", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINANCIA", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccountRole")]
        public EntityCollection<FinancialAccountRole> FinancialAccountRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccountRole>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccountRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccountRole>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccountRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccountProduct")]
        public EntityCollection<FinancialAccountProduct> FinancialAccountProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccountProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccountProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccountProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccountProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccountType")]
        public FinancialAccountType FinancialAccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccountType>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccountType>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccountType> FinancialAccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccountType>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccountType>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount1")]
        public EntityCollection<FinancialAccount> FinancialAccount1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount")]
        public FinancialAccount FinancialAccount2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccount> FinancialAccount2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA6", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANACCO_REFERENCE_FINANCIA", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_FINANCIA2", "LoanModificationPrevItems")]
        public EntityCollection<LoanModificationPrevItem> LoanModificationPrevItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModificationPrevItem>("FinancialModel.FK_LOANMODI_REFERENCE_FINANCIA2", "LoanModificationPrevItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModificationPrevItem>("FinancialModel.FK_LOANMODI_REFERENCE_FINANCIA2", "LoanModificationPrevItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "LoanModificationNewItems", "LoanModificationPrevItems")]
        public EntityCollection<LoanModificationPrevItem> LoanModificationPrevItems1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModificationPrevItem>("FinancialModel.LoanModificationNewItems", "LoanModificationPrevItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModificationPrevItem>("FinancialModel.LoanModificationNewItems", "LoanModificationPrevItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialAccountProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialAccountProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialAccountProduct object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialProductId">Initial value of the FinancialProductId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static FinancialAccountProduct CreateFinancialAccountProduct(global::System.Int32 id, global::System.Int32 financialProductId, global::System.DateTime effectiveDate)
        {
            FinancialAccountProduct financialAccountProduct = new FinancialAccountProduct();
            financialAccountProduct.Id = id;
            financialAccountProduct.FinancialProductId = financialProductId;
            financialAccountProduct.EffectiveDate = effectiveDate;
            return financialAccountProduct;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialProductId
        {
            get
            {
                return _FinancialProductId;
            }
            set
            {
                OnFinancialProductIdChanging(value);
                ReportPropertyChanging("FinancialProductId");
                _FinancialProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialProductId");
                OnFinancialProductIdChanged();
            }
        }
        private global::System.Int32 _FinancialProductId;
        partial void OnFinancialProductIdChanging(global::System.Int32 value);
        partial void OnFinancialProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccount")]
        public FinancialAccount FinancialAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccount> FinancialAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA3", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialProduct")]
        public FinancialProduct FinancialProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialProduct> FinancialProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialProduct", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialAccountRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialAccountRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialAccountRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        public static FinancialAccountRole CreateFinancialAccountRole(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.Int32 financialAccountId)
        {
            FinancialAccountRole financialAccountRole = new FinancialAccountRole();
            financialAccountRole.Id = id;
            financialAccountRole.PartyRoleId = partyRoleId;
            financialAccountRole.FinancialAccountId = financialAccountId;
            return financialAccountRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccount")]
        public FinancialAccount FinancialAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccount> FinancialAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA2", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_FINANCIA_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_FINANCIA_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_FINANCIA_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_FINANCIA_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialAccountType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FinancialAccountType CreateFinancialAccountType(global::System.Int32 id, global::System.String name)
        {
            FinancialAccountType financialAccountType = new FinancialAccountType();
            financialAccountType.Id = id;
            financialAccountType.Name = name;
            return financialAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccount")]
        public EntityCollection<FinancialAccount> FinancialAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccount>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA5", "FinancialAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialAcctNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialAcctNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialAcctNotification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static FinancialAcctNotification CreateFinancialAcctNotification(global::System.Int32 id, global::System.DateTime date, global::System.String message)
        {
            FinancialAcctNotification financialAcctNotification = new FinancialAcctNotification();
            financialAcctNotification.Id = id;
            financialAcctNotification.Date = date;
            financialAcctNotification.Message = message;
            return financialAcctNotification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAcctNotificationId
        {
            get
            {
                return _FinancialAcctNotificationId;
            }
            set
            {
                OnFinancialAcctNotificationIdChanging(value);
                ReportPropertyChanging("FinancialAcctNotificationId");
                _FinancialAcctNotificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAcctNotificationId");
                OnFinancialAcctNotificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAcctNotificationId;
        partial void OnFinancialAcctNotificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAcctNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAcctTransactionId
        {
            get
            {
                return _FinancialAcctTransactionId;
            }
            set
            {
                OnFinancialAcctTransactionIdChanging(value);
                ReportPropertyChanging("FinancialAcctTransactionId");
                _FinancialAcctTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAcctTransactionId");
                OnFinancialAcctTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAcctTransactionId;
        partial void OnFinancialAcctTransactionIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAcctTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINACCTT", "FinAcctTrans")]
        public FinAcctTran FinAcctTran
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINANCIA_REFERENCE_FINACCTT", "FinAcctTrans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINANCIA_REFERENCE_FINACCTT", "FinAcctTrans").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTran> FinAcctTranReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINANCIA_REFERENCE_FINACCTT", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTran>("FinancialModel.FK_FINANCIA_REFERENCE_FINACCTT", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotificationTyp")]
        public FinancialAcctNotificationTyp FinancialAcctNotificationTyp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAcctNotificationTyp>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotificationTyp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAcctNotificationTyp>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotificationTyp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAcctNotificationTyp> FinancialAcctNotificationTypReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAcctNotificationTyp>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotificationTyp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAcctNotificationTyp>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotificationTyp", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialAcctNotificationTyp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialAcctNotificationTyp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialAcctNotificationTyp object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FinancialAcctNotificationTyp CreateFinancialAcctNotificationTyp(global::System.Int32 id, global::System.String name)
        {
            FinancialAcctNotificationTyp financialAcctNotificationTyp = new FinancialAcctNotificationTyp();
            financialAcctNotificationTyp.Id = id;
            financialAcctNotificationTyp.Name = name;
            return financialAcctNotificationTyp;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotification")]
        public EntityCollection<FinancialAcctNotification> FinancialAcctNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAcctNotification>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAcctNotification>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA", "FinancialAcctNotification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialProduct object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="introductionDate">Initial value of the IntroductionDate property.</param>
        public static FinancialProduct CreateFinancialProduct(global::System.Int32 id, global::System.String name, global::System.DateTime introductionDate)
        {
            FinancialProduct financialProduct = new FinancialProduct();
            financialProduct.Id = id;
            financialProduct.Name = name;
            financialProduct.IntroductionDate = introductionDate;
            return financialProduct;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntroductionDate
        {
            get
            {
                return _IntroductionDate;
            }
            set
            {
                OnIntroductionDateChanging(value);
                ReportPropertyChanging("IntroductionDate");
                _IntroductionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntroductionDate");
                OnIntroductionDateChanged();
            }
        }
        private global::System.DateTime _IntroductionDate;
        partial void OnIntroductionDateChanging(global::System.DateTime value);
        partial void OnIntroductionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SalesDiscontinuationDate
        {
            get
            {
                return _SalesDiscontinuationDate;
            }
            set
            {
                OnSalesDiscontinuationDateChanging(value);
                ReportPropertyChanging("SalesDiscontinuationDate");
                _SalesDiscontinuationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesDiscontinuationDate");
                OnSalesDiscontinuationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SalesDiscontinuationDate;
        partial void OnSalesDiscontinuationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSalesDiscontinuationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialAccountProduct")]
        public EntityCollection<FinancialAccountProduct> FinancialAccountProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccountProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialAccountProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccountProduct>("FinancialModel.FK_FINANCIA_REFERENCE_FINANCIA4", "FinancialAccountProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA2", "ProductFeatureApplicability")]
        public EntityCollection<ProductFeatureApplicability> ProductFeatureApplicabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductFeatureApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA2", "ProductFeatureApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductFeatureApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA2", "ProductFeatureApplicability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA3", "ProductCategoryClassification")]
        public EntityCollection<ProductCategoryClassification> ProductCategoryClassifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategoryClassification>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA3", "ProductCategoryClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategoryClassification>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA3", "ProductCategoryClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA4", "ProductStatus")]
        public EntityCollection<ProductStatu> ProductStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStatu>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA4", "ProductStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStatu>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA4", "ProductStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCTR_REFERENCE_FINANCIA", "ProductRequiredDocument")]
        public EntityCollection<ProductRequiredDocument> ProductRequiredDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductRequiredDocument>("FinancialModel.FK_PRODUCTR_REFERENCE_FINANCIA", "ProductRequiredDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductRequiredDocument>("FinancialModel.FK_PRODUCTR_REFERENCE_FINANCIA", "ProductRequiredDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinancialProductViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialProductViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialProductViewList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="introductionDate">Initial value of the IntroductionDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static FinancialProductViewList CreateFinancialProductViewList(global::System.Int32 id, global::System.String name, global::System.DateTime introductionDate, global::System.String status)
        {
            FinancialProductViewList financialProductViewList = new FinancialProductViewList();
            financialProductViewList.Id = id;
            financialProductViewList.Name = name;
            financialProductViewList.IntroductionDate = introductionDate;
            financialProductViewList.Status = status;
            return financialProductViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntroductionDate
        {
            get
            {
                return _IntroductionDate;
            }
            set
            {
                if (_IntroductionDate != value)
                {
                    OnIntroductionDateChanging(value);
                    ReportPropertyChanging("IntroductionDate");
                    _IntroductionDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntroductionDate");
                    OnIntroductionDateChanged();
                }
            }
        }
        private global::System.DateTime _IntroductionDate;
        partial void OnIntroductionDateChanging(global::System.DateTime value);
        partial void OnIntroductionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SalesDiscontinuationDate
        {
            get
            {
                return _SalesDiscontinuationDate;
            }
            set
            {
                OnSalesDiscontinuationDateChanging(value);
                ReportPropertyChanging("SalesDiscontinuationDate");
                _SalesDiscontinuationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesDiscontinuationDate");
                OnSalesDiscontinuationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SalesDiscontinuationDate;
        partial void OnSalesDiscontinuationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSalesDiscontinuationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinlAcctTransnStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinlAcctTransnStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinlAcctTransnStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="financialAcctTransactionId">Initial value of the FinancialAcctTransactionId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static FinlAcctTransnStatu CreateFinlAcctTransnStatu(global::System.Int32 id, global::System.Int32 statusTypeId, global::System.Int32 financialAcctTransactionId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            FinlAcctTransnStatu finlAcctTransnStatu = new FinlAcctTransnStatu();
            finlAcctTransnStatu.Id = id;
            finlAcctTransnStatu.StatusTypeId = statusTypeId;
            finlAcctTransnStatu.FinancialAcctTransactionId = financialAcctTransactionId;
            finlAcctTransnStatu.TransitionDateTime = transitionDateTime;
            finlAcctTransnStatu.IsActive = isActive;
            return finlAcctTransnStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAcctTransactionId
        {
            get
            {
                return _FinancialAcctTransactionId;
            }
            set
            {
                OnFinancialAcctTransactionIdChanging(value);
                ReportPropertyChanging("FinancialAcctTransactionId");
                _FinancialAcctTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAcctTransactionId");
                OnFinancialAcctTransactionIdChanged();
            }
        }
        private global::System.Int32 _FinancialAcctTransactionId;
        partial void OnFinancialAcctTransactionIdChanging(global::System.Int32 value);
        partial void OnFinancialAcctTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINLACCT_REFERENCE_FINACCTT", "FinAcctTrans")]
        public FinAcctTran FinAcctTran
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINLACCT_REFERENCE_FINACCTT", "FinAcctTrans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINLACCT_REFERENCE_FINACCTT", "FinAcctTrans").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTran> FinAcctTranReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTran>("FinancialModel.FK_FINLACCT_REFERENCE_FINACCTT", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTran>("FinancialModel.FK_FINLACCT_REFERENCE_FINACCTT", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinAcctTransStatusType")]
        public FinAcctTransStatusType FinAcctTransStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTransStatusType>("FinancialModel.FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinAcctTransStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTransStatusType>("FinancialModel.FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinAcctTransStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinAcctTransStatusType> FinAcctTransStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinAcctTransStatusType>("FinancialModel.FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinAcctTransStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinAcctTransStatusType>("FinancialModel.FK_FINL_ACC_REFERENCE_FIN_ACCT2", "FinAcctTransStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FinlAcctTransType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinlAcctTransType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinlAcctTransType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FinlAcctTransType CreateFinlAcctTransType(global::System.Int32 id, global::System.String name)
        {
            FinlAcctTransType finlAcctTransType = new FinlAcctTransType();
            finlAcctTransType.Id = id;
            finlAcctTransType.Name = name;
            return finlAcctTransType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentFinancialAcctTransTypeId
        {
            get
            {
                return _ParentFinancialAcctTransTypeId;
            }
            set
            {
                OnParentFinancialAcctTransTypeIdChanging(value);
                ReportPropertyChanging("ParentFinancialAcctTransTypeId");
                _ParentFinancialAcctTransTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentFinancialAcctTransTypeId");
                OnParentFinancialAcctTransTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentFinancialAcctTransTypeId;
        partial void OnParentFinancialAcctTransTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentFinancialAcctTransTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_FINLACCT", "FinAcctTrans")]
        public EntityCollection<FinAcctTran> FinAcctTrans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINLACCT", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_FINLACCT", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType1")]
        public EntityCollection<FinlAcctTransType> FinlAcctTransType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinlAcctTransType>("FinancialModel.FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinlAcctTransType>("FinancialModel.FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType")]
        public FinlAcctTransType FinlAcctTransType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinlAcctTransType> FinlAcctTransType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinlAcctTransType>("FinancialModel.FK_FINLACCT_REFERENCE_FINLACCT", "FinlAcctTransType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ForeignExchange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForeignExchange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForeignExchange object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="exchangeRateId">Initial value of the ExchangeRateId property.</param>
        /// <param name="processedByPartyRoleId">Initial value of the ProcessedByPartyRoleId property.</param>
        /// <param name="processedToPartyRoleId">Initial value of the ProcessedToPartyRoleId property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="amountReceived">Initial value of the AmountReceived property.</param>
        /// <param name="receivedCurrencyId">Initial value of the ReceivedCurrencyId property.</param>
        /// <param name="amountReleased">Initial value of the AmountReleased property.</param>
        /// <param name="releasedCurrencyId">Initial value of the ReleasedCurrencyId property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="isSpot">Initial value of the IsSpot property.</param>
        public static ForeignExchange CreateForeignExchange(global::System.Int32 id, global::System.Int32 exchangeRateId, global::System.Int32 processedByPartyRoleId, global::System.Int32 processedToPartyRoleId, global::System.Decimal rate, global::System.Decimal amountReceived, global::System.Int32 receivedCurrencyId, global::System.Decimal amountReleased, global::System.Int32 releasedCurrencyId, global::System.DateTime entryDate, global::System.DateTime transactionDate, global::System.Boolean isSpot)
        {
            ForeignExchange foreignExchange = new ForeignExchange();
            foreignExchange.Id = id;
            foreignExchange.ExchangeRateId = exchangeRateId;
            foreignExchange.ProcessedByPartyRoleId = processedByPartyRoleId;
            foreignExchange.ProcessedToPartyRoleId = processedToPartyRoleId;
            foreignExchange.Rate = rate;
            foreignExchange.AmountReceived = amountReceived;
            foreignExchange.ReceivedCurrencyId = receivedCurrencyId;
            foreignExchange.AmountReleased = amountReleased;
            foreignExchange.ReleasedCurrencyId = releasedCurrencyId;
            foreignExchange.EntryDate = entryDate;
            foreignExchange.TransactionDate = transactionDate;
            foreignExchange.IsSpot = isSpot;
            return foreignExchange;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExchangeRateId
        {
            get
            {
                return _ExchangeRateId;
            }
            set
            {
                OnExchangeRateIdChanging(value);
                ReportPropertyChanging("ExchangeRateId");
                _ExchangeRateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRateId");
                OnExchangeRateIdChanged();
            }
        }
        private global::System.Int32 _ExchangeRateId;
        partial void OnExchangeRateIdChanging(global::System.Int32 value);
        partial void OnExchangeRateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessedByPartyRoleId
        {
            get
            {
                return _ProcessedByPartyRoleId;
            }
            set
            {
                OnProcessedByPartyRoleIdChanging(value);
                ReportPropertyChanging("ProcessedByPartyRoleId");
                _ProcessedByPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedByPartyRoleId");
                OnProcessedByPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _ProcessedByPartyRoleId;
        partial void OnProcessedByPartyRoleIdChanging(global::System.Int32 value);
        partial void OnProcessedByPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessedToPartyRoleId
        {
            get
            {
                return _ProcessedToPartyRoleId;
            }
            set
            {
                OnProcessedToPartyRoleIdChanging(value);
                ReportPropertyChanging("ProcessedToPartyRoleId");
                _ProcessedToPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedToPartyRoleId");
                OnProcessedToPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _ProcessedToPartyRoleId;
        partial void OnProcessedToPartyRoleIdChanging(global::System.Int32 value);
        partial void OnProcessedToPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountReceived
        {
            get
            {
                return _AmountReceived;
            }
            set
            {
                OnAmountReceivedChanging(value);
                ReportPropertyChanging("AmountReceived");
                _AmountReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountReceived");
                OnAmountReceivedChanged();
            }
        }
        private global::System.Decimal _AmountReceived;
        partial void OnAmountReceivedChanging(global::System.Decimal value);
        partial void OnAmountReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivedCurrencyId
        {
            get
            {
                return _ReceivedCurrencyId;
            }
            set
            {
                OnReceivedCurrencyIdChanging(value);
                ReportPropertyChanging("ReceivedCurrencyId");
                _ReceivedCurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedCurrencyId");
                OnReceivedCurrencyIdChanged();
            }
        }
        private global::System.Int32 _ReceivedCurrencyId;
        partial void OnReceivedCurrencyIdChanging(global::System.Int32 value);
        partial void OnReceivedCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountReleased
        {
            get
            {
                return _AmountReleased;
            }
            set
            {
                OnAmountReleasedChanging(value);
                ReportPropertyChanging("AmountReleased");
                _AmountReleased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountReleased");
                OnAmountReleasedChanged();
            }
        }
        private global::System.Decimal _AmountReleased;
        partial void OnAmountReleasedChanging(global::System.Decimal value);
        partial void OnAmountReleasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleasedCurrencyId
        {
            get
            {
                return _ReleasedCurrencyId;
            }
            set
            {
                OnReleasedCurrencyIdChanging(value);
                ReportPropertyChanging("ReleasedCurrencyId");
                _ReleasedCurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleasedCurrencyId");
                OnReleasedCurrencyIdChanged();
            }
        }
        private global::System.Int32 _ReleasedCurrencyId;
        partial void OnReleasedCurrencyIdChanging(global::System.Int32 value);
        partial void OnReleasedCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSpot
        {
            get
            {
                return _IsSpot;
            }
            set
            {
                OnIsSpotChanging(value);
                ReportPropertyChanging("IsSpot");
                _IsSpot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSpot");
                OnIsSpotChanged();
            }
        }
        private global::System.Boolean _IsSpot;
        partial void OnIsSpotChanging(global::System.Boolean value);
        partial void OnIsSpotChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_Currency1", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency1", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency1", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency1", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_ForeignExchange_Currency1", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_ExchangeRate", "ExchangeRate")]
        public ExchangeRate ExchangeRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExchangeRate>("FinancialModel.FK_ForeignExchange_ExchangeRate", "ExchangeRate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExchangeRate>("FinancialModel.FK_ForeignExchange_ExchangeRate", "ExchangeRate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExchangeRate> ExchangeRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExchangeRate>("FinancialModel.FK_ForeignExchange_ExchangeRate", "ExchangeRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExchangeRate>("FinancialModel.FK_ForeignExchange_ExchangeRate", "ExchangeRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_PartyRole", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_PartyRole1", "PartyRole")]
        public PartyRole PartyRole1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole1", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole1", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRole1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole1", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_ForeignExchange_PartyRole1", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchangeDetailAssoc")]
        public EntityCollection<ForeignExchangeDetailAssoc> ForeignExchangeDetailAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchangeDetailAssoc>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchangeDetailAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchangeDetailAssoc>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchangeDetailAssoc", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ForeignExchangeDetailAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForeignExchangeDetailAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForeignExchangeDetailAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="forExId">Initial value of the ForExId property.</param>
        /// <param name="forExDetailId">Initial value of the ForExDetailId property.</param>
        public static ForeignExchangeDetailAssoc CreateForeignExchangeDetailAssoc(global::System.Int32 id, global::System.Int32 forExId, global::System.Int32 forExDetailId)
        {
            ForeignExchangeDetailAssoc foreignExchangeDetailAssoc = new ForeignExchangeDetailAssoc();
            foreignExchangeDetailAssoc.Id = id;
            foreignExchangeDetailAssoc.ForExId = forExId;
            foreignExchangeDetailAssoc.ForExDetailId = forExDetailId;
            return foreignExchangeDetailAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForExId
        {
            get
            {
                return _ForExId;
            }
            set
            {
                OnForExIdChanging(value);
                ReportPropertyChanging("ForExId");
                _ForExId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForExId");
                OnForExIdChanged();
            }
        }
        private global::System.Int32 _ForExId;
        partial void OnForExIdChanging(global::System.Int32 value);
        partial void OnForExIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForExDetailId
        {
            get
            {
                return _ForExDetailId;
            }
            set
            {
                OnForExDetailIdChanging(value);
                ReportPropertyChanging("ForExDetailId");
                _ForExDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForExDetailId");
                OnForExDetailIdChanged();
            }
        }
        private global::System.Int32 _ForExDetailId;
        partial void OnForExDetailIdChanging(global::System.Int32 value);
        partial void OnForExDetailIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchange")]
        public ForeignExchange ForeignExchange
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForeignExchange>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchange").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForeignExchange>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchange").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForeignExchange> ForeignExchangeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForeignExchange>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ForeignExchange>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForeignExchange", "ForeignExchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeDetailAssoc_ForExDetail", "ForExDetail")]
        public ForExDetail ForExDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForExDetail", "ForExDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForExDetail", "ForExDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForExDetail> ForExDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForExDetail", "ForExDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ForExDetail>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForExDetail", "ForExDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ForExCheque")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForExCheque : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForExCheque object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="forExDetailId">Initial value of the ForExDetailId property.</param>
        /// <param name="bankPartyRoleId">Initial value of the BankPartyRoleId property.</param>
        /// <param name="checkDate">Initial value of the CheckDate property.</param>
        /// <param name="checkNumber">Initial value of the CheckNumber property.</param>
        public static ForExCheque CreateForExCheque(global::System.Int32 id, global::System.Int32 forExDetailId, global::System.Int32 bankPartyRoleId, global::System.DateTime checkDate, global::System.String checkNumber)
        {
            ForExCheque forExCheque = new ForExCheque();
            forExCheque.Id = id;
            forExCheque.ForExDetailId = forExDetailId;
            forExCheque.BankPartyRoleId = bankPartyRoleId;
            forExCheque.CheckDate = checkDate;
            forExCheque.CheckNumber = checkNumber;
            return forExCheque;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForExDetailId
        {
            get
            {
                return _ForExDetailId;
            }
            set
            {
                OnForExDetailIdChanging(value);
                ReportPropertyChanging("ForExDetailId");
                _ForExDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForExDetailId");
                OnForExDetailIdChanged();
            }
        }
        private global::System.Int32 _ForExDetailId;
        partial void OnForExDetailIdChanging(global::System.Int32 value);
        partial void OnForExDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankPartyRoleId
        {
            get
            {
                return _BankPartyRoleId;
            }
            set
            {
                OnBankPartyRoleIdChanging(value);
                ReportPropertyChanging("BankPartyRoleId");
                _BankPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankPartyRoleId");
                OnBankPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _BankPartyRoleId;
        partial void OnBankPartyRoleIdChanging(global::System.Int32 value);
        partial void OnBankPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CheckDate
        {
            get
            {
                return _CheckDate;
            }
            set
            {
                OnCheckDateChanging(value);
                ReportPropertyChanging("CheckDate");
                _CheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckDate");
                OnCheckDateChanged();
            }
        }
        private global::System.DateTime _CheckDate;
        partial void OnCheckDateChanging(global::System.DateTime value);
        partial void OnCheckDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForExCheque_ForeignExchangeAmount", "ForExDetail")]
        public ForExDetail ForExDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForExCheque_ForeignExchangeAmount", "ForExDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForExCheque_ForeignExchangeAmount", "ForExDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForExDetail> ForExDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForExCheque_ForeignExchangeAmount", "ForExDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ForExDetail>("FinancialModel.FK_ForExCheque_ForeignExchangeAmount", "ForExDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForExCheque_PartyRole", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForExCheque_PartyRole", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForExCheque_PartyRole", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_ForExCheque_PartyRole", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_ForExCheque_PartyRole", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ForExDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForExDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForExDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="paymentMethodTypeId">Initial value of the PaymentMethodTypeId property.</param>
        public static ForExDetail CreateForExDetail(global::System.Int32 id, global::System.Decimal amount, global::System.Int32 currencyId, global::System.Int32 paymentMethodTypeId)
        {
            ForExDetail forExDetail = new ForExDetail();
            forExDetail.Id = id;
            forExDetail.Amount = amount;
            forExDetail.CurrencyId = currencyId;
            forExDetail.PaymentMethodTypeId = paymentMethodTypeId;
            return forExDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.Int32 _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Int32 value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentMethodTypeId
        {
            get
            {
                return _PaymentMethodTypeId;
            }
            set
            {
                OnPaymentMethodTypeIdChanging(value);
                ReportPropertyChanging("PaymentMethodTypeId");
                _PaymentMethodTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentMethodTypeId");
                OnPaymentMethodTypeIdChanged();
            }
        }
        private global::System.Int32 _PaymentMethodTypeId;
        partial void OnPaymentMethodTypeIdChanging(global::System.Int32 value);
        partial void OnPaymentMethodTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentForExDetailId
        {
            get
            {
                return _ParentForExDetailId;
            }
            set
            {
                OnParentForExDetailIdChanging(value);
                ReportPropertyChanging("ParentForExDetailId");
                _ParentForExDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentForExDetailId");
                OnParentForExDetailIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentForExDetailId;
        partial void OnParentForExDetailIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentForExDetailIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeAmount_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchangeAmount_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchangeAmount_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_ForeignExchangeAmount_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_ForeignExchangeAmount_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Denomination_ForeignExchangeAmount", "Denomination")]
        public EntityCollection<Denomination> Denominations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Denomination>("FinancialModel.FK_Denomination_ForeignExchangeAmount", "Denomination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Denomination>("FinancialModel.FK_Denomination_ForeignExchangeAmount", "Denomination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeDetailAssoc_ForExDetail", "ForeignExchangeDetailAssoc")]
        public EntityCollection<ForeignExchangeDetailAssoc> ForeignExchangeDetailAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchangeDetailAssoc>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForExDetail", "ForeignExchangeDetailAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchangeDetailAssoc>("FinancialModel.FK_ForeignExchangeDetailAssoc_ForExDetail", "ForeignExchangeDetailAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForExCheque_ForeignExchangeAmount", "ForExCheque")]
        public EntityCollection<ForExCheque> ForExCheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForExCheque>("FinancialModel.FK_ForExCheque_ForeignExchangeAmount", "ForExCheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForExCheque>("FinancialModel.FK_ForExCheque_ForeignExchangeAmount", "ForExCheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeAmount_PaymentMethodType", "PaymentMethodType")]
        public PaymentMethodType PaymentMethodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethodType>("FinancialModel.FK_ForeignExchangeAmount_PaymentMethodType", "PaymentMethodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethodType>("FinancialModel.FK_ForeignExchangeAmount_PaymentMethodType", "PaymentMethodType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethodType> PaymentMethodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethodType>("FinancialModel.FK_ForeignExchangeAmount_PaymentMethodType", "PaymentMethodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethodType>("FinancialModel.FK_ForeignExchangeAmount_PaymentMethodType", "PaymentMethodType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForExDetail_ForExDetail", "ForExDetail1")]
        public EntityCollection<ForExDetail> ForExDetail1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForExDetail>("FinancialModel.FK_ForExDetail_ForExDetail", "ForExDetail1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForExDetail>("FinancialModel.FK_ForExDetail_ForExDetail", "ForExDetail1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForExDetail_ForExDetail", "ForExDetail")]
        public ForExDetail ForExDetail2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForExDetail_ForExDetail", "ForExDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForExDetail_ForExDetail", "ForExDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForExDetail> ForExDetail2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForExDetail>("FinancialModel.FK_ForExDetail_ForExDetail", "ForExDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ForExDetail>("FinancialModel.FK_ForExDetail_ForExDetail", "ForExDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FormDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="formTypeId">Initial value of the FormTypeId property.</param>
        /// <param name="roleString">Initial value of the RoleString property.</param>
        public static FormDetail CreateFormDetail(global::System.Int32 id, global::System.Int32 formTypeId, global::System.String roleString)
        {
            FormDetail formDetail = new FormDetail();
            formDetail.Id = id;
            formDetail.FormTypeId = formTypeId;
            formDetail.RoleString = roleString;
            return formDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTypeId
        {
            get
            {
                return _FormTypeId;
            }
            set
            {
                OnFormTypeIdChanging(value);
                ReportPropertyChanging("FormTypeId");
                _FormTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTypeId");
                OnFormTypeIdChanged();
            }
        }
        private global::System.Int32 _FormTypeId;
        partial void OnFormTypeIdChanging(global::System.Int32 value);
        partial void OnFormTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoanAppId
        {
            get
            {
                return _LoanAppId;
            }
            set
            {
                OnLoanAppIdChanging(value);
                ReportPropertyChanging("LoanAppId");
                _LoanAppId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAppId");
                OnLoanAppIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LoanAppId;
        partial void OnLoanAppIdChanging(Nullable<global::System.Int32> value);
        partial void OnLoanAppIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentId;
        partial void OnPaymentIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleString
        {
            get
            {
                return _RoleString;
            }
            set
            {
                OnRoleStringChanging(value);
                ReportPropertyChanging("RoleString");
                _RoleString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleString");
                OnRoleStringChanged();
            }
        }
        private global::System.String _RoleString;
        partial void OnRoleStringChanging(global::System.String value);
        partial void OnRoleStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonString
        {
            get
            {
                return _PersonString;
            }
            set
            {
                OnPersonStringChanging(value);
                ReportPropertyChanging("PersonString");
                _PersonString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonString");
                OnPersonStringChanged();
            }
        }
        private global::System.String _PersonString;
        partial void OnPersonStringChanging(global::System.String value);
        partial void OnPersonStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signature
        {
            get
            {
                return _Signature;
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.String _Signature;
        partial void OnSignatureChanging(global::System.String value);
        partial void OnSignatureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FormDetails_FormType", "FormType")]
        public FormType FormType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("FinancialModel.FK_FormDetails_FormType", "FormType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("FinancialModel.FK_FormDetails_FormType", "FormType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormType> FormTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("FinancialModel.FK_FormDetails_FormType", "FormType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormType>("FinancialModel.FK_FormDetails_FormType", "FormType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FormDetails_LoanApplication", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_FormDetails_LoanApplication", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_FormDetails_LoanApplication", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_FormDetails_LoanApplication", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_FormDetails_LoanApplication", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FormDetails_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FormDetails_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FormDetails_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_FormDetails_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_FormDetails_Payment", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="FormType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FormType CreateFormType(global::System.Int32 id, global::System.String name)
        {
            FormType formType = new FormType();
            formType.Id = id;
            formType.Name = name;
            return formType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ControlNumbers_FormType", "ControlNumbers")]
        public EntityCollection<ControlNumber> ControlNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ControlNumber>("FinancialModel.FK_ControlNumbers_FormType", "ControlNumbers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ControlNumber>("FinancialModel.FK_ControlNumbers_FormType", "ControlNumbers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FormDetails_FormType", "FormDetails")]
        public EntityCollection<FormDetail> FormDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormDetail>("FinancialModel.FK_FormDetails_FormType", "FormDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormDetail>("FinancialModel.FK_FormDetails_FormType", "FormDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="GenderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GenderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GenderType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static GenderType CreateGenderType(global::System.Int32 id, global::System.String name)
        {
            GenderType genderType = new GenderType();
            genderType.Id = id;
            genderType.Name = name;
            return genderType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_GENDERTY", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("FinancialModel.FK_PERSON_REFERENCE_GENDERTY", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("FinancialModel.FK_PERSON_REFERENCE_GENDERTY", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="GuarantorViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GuarantorViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GuarantorViewList object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static GuarantorViewList CreateGuarantorViewList(global::System.Int32 partyId)
        {
            GuarantorViewList guarantorViewList = new GuarantorViewList();
            guarantorViewList.PartyId = partyId;
            return guarantorViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Holiday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Holiday : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Holiday object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Holiday CreateHoliday(global::System.Int32 id, global::System.DateTime date, global::System.String name)
        {
            Holiday holiday = new Holiday();
            holiday.Id = id;
            holiday.Date = date;
            holiday.Name = name;
            return holiday;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="HomeOwnership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HomeOwnership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HomeOwnership object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="homeOwnershipTypeId">Initial value of the HomeOwnershipTypeId property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="residenceSince">Initial value of the ResidenceSince property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static HomeOwnership CreateHomeOwnership(global::System.Int32 id, global::System.Int32 homeOwnershipTypeId, global::System.Int32 partyId, global::System.DateTime residenceSince, global::System.DateTime effectiveDate)
        {
            HomeOwnership homeOwnership = new HomeOwnership();
            homeOwnership.Id = id;
            homeOwnership.HomeOwnershipTypeId = homeOwnershipTypeId;
            homeOwnership.PartyId = partyId;
            homeOwnership.ResidenceSince = residenceSince;
            homeOwnership.EffectiveDate = effectiveDate;
            return homeOwnership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HomeOwnershipTypeId
        {
            get
            {
                return _HomeOwnershipTypeId;
            }
            set
            {
                OnHomeOwnershipTypeIdChanging(value);
                ReportPropertyChanging("HomeOwnershipTypeId");
                _HomeOwnershipTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeOwnershipTypeId");
                OnHomeOwnershipTypeIdChanged();
            }
        }
        private global::System.Int32 _HomeOwnershipTypeId;
        partial void OnHomeOwnershipTypeIdChanging(global::System.Int32 value);
        partial void OnHomeOwnershipTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ResidenceSince
        {
            get
            {
                return _ResidenceSince;
            }
            set
            {
                OnResidenceSinceChanging(value);
                ReportPropertyChanging("ResidenceSince");
                _ResidenceSince = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidenceSince");
                OnResidenceSinceChanged();
            }
        }
        private global::System.DateTime _ResidenceSince;
        partial void OnResidenceSinceChanging(global::System.DateTime value);
        partial void OnResidenceSinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnershipType")]
        public HomeOwnershipType HomeOwnershipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HomeOwnershipType>("FinancialModel.FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnershipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HomeOwnershipType>("FinancialModel.FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnershipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HomeOwnershipType> HomeOwnershipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HomeOwnershipType>("FinancialModel.FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnershipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HomeOwnershipType>("FinancialModel.FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnershipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_HOMEOWNE_REFERENCE_PERSON", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_HOMEOWNE_REFERENCE_PERSON", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_HOMEOWNE_REFERENCE_PERSON", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_HOMEOWNE_REFERENCE_PERSON", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_HOMEOWNE_REFERENCE_PERSON", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="HomeOwnershipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HomeOwnershipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HomeOwnershipType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static HomeOwnershipType CreateHomeOwnershipType(global::System.Int32 id, global::System.String name)
        {
            HomeOwnershipType homeOwnershipType = new HomeOwnershipType();
            homeOwnershipType.Id = id;
            homeOwnershipType.Name = name;
            return homeOwnershipType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnership")]
        public EntityCollection<HomeOwnership> HomeOwnerships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HomeOwnership>("FinancialModel.FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HomeOwnership>("FinancialModel.FK_HOMEOWNE_REFERENCE_HOMEOWNE", "HomeOwnership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="IdentificationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdentificationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IdentificationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IdentificationType CreateIdentificationType(global::System.Int32 id, global::System.String name)
        {
            IdentificationType identificationType = new IdentificationType();
            identificationType.Id = id;
            identificationType.Name = name;
            return identificationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONID_REFERENCE_IDENTIFI", "PersonIdentification")]
        public EntityCollection<PersonIdentification> PersonIdentifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonIdentification>("FinancialModel.FK_PERSONID_REFERENCE_IDENTIFI", "PersonIdentification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonIdentification>("FinancialModel.FK_PERSONID_REFERENCE_IDENTIFI", "PersonIdentification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="InterestItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InterestItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InterestItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="loanId">Initial value of the LoanId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static InterestItem CreateInterestItem(global::System.Int32 id, global::System.Int32 loanId, global::System.Decimal amount, global::System.Boolean isActive)
        {
            InterestItem interestItem = new InterestItem();
            interestItem.Id = id;
            interestItem.LoanId = loanId;
            interestItem.Amount = amount;
            interestItem.IsActive = isActive;
            return interestItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanId
        {
            get
            {
                return _LoanId;
            }
            set
            {
                OnLoanIdChanging(value);
                ReportPropertyChanging("LoanId");
                _LoanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanId");
                OnLoanIdChanged();
            }
        }
        private global::System.Int32 _LoanId;
        partial void OnLoanIdChanging(global::System.Int32 value);
        partial void OnLoanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_InterestItems_LoanAccount", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_InterestItems_LoanAccount", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_InterestItems_LoanAccount", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_InterestItems_LoanAccount", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_InterestItems_LoanAccount", "LoanAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="InterestType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InterestType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InterestType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static InterestType CreateInterestType(global::System.Int32 id, global::System.String name)
        {
            InterestType interestType = new InterestType();
            interestType.Id = id;
            interestType.Name = name;
            return interestType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LoanAccount_InterestType", "LoanAccount")]
        public EntityCollection<LoanAccount> LoanAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAccount>("FinancialModel.FK_LoanAccount_InterestType", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAccount>("FinancialModel.FK_LoanAccount_InterestType", "LoanAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ItemsDetailsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemsDetailsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemsDetailsView object.
        /// </summary>
        /// <param name="particular">Initial value of the Particular property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static ItemsDetailsView CreateItemsDetailsView(global::System.String particular, global::System.Decimal amount)
        {
            ItemsDetailsView itemsDetailsView = new ItemsDetailsView();
            itemsDetailsView.Particular = particular;
            itemsDetailsView.Amount = amount;
            return itemsDetailsView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Particular
        {
            get
            {
                return _Particular;
            }
            set
            {
                if (_Particular != value)
                {
                    OnParticularChanging(value);
                    ReportPropertyChanging("Particular");
                    _Particular = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Particular");
                    OnParticularChanged();
                }
            }
        }
        private global::System.String _Particular;
        partial void OnParticularChanging(global::System.String value);
        partial void OnParticularChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Land")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Land : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Land object.
        /// </summary>
        /// <param name="assetId">Initial value of the AssetId property.</param>
        /// <param name="uomId">Initial value of the UomId property.</param>
        /// <param name="landTypeId">Initial value of the LandTypeId property.</param>
        /// <param name="octTctNumber">Initial value of the OctTctNumber property.</param>
        /// <param name="landArea">Initial value of the LandArea property.</param>
        public static Land CreateLand(global::System.Int32 assetId, global::System.Int32 uomId, global::System.Int32 landTypeId, global::System.String octTctNumber, global::System.Decimal landArea)
        {
            Land land = new Land();
            land.AssetId = assetId;
            land.UomId = uomId;
            land.LandTypeId = landTypeId;
            land.OctTctNumber = octTctNumber;
            land.LandArea = landArea;
            return land;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                if (_AssetId != value)
                {
                    OnAssetIdChanging(value);
                    ReportPropertyChanging("AssetId");
                    _AssetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetId");
                    OnAssetIdChanged();
                }
            }
        }
        private global::System.Int32 _AssetId;
        partial void OnAssetIdChanging(global::System.Int32 value);
        partial void OnAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UomId
        {
            get
            {
                return _UomId;
            }
            set
            {
                OnUomIdChanging(value);
                ReportPropertyChanging("UomId");
                _UomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UomId");
                OnUomIdChanged();
            }
        }
        private global::System.Int32 _UomId;
        partial void OnUomIdChanging(global::System.Int32 value);
        partial void OnUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LandTypeId
        {
            get
            {
                return _LandTypeId;
            }
            set
            {
                OnLandTypeIdChanging(value);
                ReportPropertyChanging("LandTypeId");
                _LandTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandTypeId");
                OnLandTypeIdChanged();
            }
        }
        private global::System.Int32 _LandTypeId;
        partial void OnLandTypeIdChanging(global::System.Int32 value);
        partial void OnLandTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OctTctNumber
        {
            get
            {
                return _OctTctNumber;
            }
            set
            {
                OnOctTctNumberChanging(value);
                ReportPropertyChanging("OctTctNumber");
                _OctTctNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OctTctNumber");
                OnOctTctNumberChanged();
            }
        }
        private global::System.String _OctTctNumber;
        partial void OnOctTctNumberChanging(global::System.String value);
        partial void OnOctTctNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LandArea
        {
            get
            {
                return _LandArea;
            }
            set
            {
                OnLandAreaChanging(value);
                ReportPropertyChanging("LandArea");
                _LandArea = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandArea");
                OnLandAreaChanged();
            }
        }
        private global::System.Decimal _LandArea;
        partial void OnLandAreaChanging(global::System.Decimal value);
        partial void OnLandAreaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LAND_REFERENCE_ASSET", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_LAND_REFERENCE_ASSET", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LAND_REFERENCE_LANDTYPE", "LandType")]
        public LandType LandType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LandType>("FinancialModel.FK_LAND_REFERENCE_LANDTYPE", "LandType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LandType>("FinancialModel.FK_LAND_REFERENCE_LANDTYPE", "LandType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LandType> LandTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LandType>("FinancialModel.FK_LAND_REFERENCE_LANDTYPE", "LandType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LandType>("FinancialModel.FK_LAND_REFERENCE_LANDTYPE", "LandType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LAND_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LAND_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LAND_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LAND_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_LAND_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LandType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LandType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LandType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LandType CreateLandType(global::System.Int32 id, global::System.String name)
        {
            LandType landType = new LandType();
            landType.Id = id;
            landType.Name = name;
            return landType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LAND_REFERENCE_LANDTYPE", "Land")]
        public EntityCollection<Land> Lands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Land>("FinancialModel.FK_LAND_REFERENCE_LANDTYPE", "Land");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Land>("FinancialModel.FK_LAND_REFERENCE_LANDTYPE", "Land", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAccount object.
        /// </summary>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        /// <param name="loanAmount">Initial value of the LoanAmount property.</param>
        /// <param name="loanBalance">Initial value of the LoanBalance property.</param>
        public static LoanAccount CreateLoanAccount(global::System.Int32 financialAccountId, global::System.Decimal loanAmount, global::System.Decimal loanBalance)
        {
            LoanAccount loanAccount = new LoanAccount();
            loanAccount.FinancialAccountId = financialAccountId;
            loanAccount.LoanAmount = loanAmount;
            loanAccount.LoanBalance = loanBalance;
            return loanAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                if (_FinancialAccountId != value)
                {
                    OnFinancialAccountIdChanging(value);
                    ReportPropertyChanging("FinancialAccountId");
                    _FinancialAccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinancialAccountId");
                    OnFinancialAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanAmount
        {
            get
            {
                return _LoanAmount;
            }
            set
            {
                OnLoanAmountChanging(value);
                ReportPropertyChanging("LoanAmount");
                _LoanAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAmount");
                OnLoanAmountChanged();
            }
        }
        private global::System.Decimal _LoanAmount;
        partial void OnLoanAmountChanging(global::System.Decimal value);
        partial void OnLoanAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanBalance
        {
            get
            {
                return _LoanBalance;
            }
            set
            {
                OnLoanBalanceChanging(value);
                ReportPropertyChanging("LoanBalance");
                _LoanBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanBalance");
                OnLoanBalanceChanged();
            }
        }
        private global::System.Decimal _LoanBalance;
        partial void OnLoanBalanceChanging(global::System.Decimal value);
        partial void OnLoanBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CompoundedInterestAmount
        {
            get
            {
                return _CompoundedInterestAmount;
            }
            set
            {
                OnCompoundedInterestAmountChanging(value);
                ReportPropertyChanging("CompoundedInterestAmount");
                _CompoundedInterestAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompoundedInterestAmount");
                OnCompoundedInterestAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CompoundedInterestAmount;
        partial void OnCompoundedInterestAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCompoundedInterestAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LoanReleaseDate
        {
            get
            {
                return _LoanReleaseDate;
            }
            set
            {
                OnLoanReleaseDateChanging(value);
                ReportPropertyChanging("LoanReleaseDate");
                _LoanReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanReleaseDate");
                OnLoanReleaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LoanReleaseDate;
        partial void OnLoanReleaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLoanReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MaturityDate
        {
            get
            {
                return _MaturityDate;
            }
            set
            {
                OnMaturityDateChanging(value);
                ReportPropertyChanging("MaturityDate");
                _MaturityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaturityDate");
                OnMaturityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MaturityDate;
        partial void OnMaturityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMaturityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InterestTypeId
        {
            get
            {
                return _InterestTypeId;
            }
            set
            {
                OnInterestTypeIdChanging(value);
                ReportPropertyChanging("InterestTypeId");
                _InterestTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestTypeId");
                OnInterestTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InterestTypeId;
        partial void OnInterestTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnInterestTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ChequeLoanAssoc_LoanAccount", "ChequeLoanAssoc")]
        public EntityCollection<ChequeLoanAssoc> ChequeLoanAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChequeLoanAssoc>("FinancialModel.FK_ChequeLoanAssoc_LoanAccount", "ChequeLoanAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChequeLoanAssoc>("FinancialModel.FK_ChequeLoanAssoc_LoanAccount", "ChequeLoanAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DEMANDLE_REFERENCE_LOANACCO", "DemandLetter")]
        public EntityCollection<DemandLetter> DemandLetters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DemandLetter>("FinancialModel.FK_DEMANDLE_REFERENCE_LOANACCO", "DemandLetter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DemandLetter>("FinancialModel.FK_DEMANDLE_REFERENCE_LOANACCO", "DemandLetter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANACCO_REFERENCE_FINANCIA", "FinancialAccount")]
        public FinancialAccount FinancialAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "FinancialAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "FinancialAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccount> FinancialAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccount>("FinancialModel.FK_LOANACCO_REFERENCE_FINANCIA", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_InterestItems_LoanAccount", "InterestItems")]
        public EntityCollection<InterestItem> InterestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InterestItem>("FinancialModel.FK_InterestItems_LoanAccount", "InterestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InterestItem>("FinancialModel.FK_InterestItems_LoanAccount", "InterestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LoanAccount_InterestType", "InterestType")]
        public InterestType InterestType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InterestType>("FinancialModel.FK_LoanAccount_InterestType", "InterestType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InterestType>("FinancialModel.FK_LoanAccount_InterestType", "InterestType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InterestType> InterestTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InterestType>("FinancialModel.FK_LoanAccount_InterestType", "InterestType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InterestType>("FinancialModel.FK_LoanAccount_InterestType", "InterestType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccountStatus")]
        public EntityCollection<LoanAccountStatu> LoanAccountStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAccountStatu>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAccountStatu>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccountStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANADJU_REFERENCE_LOANACCO", "LoanAdjustment")]
        public EntityCollection<LoanAdjustment> LoanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAdjustment>("FinancialModel.FK_LOANADJU_REFERENCE_LOANACCO", "LoanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAdjustment>("FinancialModel.FK_LOANADJU_REFERENCE_LOANACCO", "LoanAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANREAV_REFERENCE_LOANACCO", "LoanReAvailment")]
        public EntityCollection<LoanReAvailment> LoanReAvailments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanReAvailment>("FinancialModel.FK_LOANREAV_REFERENCE_LOANACCO", "LoanReAvailment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanReAvailment>("FinancialModel.FK_LOANREAV_REFERENCE_LOANACCO", "LoanReAvailment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANSTAT_REFERENCE_LOANACCO", "LoanStatement")]
        public EntityCollection<LoanStatement> LoanStatements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanStatement>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANACCO", "LoanStatement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanStatement>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANACCO", "LoanStatement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PaymentApplication_LoanAccount", "PaymentApplication")]
        public EntityCollection<PaymentApplication> PaymentApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentApplication>("FinancialModel.FK_PaymentApplication_LoanAccount", "PaymentApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentApplication>("FinancialModel.FK_PaymentApplication_LoanAccount", "PaymentApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_LOANACCO", "Receivable")]
        public EntityCollection<Receivable> Receivables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_LOANACCO", "Receivable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_LOANACCO", "Receivable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RELEASES_REFERENCE_LOANACCO", "ReleaseStatement")]
        public EntityCollection<ReleaseStatement> ReleaseStatements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReleaseStatement>("FinancialModel.FK_RELEASES_REFERENCE_LOANACCO", "ReleaseStatement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReleaseStatement>("FinancialModel.FK_RELEASES_REFERENCE_LOANACCO", "ReleaseStatement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAccountStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAccountStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAccountStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static LoanAccountStatu CreateLoanAccountStatu(global::System.Int32 id, global::System.Int32 statusTypeId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            LoanAccountStatu loanAccountStatu = new LoanAccountStatu();
            loanAccountStatu.Id = id;
            loanAccountStatu.StatusTypeId = statusTypeId;
            loanAccountStatu.TransitionDateTime = transitionDateTime;
            loanAccountStatu.IsActive = isActive;
            return loanAccountStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC2", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatusType")]
        public LoanAccountStatusType LoanAccountStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccountStatusType> LoanAccountStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAccountStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAccountStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAccountStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LoanAccountStatusType CreateLoanAccountStatusType(global::System.Int32 id, global::System.String name)
        {
            LoanAccountStatusType loanAccountStatusType = new LoanAccountStatusType();
            loanAccountStatusType.Id = id;
            loanAccountStatusType.Name = name;
            return loanAccountStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatus")]
        public EntityCollection<LoanAccountStatu> LoanAccountStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAccountStatu>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAccountStatu>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC3", "LoanAccountStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusTypeAssoc")]
        public EntityCollection<LoanAccountStatusTypeAssoc> LoanAccountStatusTypeAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAccountStatusTypeAssoc>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAccountStatusTypeAssoc>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusTypeAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusTypeAssoc")]
        public EntityCollection<LoanAccountStatusTypeAssoc> LoanAccountStatusTypeAssocs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanAccountStatusTypeAssoc>("FinancialModel.FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanAccountStatusTypeAssoc>("FinancialModel.FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusTypeAssoc", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAccountStatusTypeAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAccountStatusTypeAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAccountStatusTypeAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fromStatusTypeId">Initial value of the FromStatusTypeId property.</param>
        /// <param name="toStatusTypeId">Initial value of the ToStatusTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static LoanAccountStatusTypeAssoc CreateLoanAccountStatusTypeAssoc(global::System.Int32 id, global::System.Int32 fromStatusTypeId, global::System.Int32 toStatusTypeId, global::System.DateTime effectiveDate)
        {
            LoanAccountStatusTypeAssoc loanAccountStatusTypeAssoc = new LoanAccountStatusTypeAssoc();
            loanAccountStatusTypeAssoc.Id = id;
            loanAccountStatusTypeAssoc.FromStatusTypeId = fromStatusTypeId;
            loanAccountStatusTypeAssoc.ToStatusTypeId = toStatusTypeId;
            loanAccountStatusTypeAssoc.EffectiveDate = effectiveDate;
            return loanAccountStatusTypeAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromStatusTypeId
        {
            get
            {
                return _FromStatusTypeId;
            }
            set
            {
                OnFromStatusTypeIdChanging(value);
                ReportPropertyChanging("FromStatusTypeId");
                _FromStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromStatusTypeId");
                OnFromStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _FromStatusTypeId;
        partial void OnFromStatusTypeIdChanging(global::System.Int32 value);
        partial void OnFromStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToStatusTypeId
        {
            get
            {
                return _ToStatusTypeId;
            }
            set
            {
                OnToStatusTypeIdChanging(value);
                ReportPropertyChanging("ToStatusTypeId");
                _ToStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToStatusTypeId");
                OnToStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _ToStatusTypeId;
        partial void OnToStatusTypeIdChanging(global::System.Int32 value);
        partial void OnToStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusType")]
        public LoanAccountStatusType LoanAccountStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccountStatusType> LoanAccountStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOAN_ACC_REFERENCE_LOAN_ACC4", "LoanAccountStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusType")]
        public LoanAccountStatusType LoanAccountStatusType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccountStatusType> LoanAccountStatusType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccountStatusType>("FinancialModel.FK_LOANACCO_REFERENCE_LOANACCO", "LoanAccountStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAdjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAdjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAdjustment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        /// <param name="adjustmentTypeId">Initial value of the AdjustmentTypeId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static LoanAdjustment CreateLoanAdjustment(global::System.Int32 id, global::System.Int32 financialAccountId, global::System.Int32 adjustmentTypeId, global::System.DateTime date, global::System.Decimal amount)
        {
            LoanAdjustment loanAdjustment = new LoanAdjustment();
            loanAdjustment.Id = id;
            loanAdjustment.FinancialAccountId = financialAccountId;
            loanAdjustment.AdjustmentTypeId = adjustmentTypeId;
            loanAdjustment.Date = date;
            loanAdjustment.Amount = amount;
            return loanAdjustment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentTypeId
        {
            get
            {
                return _AdjustmentTypeId;
            }
            set
            {
                OnAdjustmentTypeIdChanging(value);
                ReportPropertyChanging("AdjustmentTypeId");
                _AdjustmentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustmentTypeId");
                OnAdjustmentTypeIdChanged();
            }
        }
        private global::System.Int32 _AdjustmentTypeId;
        partial void OnAdjustmentTypeIdChanging(global::System.Int32 value);
        partial void OnAdjustmentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANADJU_REFERENCE_ADJUSTME", "AdjustmentType")]
        public AdjustmentType AdjustmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjustmentType>("FinancialModel.FK_LOANADJU_REFERENCE_ADJUSTME", "AdjustmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjustmentType>("FinancialModel.FK_LOANADJU_REFERENCE_ADJUSTME", "AdjustmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjustmentType> AdjustmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjustmentType>("FinancialModel.FK_LOANADJU_REFERENCE_ADJUSTME", "AdjustmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjustmentType>("FinancialModel.FK_LOANADJU_REFERENCE_ADJUSTME", "AdjustmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANADJU_REFERENCE_LOANACCO", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANADJU_REFERENCE_LOANACCO", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANADJU_REFERENCE_LOANACCO", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANADJU_REFERENCE_LOANACCO", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_LOANADJU_REFERENCE_LOANACCO", "LoanAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAgreement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAgreement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAgreement object.
        /// </summary>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        public static LoanAgreement CreateLoanAgreement(global::System.Int32 agreementId)
        {
            LoanAgreement loanAgreement = new LoanAgreement();
            loanAgreement.AgreementId = agreementId;
            return loanAgreement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                if (_AgreementId != value)
                {
                    OnAgreementIdChanging(value);
                    ReportPropertyChanging("AgreementId");
                    _AgreementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgreementId");
                    OnAgreementIdChanged();
                }
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAGRE_REFERENCE_AGREEMEN", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_LOANAGRE_REFERENCE_AGREEMEN", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AMORTIZA_REFERENCE_LOANAGRE", "AmortizationSchedule")]
        public EntityCollection<AmortizationSchedule> AmortizationSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_LOANAGRE", "AmortizationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AmortizationSchedule>("FinancialModel.FK_AMORTIZA_REFERENCE_LOANAGRE", "AmortizationSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanAgreementViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanAgreementViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanAgreementViewList object.
        /// </summary>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static LoanAgreementViewList CreateLoanAgreementViewList(global::System.Int32 agreementId, global::System.DateTime date)
        {
            LoanAgreementViewList loanAgreementViewList = new LoanAgreementViewList();
            loanAgreementViewList.AgreementId = agreementId;
            loanAgreementViewList.Date = date;
            return loanAgreementViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                if (_AgreementId != value)
                {
                    OnAgreementIdChanging(value);
                    ReportPropertyChanging("AgreementId");
                    _AgreementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgreementId");
                    OnAgreementIdChanged();
                }
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanApplication object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="loanTermUomId">Initial value of the LoanTermUomId property.</param>
        /// <param name="paymentModeUomId">Initial value of the PaymentModeUomId property.</param>
        /// <param name="loanTermLength">Initial value of the LoanTermLength property.</param>
        /// <param name="loanAmount">Initial value of the LoanAmount property.</param>
        /// <param name="isReloanIndicator">Initial value of the IsReloanIndicator property.</param>
        /// <param name="isInterestProductFeatureInd">Initial value of the IsInterestProductFeatureInd property.</param>
        /// <param name="isPastDueProductFeatureInd">Initial value of the IsPastDueProductFeatureInd property.</param>
        public static LoanApplication CreateLoanApplication(global::System.Int32 applicationId, global::System.Int32 loanTermUomId, global::System.Int32 paymentModeUomId, global::System.Int32 loanTermLength, global::System.Decimal loanAmount, global::System.Boolean isReloanIndicator, global::System.Boolean isInterestProductFeatureInd, global::System.Boolean isPastDueProductFeatureInd)
        {
            LoanApplication loanApplication = new LoanApplication();
            loanApplication.ApplicationId = applicationId;
            loanApplication.LoanTermUomId = loanTermUomId;
            loanApplication.PaymentModeUomId = paymentModeUomId;
            loanApplication.LoanTermLength = loanTermLength;
            loanApplication.LoanAmount = loanAmount;
            loanApplication.IsReloanIndicator = isReloanIndicator;
            loanApplication.IsInterestProductFeatureInd = isInterestProductFeatureInd;
            loanApplication.IsPastDueProductFeatureInd = isPastDueProductFeatureInd;
            return loanApplication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanTermUomId
        {
            get
            {
                return _LoanTermUomId;
            }
            set
            {
                OnLoanTermUomIdChanging(value);
                ReportPropertyChanging("LoanTermUomId");
                _LoanTermUomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanTermUomId");
                OnLoanTermUomIdChanged();
            }
        }
        private global::System.Int32 _LoanTermUomId;
        partial void OnLoanTermUomIdChanging(global::System.Int32 value);
        partial void OnLoanTermUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentModeUomId
        {
            get
            {
                return _PaymentModeUomId;
            }
            set
            {
                OnPaymentModeUomIdChanging(value);
                ReportPropertyChanging("PaymentModeUomId");
                _PaymentModeUomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentModeUomId");
                OnPaymentModeUomIdChanged();
            }
        }
        private global::System.Int32 _PaymentModeUomId;
        partial void OnPaymentModeUomIdChanging(global::System.Int32 value);
        partial void OnPaymentModeUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanTermLength
        {
            get
            {
                return _LoanTermLength;
            }
            set
            {
                OnLoanTermLengthChanging(value);
                ReportPropertyChanging("LoanTermLength");
                _LoanTermLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanTermLength");
                OnLoanTermLengthChanged();
            }
        }
        private global::System.Int32 _LoanTermLength;
        partial void OnLoanTermLengthChanging(global::System.Int32 value);
        partial void OnLoanTermLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanAmount
        {
            get
            {
                return _LoanAmount;
            }
            set
            {
                OnLoanAmountChanging(value);
                ReportPropertyChanging("LoanAmount");
                _LoanAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAmount");
                OnLoanAmountChanged();
            }
        }
        private global::System.Decimal _LoanAmount;
        partial void OnLoanAmountChanging(global::System.Decimal value);
        partial void OnLoanAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.String _Purpose;
        partial void OnPurposeChanging(global::System.String value);
        partial void OnPurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReloanIndicator
        {
            get
            {
                return _IsReloanIndicator;
            }
            set
            {
                OnIsReloanIndicatorChanging(value);
                ReportPropertyChanging("IsReloanIndicator");
                _IsReloanIndicator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReloanIndicator");
                OnIsReloanIndicatorChanged();
            }
        }
        private global::System.Boolean _IsReloanIndicator;
        partial void OnIsReloanIndicatorChanging(global::System.Boolean value);
        partial void OnIsReloanIndicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InterestRate
        {
            get
            {
                return _InterestRate;
            }
            set
            {
                OnInterestRateChanging(value);
                ReportPropertyChanging("InterestRate");
                _InterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestRate");
                OnInterestRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _InterestRate;
        partial void OnInterestRateChanging(Nullable<global::System.Decimal> value);
        partial void OnInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InterestRateDescription
        {
            get
            {
                return _InterestRateDescription;
            }
            set
            {
                OnInterestRateDescriptionChanging(value);
                ReportPropertyChanging("InterestRateDescription");
                _InterestRateDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InterestRateDescription");
                OnInterestRateDescriptionChanged();
            }
        }
        private global::System.String _InterestRateDescription;
        partial void OnInterestRateDescriptionChanging(global::System.String value);
        partial void OnInterestRateDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PastDueInterestRate
        {
            get
            {
                return _PastDueInterestRate;
            }
            set
            {
                OnPastDueInterestRateChanging(value);
                ReportPropertyChanging("PastDueInterestRate");
                _PastDueInterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PastDueInterestRate");
                OnPastDueInterestRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _PastDueInterestRate;
        partial void OnPastDueInterestRateChanging(Nullable<global::System.Decimal> value);
        partial void OnPastDueInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PastDueInterestDescription
        {
            get
            {
                return _PastDueInterestDescription;
            }
            set
            {
                OnPastDueInterestDescriptionChanging(value);
                ReportPropertyChanging("PastDueInterestDescription");
                _PastDueInterestDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PastDueInterestDescription");
                OnPastDueInterestDescriptionChanged();
            }
        }
        private global::System.String _PastDueInterestDescription;
        partial void OnPastDueInterestDescriptionChanging(global::System.String value);
        partial void OnPastDueInterestDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInterestProductFeatureInd
        {
            get
            {
                return _IsInterestProductFeatureInd;
            }
            set
            {
                OnIsInterestProductFeatureIndChanging(value);
                ReportPropertyChanging("IsInterestProductFeatureInd");
                _IsInterestProductFeatureInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInterestProductFeatureInd");
                OnIsInterestProductFeatureIndChanged();
            }
        }
        private global::System.Boolean _IsInterestProductFeatureInd;
        partial void OnIsInterestProductFeatureIndChanging(global::System.Boolean value);
        partial void OnIsInterestProductFeatureIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPastDueProductFeatureInd
        {
            get
            {
                return _IsPastDueProductFeatureInd;
            }
            set
            {
                OnIsPastDueProductFeatureIndChanging(value);
                ReportPropertyChanging("IsPastDueProductFeatureInd");
                _IsPastDueProductFeatureInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPastDueProductFeatureInd");
                OnIsPastDueProductFeatureIndChanged();
            }
        }
        private global::System.Boolean _IsPastDueProductFeatureInd;
        partial void OnIsPastDueProductFeatureIndChanging(global::System.Boolean value);
        partial void OnIsPastDueProductFeatureIndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_APPLICAT", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("FinancialModel.FK_LOANAPPL_REFERENCE_APPLICAT", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSET_REFERENCE_LOANAPPL", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("FinancialModel.FK_ASSET_REFERENCE_LOANAPPL", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("FinancialModel.FK_ASSET_REFERENCE_LOANAPPL", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_LOANAPPL", "BankAccount")]
        public EntityCollection<BankAccount> BankAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_LOANAPPL", "BankAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_LOANAPPL", "BankAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ControlNumbers_LoanApplication", "ControlNumbers")]
        public EntityCollection<ControlNumber> ControlNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ControlNumber>("FinancialModel.FK_ControlNumbers_LoanApplication", "ControlNumbers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ControlNumber>("FinancialModel.FK_ControlNumbers_LoanApplication", "ControlNumbers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FormDetails_LoanApplication", "FormDetails")]
        public EntityCollection<FormDetail> FormDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormDetail>("FinancialModel.FK_FormDetails_LoanApplication", "FormDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormDetail>("FinancialModel.FK_FormDetails_LoanApplication", "FormDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplicationStatus")]
        public EntityCollection<LoanApplicationStatu> LoanApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplicationStatu>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplicationStatu>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplicationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplicationRole")]
        public EntityCollection<LoanApplicationRole> LoanApplicationRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplicationRole>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplicationRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplicationRole>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplicationRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_UNIT_OF_2", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOAN_APP_REFERENCE_UNIT_OF_2", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOAN_APP_REFERENCE_UNIT_OF_2", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOAN_APP_REFERENCE_UNIT_OF_2", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOAN_APP_REFERENCE_UNIT_OF_2", "UnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplicationFee")]
        public EntityCollection<LoanApplicationFee> LoanApplicationFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplicationFee>("FinancialModel.FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplicationFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplicationFee>("FinancialModel.FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplicationFee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANAPPL_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANAPPL_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasure1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANAPPL_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANAPPL_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANREAV_REFERENCE_LOANAPPL", "LoanReAvailment")]
        public EntityCollection<LoanReAvailment> LoanReAvailments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanReAvailment>("FinancialModel.FK_LOANREAV_REFERENCE_LOANAPPL", "LoanReAvailment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanReAvailment>("FinancialModel.FK_LOANREAV_REFERENCE_LOANAPPL", "LoanReAvailment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_LOANAPPL", "SubmittedDocument")]
        public EntityCollection<SubmittedDocument> SubmittedDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_LOANAPPL", "SubmittedDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_LOANAPPL", "SubmittedDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanApplicationFee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanApplicationFee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanApplicationFee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="particular">Initial value of the Particular property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static LoanApplicationFee CreateLoanApplicationFee(global::System.Int32 id, global::System.Int32 applicationId, global::System.String particular, global::System.Decimal amount)
        {
            LoanApplicationFee loanApplicationFee = new LoanApplicationFee();
            loanApplicationFee.Id = id;
            loanApplicationFee.ApplicationId = applicationId;
            loanApplicationFee.Particular = particular;
            loanApplicationFee.Amount = amount;
            return loanApplicationFee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Particular
        {
            get
            {
                return _Particular;
            }
            set
            {
                OnParticularChanging(value);
                ReportPropertyChanging("Particular");
                _Particular = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Particular");
                OnParticularChanged();
            }
        }
        private global::System.String _Particular;
        partial void OnParticularChanging(global::System.String value);
        partial void OnParticularChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_LOANAPPL", "LoanApplication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanApplicationRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanApplicationRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanApplicationRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static LoanApplicationRole CreateLoanApplicationRole(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.Int32 applicationId)
        {
            LoanApplicationRole loanApplicationRole = new LoanApplicationRole();
            loanApplicationRole.Id = id;
            loanApplicationRole.PartyRoleId = partyRoleId;
            loanApplicationRole.ApplicationId = applicationId;
            return loanApplicationRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP4", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANAPPL_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANAPPL_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANAPPL_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_LOANAPPL_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanApplicationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanApplicationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanApplicationStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static LoanApplicationStatu CreateLoanApplicationStatu(global::System.Int32 id, global::System.Int32 statusTypeId, global::System.Int32 applicationId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            LoanApplicationStatu loanApplicationStatu = new LoanApplicationStatu();
            loanApplicationStatu.Id = id;
            loanApplicationStatu.StatusTypeId = statusTypeId;
            loanApplicationStatu.ApplicationId = applicationId;
            loanApplicationStatu.TransitionDateTime = transitionDateTime;
            loanApplicationStatu.IsActive = isActive;
            return loanApplicationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP2", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatusType")]
        public LoanApplicationStatusType LoanApplicationStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplicationStatusType>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplicationStatusType>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplicationStatusType> LoanApplicationStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplicationStatusType>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplicationStatusType>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanApplicationStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanApplicationStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanApplicationStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LoanApplicationStatusType CreateLoanApplicationStatusType(global::System.Int32 id, global::System.String name)
        {
            LoanApplicationStatusType loanApplicationStatusType = new LoanApplicationStatusType();
            loanApplicationStatusType.Id = id;
            loanApplicationStatusType.Name = name;
            return loanApplicationStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatus")]
        public EntityCollection<LoanApplicationStatu> LoanApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplicationStatu>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplicationStatu>("FinancialModel.FK_LOAN_APP_REFERENCE_LOAN_APP3", "LoanApplicationStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanApplicationViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanApplicationViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanApplicationViewList object.
        /// </summary>
        /// <param name="loanApplicationId">Initial value of the LoanApplicationId property.</param>
        /// <param name="applicationDate">Initial value of the ApplicationDate property.</param>
        /// <param name="loanProduct">Initial value of the LoanProduct property.</param>
        /// <param name="collateralRequirement">Initial value of the CollateralRequirement property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static LoanApplicationViewList CreateLoanApplicationViewList(global::System.Int32 loanApplicationId, global::System.DateTime applicationDate, global::System.String loanProduct, global::System.String collateralRequirement, global::System.String status)
        {
            LoanApplicationViewList loanApplicationViewList = new LoanApplicationViewList();
            loanApplicationViewList.LoanApplicationId = loanApplicationId;
            loanApplicationViewList.ApplicationDate = applicationDate;
            loanApplicationViewList.LoanProduct = loanProduct;
            loanApplicationViewList.CollateralRequirement = collateralRequirement;
            loanApplicationViewList.Status = status;
            return loanApplicationViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanApplicationId
        {
            get
            {
                return _LoanApplicationId;
            }
            set
            {
                if (_LoanApplicationId != value)
                {
                    OnLoanApplicationIdChanging(value);
                    ReportPropertyChanging("LoanApplicationId");
                    _LoanApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanApplicationId");
                    OnLoanApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _LoanApplicationId;
        partial void OnLoanApplicationIdChanging(global::System.Int32 value);
        partial void OnLoanApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicationDate
        {
            get
            {
                return _ApplicationDate;
            }
            set
            {
                if (_ApplicationDate != value)
                {
                    OnApplicationDateChanging(value);
                    ReportPropertyChanging("ApplicationDate");
                    _ApplicationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationDate");
                    OnApplicationDateChanged();
                }
            }
        }
        private global::System.DateTime _ApplicationDate;
        partial void OnApplicationDateChanging(global::System.DateTime value);
        partial void OnApplicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BorrowersName
        {
            get
            {
                return _BorrowersName;
            }
            set
            {
                OnBorrowersNameChanging(value);
                ReportPropertyChanging("BorrowersName");
                _BorrowersName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BorrowersName");
                OnBorrowersNameChanged();
            }
        }
        private global::System.String _BorrowersName;
        partial void OnBorrowersNameChanging(global::System.String value);
        partial void OnBorrowersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoanProduct
        {
            get
            {
                return _LoanProduct;
            }
            set
            {
                if (_LoanProduct != value)
                {
                    OnLoanProductChanging(value);
                    ReportPropertyChanging("LoanProduct");
                    _LoanProduct = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoanProduct");
                    OnLoanProductChanged();
                }
            }
        }
        private global::System.String _LoanProduct;
        partial void OnLoanProductChanging(global::System.String value);
        partial void OnLoanProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CollateralRequirement
        {
            get
            {
                return _CollateralRequirement;
            }
            set
            {
                if (_CollateralRequirement != value)
                {
                    OnCollateralRequirementChanging(value);
                    ReportPropertyChanging("CollateralRequirement");
                    _CollateralRequirement = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CollateralRequirement");
                    OnCollateralRequirementChanged();
                }
            }
        }
        private global::System.String _CollateralRequirement;
        partial void OnCollateralRequirementChanging(global::System.String value);
        partial void OnCollateralRequirementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanDisbursement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanDisbursement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanDisbursement object.
        /// </summary>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="loanDisbursementTypeId">Initial value of the LoanDisbursementTypeId property.</param>
        /// <param name="loanAmount">Initial value of the LoanAmount property.</param>
        /// <param name="loanBalance">Initial value of the LoanBalance property.</param>
        /// <param name="interestBalance">Initial value of the InterestBalance property.</param>
        public static LoanDisbursement CreateLoanDisbursement(global::System.Int32 paymentId, global::System.Int32 loanDisbursementTypeId, global::System.Decimal loanAmount, global::System.Decimal loanBalance, global::System.Decimal interestBalance)
        {
            LoanDisbursement loanDisbursement = new LoanDisbursement();
            loanDisbursement.PaymentId = paymentId;
            loanDisbursement.LoanDisbursementTypeId = loanDisbursementTypeId;
            loanDisbursement.LoanAmount = loanAmount;
            loanDisbursement.LoanBalance = loanBalance;
            loanDisbursement.InterestBalance = interestBalance;
            return loanDisbursement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanDisbursementTypeId
        {
            get
            {
                return _LoanDisbursementTypeId;
            }
            set
            {
                OnLoanDisbursementTypeIdChanging(value);
                ReportPropertyChanging("LoanDisbursementTypeId");
                _LoanDisbursementTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanDisbursementTypeId");
                OnLoanDisbursementTypeIdChanged();
            }
        }
        private global::System.Int32 _LoanDisbursementTypeId;
        partial void OnLoanDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnLoanDisbursementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanAmount
        {
            get
            {
                return _LoanAmount;
            }
            set
            {
                OnLoanAmountChanging(value);
                ReportPropertyChanging("LoanAmount");
                _LoanAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAmount");
                OnLoanAmountChanged();
            }
        }
        private global::System.Decimal _LoanAmount;
        partial void OnLoanAmountChanging(global::System.Decimal value);
        partial void OnLoanAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanBalance
        {
            get
            {
                return _LoanBalance;
            }
            set
            {
                OnLoanBalanceChanging(value);
                ReportPropertyChanging("LoanBalance");
                _LoanBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanBalance");
                OnLoanBalanceChanged();
            }
        }
        private global::System.Decimal _LoanBalance;
        partial void OnLoanBalanceChanging(global::System.Decimal value);
        partial void OnLoanBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InterestBalance
        {
            get
            {
                return _InterestBalance;
            }
            set
            {
                OnInterestBalanceChanging(value);
                ReportPropertyChanging("InterestBalance");
                _InterestBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestBalance");
                OnInterestBalanceChanged();
            }
        }
        private global::System.Decimal _InterestBalance;
        partial void OnInterestBalanceChanging(global::System.Decimal value);
        partial void OnInterestBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANDISB_REFERENCE_DISBURSE2", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("FinancialModel.FK_LOANDISB_REFERENCE_DISBURSE2", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursementType")]
        public LoanDisbursementType LoanDisbursementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementType>("FinancialModel.FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementType>("FinancialModel.FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanDisbursementType> LoanDisbursementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementType>("FinancialModel.FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanDisbursementType>("FinancialModel.FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RELEASES_REFERENCE_LOANDISB", "ReleaseStatement")]
        public EntityCollection<ReleaseStatement> ReleaseStatements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReleaseStatement>("FinancialModel.FK_RELEASES_REFERENCE_LOANDISB", "ReleaseStatement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReleaseStatement>("FinancialModel.FK_RELEASES_REFERENCE_LOANDISB", "ReleaseStatement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanDisbursementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanDisbursementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanDisbursementType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LoanDisbursementType CreateLoanDisbursementType(global::System.Int32 id, global::System.String name)
        {
            LoanDisbursementType loanDisbursementType = new LoanDisbursementType();
            loanDisbursementType.Id = id;
            loanDisbursementType.Name = name;
            return loanDisbursementType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursement")]
        public EntityCollection<LoanDisbursement> LoanDisbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanDisbursement>("FinancialModel.FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanDisbursement>("FinancialModel.FK_LoanDisbursement_LoanDisbursementType", "LoanDisbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanDisbursementVcr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanDisbursementVcr : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanDisbursementVcr object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static LoanDisbursementVcr CreateLoanDisbursementVcr(global::System.Int32 id, global::System.Int32 agreementId, global::System.DateTime date, global::System.Decimal amount)
        {
            LoanDisbursementVcr loanDisbursementVcr = new LoanDisbursementVcr();
            loanDisbursementVcr.Id = id;
            loanDisbursementVcr.AgreementId = agreementId;
            loanDisbursementVcr.Date = date;
            loanDisbursementVcr.Amount = amount;
            return loanDisbursementVcr;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                OnAgreementIdChanging(value);
                ReportPropertyChanging("AgreementId");
                _AgreementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementId");
                OnAgreementIdChanged();
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANDISB_REFERENCE_AGREEMEN", "Agreement")]
        public Agreement Agreement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_LOANDISB_REFERENCE_AGREEMEN", "Agreement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_LOANDISB_REFERENCE_AGREEMEN", "Agreement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agreement> AgreementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agreement>("FinancialModel.FK_LOANDISB_REFERENCE_AGREEMEN", "Agreement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agreement>("FinancialModel.FK_LOANDISB_REFERENCE_AGREEMEN", "Agreement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_LOANDISB", "DisbursementVcrStatus")]
        public EntityCollection<DisbursementVcrStatu> DisbursementVcrStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementVcrStatu>("FinancialModel.FK_DISBURSE_REFERENCE_LOANDISB", "DisbursementVcrStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementVcrStatu>("FinancialModel.FK_DISBURSE_REFERENCE_LOANDISB", "DisbursementVcrStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_LOANDISB", "PaymentApplication")]
        public EntityCollection<PaymentApplication> PaymentApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentApplication>("FinancialModel.FK_PAYMENTA_REFERENCE_LOANDISB", "PaymentApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentApplication>("FinancialModel.FK_PAYMENTA_REFERENCE_LOANDISB", "PaymentApplication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanDisbursementViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanDisbursementViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanDisbursementViewList object.
        /// </summary>
        /// <param name="dateDisbursed">Initial value of the DateDisbursed property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="loanAgreementID">Initial value of the LoanAgreementID property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        /// <param name="amountDisbursed">Initial value of the AmountDisbursed property.</param>
        /// <param name="disbursementTypeId">Initial value of the DisbursementTypeId property.</param>
        public static LoanDisbursementViewList CreateLoanDisbursementViewList(global::System.DateTime dateDisbursed, global::System.Int32 paymentId, global::System.Int32 loanAgreementID, global::System.String paymentMethod, global::System.Decimal amountDisbursed, global::System.Int32 disbursementTypeId)
        {
            LoanDisbursementViewList loanDisbursementViewList = new LoanDisbursementViewList();
            loanDisbursementViewList.DateDisbursed = dateDisbursed;
            loanDisbursementViewList.PaymentId = paymentId;
            loanDisbursementViewList.LoanAgreementID = loanAgreementID;
            loanDisbursementViewList.PaymentMethod = paymentMethod;
            loanDisbursementViewList.AmountDisbursed = amountDisbursed;
            loanDisbursementViewList.DisbursementTypeId = disbursementTypeId;
            return loanDisbursementViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateDisbursed
        {
            get
            {
                return _DateDisbursed;
            }
            set
            {
                if (_DateDisbursed != value)
                {
                    OnDateDisbursedChanging(value);
                    ReportPropertyChanging("DateDisbursed");
                    _DateDisbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateDisbursed");
                    OnDateDisbursedChanged();
                }
            }
        }
        private global::System.DateTime _DateDisbursed;
        partial void OnDateDisbursedChanging(global::System.DateTime value);
        partial void OnDateDisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedTo
        {
            get
            {
                return _DisbursedTo;
            }
            set
            {
                OnDisbursedToChanging(value);
                ReportPropertyChanging("DisbursedTo");
                _DisbursedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedTo");
                OnDisbursedToChanged();
            }
        }
        private global::System.String _DisbursedTo;
        partial void OnDisbursedToChanging(global::System.String value);
        partial void OnDisbursedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanAgreementID
        {
            get
            {
                return _LoanAgreementID;
            }
            set
            {
                if (_LoanAgreementID != value)
                {
                    OnLoanAgreementIDChanging(value);
                    ReportPropertyChanging("LoanAgreementID");
                    _LoanAgreementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanAgreementID");
                    OnLoanAgreementIDChanged();
                }
            }
        }
        private global::System.Int32 _LoanAgreementID;
        partial void OnLoanAgreementIDChanging(global::System.Int32 value);
        partial void OnLoanAgreementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                if (_PaymentMethod != value)
                {
                    OnPaymentMethodChanging(value);
                    ReportPropertyChanging("PaymentMethod");
                    _PaymentMethod = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PaymentMethod");
                    OnPaymentMethodChanged();
                }
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountDisbursed
        {
            get
            {
                return _AmountDisbursed;
            }
            set
            {
                if (_AmountDisbursed != value)
                {
                    OnAmountDisbursedChanging(value);
                    ReportPropertyChanging("AmountDisbursed");
                    _AmountDisbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmountDisbursed");
                    OnAmountDisbursedChanged();
                }
            }
        }
        private global::System.Decimal _AmountDisbursed;
        partial void OnAmountDisbursedChanging(global::System.Decimal value);
        partial void OnAmountDisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedBy
        {
            get
            {
                return _DisbursedBy;
            }
            set
            {
                OnDisbursedByChanging(value);
                ReportPropertyChanging("DisbursedBy");
                _DisbursedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedBy");
                OnDisbursedByChanged();
            }
        }
        private global::System.String _DisbursedBy;
        partial void OnDisbursedByChanging(global::System.String value);
        partial void OnDisbursedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeId
        {
            get
            {
                return _DisbursementTypeId;
            }
            set
            {
                if (_DisbursementTypeId != value)
                {
                    OnDisbursementTypeIdChanging(value);
                    ReportPropertyChanging("DisbursementTypeId");
                    _DisbursementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeId");
                    OnDisbursementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeId;
        partial void OnDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanDisbursementVoucherViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanDisbursementVoucherViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanDisbursementVoucherViewList object.
        /// </summary>
        /// <param name="voucherId">Initial value of the VoucherId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="loanAgreementId">Initial value of the LoanAgreementId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static LoanDisbursementVoucherViewList CreateLoanDisbursementVoucherViewList(global::System.Int32 voucherId, global::System.DateTime date, global::System.Int32 loanAgreementId, global::System.Decimal amount, global::System.String status)
        {
            LoanDisbursementVoucherViewList loanDisbursementVoucherViewList = new LoanDisbursementVoucherViewList();
            loanDisbursementVoucherViewList.VoucherId = voucherId;
            loanDisbursementVoucherViewList.Date = date;
            loanDisbursementVoucherViewList.LoanAgreementId = loanAgreementId;
            loanDisbursementVoucherViewList.Amount = amount;
            loanDisbursementVoucherViewList.Status = status;
            return loanDisbursementVoucherViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoucherId
        {
            get
            {
                return _VoucherId;
            }
            set
            {
                if (_VoucherId != value)
                {
                    OnVoucherIdChanging(value);
                    ReportPropertyChanging("VoucherId");
                    _VoucherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VoucherId");
                    OnVoucherIdChanged();
                }
            }
        }
        private global::System.Int32 _VoucherId;
        partial void OnVoucherIdChanging(global::System.Int32 value);
        partial void OnVoucherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanAgreementId
        {
            get
            {
                return _LoanAgreementId;
            }
            set
            {
                if (_LoanAgreementId != value)
                {
                    OnLoanAgreementIdChanging(value);
                    ReportPropertyChanging("LoanAgreementId");
                    _LoanAgreementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanAgreementId");
                    OnLoanAgreementIdChanged();
                }
            }
        }
        private global::System.Int32 _LoanAgreementId;
        partial void OnLoanAgreementIdChanging(global::System.Int32 value);
        partial void OnLoanAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanModification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanModification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanModification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="loanModificationTypeId">Initial value of the LoanModificationTypeId property.</param>
        public static LoanModification CreateLoanModification(global::System.Int32 id, global::System.Int32 partyRoleId, global::System.Int32 loanModificationTypeId)
        {
            LoanModification loanModification = new LoanModification();
            loanModification.Id = id;
            loanModification.PartyRoleId = partyRoleId;
            loanModification.LoanModificationTypeId = loanModificationTypeId;
            return loanModification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanModificationTypeId
        {
            get
            {
                return _LoanModificationTypeId;
            }
            set
            {
                OnLoanModificationTypeIdChanging(value);
                ReportPropertyChanging("LoanModificationTypeId");
                _LoanModificationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanModificationTypeId");
                OnLoanModificationTypeIdChanged();
            }
        }
        private global::System.Int32 _LoanModificationTypeId;
        partial void OnLoanModificationTypeIdChanging(global::System.Int32 value);
        partial void OnLoanModificationTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModificationStatus")]
        public EntityCollection<LoanModificationStatu> LoanModificationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModificationStatu>("FinancialModel.FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModificationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModificationStatu>("FinancialModel.FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModificationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModificationPrevItems")]
        public EntityCollection<LoanModificationPrevItem> LoanModificationPrevItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModificationPrevItem>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModificationPrevItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModificationPrevItem>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModificationPrevItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModificationType")]
        public LoanModificationType LoanModificationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModificationType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModificationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModificationType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModificationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanModificationType> LoanModificationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModificationType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanModificationType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModificationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_PARTYROL2", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL2", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL2", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL2", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL2", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanModificationPrevItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanModificationPrevItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanModificationPrevItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="loanModificationId">Initial value of the LoanModificationId property.</param>
        /// <param name="oldFinancialAccountId">Initial value of the OldFinancialAccountId property.</param>
        public static LoanModificationPrevItem CreateLoanModificationPrevItem(global::System.Int32 id, global::System.Int32 loanModificationId, global::System.Int32 oldFinancialAccountId)
        {
            LoanModificationPrevItem loanModificationPrevItem = new LoanModificationPrevItem();
            loanModificationPrevItem.Id = id;
            loanModificationPrevItem.LoanModificationId = loanModificationId;
            loanModificationPrevItem.OldFinancialAccountId = oldFinancialAccountId;
            return loanModificationPrevItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanModificationId
        {
            get
            {
                return _LoanModificationId;
            }
            set
            {
                OnLoanModificationIdChanging(value);
                ReportPropertyChanging("LoanModificationId");
                _LoanModificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanModificationId");
                OnLoanModificationIdChanged();
            }
        }
        private global::System.Int32 _LoanModificationId;
        partial void OnLoanModificationIdChanging(global::System.Int32 value);
        partial void OnLoanModificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldFinancialAccountId
        {
            get
            {
                return _OldFinancialAccountId;
            }
            set
            {
                OnOldFinancialAccountIdChanging(value);
                ReportPropertyChanging("OldFinancialAccountId");
                _OldFinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldFinancialAccountId");
                OnOldFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _OldFinancialAccountId;
        partial void OnOldFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnOldFinancialAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_FINANCIA2", "FinancialAccount")]
        public FinancialAccount FinancialAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_LOANMODI_REFERENCE_FINANCIA2", "FinancialAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_LOANMODI_REFERENCE_FINANCIA2", "FinancialAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialAccount> FinancialAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialAccount>("FinancialModel.FK_LOANMODI_REFERENCE_FINANCIA2", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialAccount>("FinancialModel.FK_LOANMODI_REFERENCE_FINANCIA2", "FinancialAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModification")]
        public LoanModification LoanModification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanModification> LoanModificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI3", "LoanModification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "LoanModificationNewItems", "FinancialAccount")]
        public EntityCollection<FinancialAccount> FinancialAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccount>("FinancialModel.LoanModificationNewItems", "FinancialAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccount>("FinancialModel.LoanModificationNewItems", "FinancialAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanModificationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanModificationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanModificationStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="loanModificationDatetime">Initial value of the LoanModificationDatetime property.</param>
        /// <param name="loanModificationId">Initial value of the LoanModificationId property.</param>
        /// <param name="loanModificationStatusTypeId">Initial value of the LoanModificationStatusTypeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static LoanModificationStatu CreateLoanModificationStatu(global::System.Int32 id, global::System.DateTime loanModificationDatetime, global::System.Int32 loanModificationId, global::System.Int32 loanModificationStatusTypeId, global::System.Boolean isActive)
        {
            LoanModificationStatu loanModificationStatu = new LoanModificationStatu();
            loanModificationStatu.Id = id;
            loanModificationStatu.LoanModificationDatetime = loanModificationDatetime;
            loanModificationStatu.LoanModificationId = loanModificationId;
            loanModificationStatu.LoanModificationStatusTypeId = loanModificationStatusTypeId;
            loanModificationStatu.IsActive = isActive;
            return loanModificationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoanModificationDatetime
        {
            get
            {
                return _LoanModificationDatetime;
            }
            set
            {
                OnLoanModificationDatetimeChanging(value);
                ReportPropertyChanging("LoanModificationDatetime");
                _LoanModificationDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanModificationDatetime");
                OnLoanModificationDatetimeChanged();
            }
        }
        private global::System.DateTime _LoanModificationDatetime;
        partial void OnLoanModificationDatetimeChanging(global::System.DateTime value);
        partial void OnLoanModificationDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanModificationId
        {
            get
            {
                return _LoanModificationId;
            }
            set
            {
                OnLoanModificationIdChanging(value);
                ReportPropertyChanging("LoanModificationId");
                _LoanModificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanModificationId");
                OnLoanModificationIdChanged();
            }
        }
        private global::System.Int32 _LoanModificationId;
        partial void OnLoanModificationIdChanging(global::System.Int32 value);
        partial void OnLoanModificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanModificationStatusTypeId
        {
            get
            {
                return _LoanModificationStatusTypeId;
            }
            set
            {
                OnLoanModificationStatusTypeIdChanging(value);
                ReportPropertyChanging("LoanModificationStatusTypeId");
                _LoanModificationStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanModificationStatusTypeId");
                OnLoanModificationStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _LoanModificationStatusTypeId;
        partial void OnLoanModificationStatusTypeIdChanging(global::System.Int32 value);
        partial void OnLoanModificationStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModification")]
        public LoanModification LoanModification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanModification> LoanModificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanModification>("FinancialModel.FK_LOANMODI_LOANMODIF_LOANMODI", "LoanModification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatusType")]
        public LoanModificationStatusType LoanModificationStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModificationStatusType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModificationStatusType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanModificationStatusType> LoanModificationStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanModificationStatusType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanModificationStatusType>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanModificationStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanModificationStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanModificationStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LoanModificationStatusType CreateLoanModificationStatusType(global::System.Int32 id, global::System.String name)
        {
            LoanModificationStatusType loanModificationStatusType = new LoanModificationStatusType();
            loanModificationStatusType.Id = id;
            loanModificationStatusType.Name = name;
            return loanModificationStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatus")]
        public EntityCollection<LoanModificationStatu> LoanModificationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModificationStatu>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModificationStatu>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI2", "LoanModificationStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanModificationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanModificationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanModificationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LoanModificationType CreateLoanModificationType(global::System.Int32 id, global::System.String name)
        {
            LoanModificationType loanModificationType = new LoanModificationType();
            loanModificationType.Id = id;
            loanModificationType.Name = name;
            return loanModificationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModification")]
        public EntityCollection<LoanModification> LoanModifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_LOANMODI4", "LoanModification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanPayment object.
        /// </summary>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="ownerOutstandingLoan">Initial value of the OwnerOutstandingLoan property.</param>
        /// <param name="ownerOutstandingInterest">Initial value of the OwnerOutstandingInterest property.</param>
        /// <param name="coOwnerOutstandingLoan">Initial value of the CoOwnerOutstandingLoan property.</param>
        /// <param name="coOwnerOutstandingInterest">Initial value of the CoOwnerOutstandingInterest property.</param>
        public static LoanPayment CreateLoanPayment(global::System.Int32 paymentId, global::System.Decimal ownerOutstandingLoan, global::System.Decimal ownerOutstandingInterest, global::System.Decimal coOwnerOutstandingLoan, global::System.Decimal coOwnerOutstandingInterest)
        {
            LoanPayment loanPayment = new LoanPayment();
            loanPayment.PaymentId = paymentId;
            loanPayment.OwnerOutstandingLoan = ownerOutstandingLoan;
            loanPayment.OwnerOutstandingInterest = ownerOutstandingInterest;
            loanPayment.CoOwnerOutstandingLoan = coOwnerOutstandingLoan;
            loanPayment.CoOwnerOutstandingInterest = coOwnerOutstandingInterest;
            return loanPayment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerOutstandingLoan
        {
            get
            {
                return _OwnerOutstandingLoan;
            }
            set
            {
                OnOwnerOutstandingLoanChanging(value);
                ReportPropertyChanging("OwnerOutstandingLoan");
                _OwnerOutstandingLoan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerOutstandingLoan");
                OnOwnerOutstandingLoanChanged();
            }
        }
        private global::System.Decimal _OwnerOutstandingLoan;
        partial void OnOwnerOutstandingLoanChanging(global::System.Decimal value);
        partial void OnOwnerOutstandingLoanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerOutstandingInterest
        {
            get
            {
                return _OwnerOutstandingInterest;
            }
            set
            {
                OnOwnerOutstandingInterestChanging(value);
                ReportPropertyChanging("OwnerOutstandingInterest");
                _OwnerOutstandingInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerOutstandingInterest");
                OnOwnerOutstandingInterestChanged();
            }
        }
        private global::System.Decimal _OwnerOutstandingInterest;
        partial void OnOwnerOutstandingInterestChanging(global::System.Decimal value);
        partial void OnOwnerOutstandingInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CoOwnerOutstandingLoan
        {
            get
            {
                return _CoOwnerOutstandingLoan;
            }
            set
            {
                OnCoOwnerOutstandingLoanChanging(value);
                ReportPropertyChanging("CoOwnerOutstandingLoan");
                _CoOwnerOutstandingLoan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoOwnerOutstandingLoan");
                OnCoOwnerOutstandingLoanChanged();
            }
        }
        private global::System.Decimal _CoOwnerOutstandingLoan;
        partial void OnCoOwnerOutstandingLoanChanging(global::System.Decimal value);
        partial void OnCoOwnerOutstandingLoanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CoOwnerOutstandingInterest
        {
            get
            {
                return _CoOwnerOutstandingInterest;
            }
            set
            {
                OnCoOwnerOutstandingInterestChanging(value);
                ReportPropertyChanging("CoOwnerOutstandingInterest");
                _CoOwnerOutstandingInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoOwnerOutstandingInterest");
                OnCoOwnerOutstandingInterestChanged();
            }
        }
        private global::System.Decimal _CoOwnerOutstandingInterest;
        partial void OnCoOwnerOutstandingInterestChanging(global::System.Decimal value);
        partial void OnCoOwnerOutstandingInterestChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LoanPayment_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_LoanPayment_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_LoanPayment_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_LoanPayment_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_LoanPayment_Payment", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanStatement")]
        public EntityCollection<LoanStatement> LoanStatements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanStatement>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanStatement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanStatement>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanStatement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanReAvailment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanReAvailment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanReAvailment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="loanBalance">Initial value of the LoanBalance property.</param>
        public static LoanReAvailment CreateLoanReAvailment(global::System.Int32 id, global::System.Int32 financialAccountId, global::System.Int32 applicationId, global::System.Decimal loanBalance)
        {
            LoanReAvailment loanReAvailment = new LoanReAvailment();
            loanReAvailment.Id = id;
            loanReAvailment.FinancialAccountId = financialAccountId;
            loanReAvailment.ApplicationId = applicationId;
            loanReAvailment.LoanBalance = loanBalance;
            return loanReAvailment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanBalance
        {
            get
            {
                return _LoanBalance;
            }
            set
            {
                OnLoanBalanceChanging(value);
                ReportPropertyChanging("LoanBalance");
                _LoanBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanBalance");
                OnLoanBalanceChanged();
            }
        }
        private global::System.Decimal _LoanBalance;
        partial void OnLoanBalanceChanging(global::System.Decimal value);
        partial void OnLoanBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfInstallments
        {
            get
            {
                return _NoOfInstallments;
            }
            set
            {
                OnNoOfInstallmentsChanging(value);
                ReportPropertyChanging("NoOfInstallments");
                _NoOfInstallments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfInstallments");
                OnNoOfInstallmentsChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfInstallments;
        partial void OnNoOfInstallmentsChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfInstallmentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANREAV_REFERENCE_LOANACCO", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANREAV_REFERENCE_LOANACCO", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANREAV_REFERENCE_LOANACCO", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANREAV_REFERENCE_LOANACCO", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_LOANREAV_REFERENCE_LOANACCO", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANREAV_REFERENCE_LOANAPPL", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANREAV_REFERENCE_LOANAPPL", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANREAV_REFERENCE_LOANAPPL", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_LOANREAV_REFERENCE_LOANAPPL", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_LOANREAV_REFERENCE_LOANAPPL", "LoanApplication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanStatement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanStatement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanStatement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="totalLoanBalance">Initial value of the TotalLoanBalance property.</param>
        /// <param name="deficitAmount">Initial value of the DeficitAmount property.</param>
        public static LoanStatement CreateLoanStatement(global::System.Int32 id, global::System.Int32 financialAccountId, global::System.Int32 paymentId, global::System.Decimal totalLoanBalance, global::System.Decimal deficitAmount)
        {
            LoanStatement loanStatement = new LoanStatement();
            loanStatement.Id = id;
            loanStatement.FinancialAccountId = financialAccountId;
            loanStatement.PaymentId = paymentId;
            loanStatement.TotalLoanBalance = totalLoanBalance;
            loanStatement.DeficitAmount = deficitAmount;
            return loanStatement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalLoanBalance
        {
            get
            {
                return _TotalLoanBalance;
            }
            set
            {
                OnTotalLoanBalanceChanging(value);
                ReportPropertyChanging("TotalLoanBalance");
                _TotalLoanBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalLoanBalance");
                OnTotalLoanBalanceChanged();
            }
        }
        private global::System.Decimal _TotalLoanBalance;
        partial void OnTotalLoanBalanceChanging(global::System.Decimal value);
        partial void OnTotalLoanBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DeficitAmount
        {
            get
            {
                return _DeficitAmount;
            }
            set
            {
                OnDeficitAmountChanging(value);
                ReportPropertyChanging("DeficitAmount");
                _DeficitAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeficitAmount");
                OnDeficitAmountChanged();
            }
        }
        private global::System.Decimal _DeficitAmount;
        partial void OnDeficitAmountChanging(global::System.Decimal value);
        partial void OnDeficitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NoOfInstallment
        {
            get
            {
                return _NoOfInstallment;
            }
            set
            {
                OnNoOfInstallmentChanging(value);
                ReportPropertyChanging("NoOfInstallment");
                _NoOfInstallment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfInstallment");
                OnNoOfInstallmentChanged();
            }
        }
        private Nullable<global::System.Decimal> _NoOfInstallment;
        partial void OnNoOfInstallmentChanging(Nullable<global::System.Decimal> value);
        partial void OnNoOfInstallmentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANSTAT_REFERENCE_LOANACCO", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANACCO", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANACCO", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANACCO", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANACCO", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanPayment")]
        public LoanPayment LoanPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanPayment>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanPayment>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanPayment> LoanPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanPayment>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanPayment>("FinancialModel.FK_LOANSTAT_REFERENCE_LOANPAYM", "LoanPayment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanTerm object.
        /// </summary>
        /// <param name="productFeatApplicabilityId">Initial value of the ProductFeatApplicabilityId property.</param>
        /// <param name="uomId">Initial value of the UomId property.</param>
        /// <param name="loanTermLength">Initial value of the LoanTermLength property.</param>
        public static LoanTerm CreateLoanTerm(global::System.Int32 productFeatApplicabilityId, global::System.Int32 uomId, global::System.Int32 loanTermLength)
        {
            LoanTerm loanTerm = new LoanTerm();
            loanTerm.ProductFeatApplicabilityId = productFeatApplicabilityId;
            loanTerm.UomId = uomId;
            loanTerm.LoanTermLength = loanTermLength;
            return loanTerm;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductFeatApplicabilityId
        {
            get
            {
                return _ProductFeatApplicabilityId;
            }
            set
            {
                if (_ProductFeatApplicabilityId != value)
                {
                    OnProductFeatApplicabilityIdChanging(value);
                    ReportPropertyChanging("ProductFeatApplicabilityId");
                    _ProductFeatApplicabilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductFeatApplicabilityId");
                    OnProductFeatApplicabilityIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductFeatApplicabilityId;
        partial void OnProductFeatApplicabilityIdChanging(global::System.Int32 value);
        partial void OnProductFeatApplicabilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UomId
        {
            get
            {
                return _UomId;
            }
            set
            {
                OnUomIdChanging(value);
                ReportPropertyChanging("UomId");
                _UomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UomId");
                OnUomIdChanged();
            }
        }
        private global::System.Int32 _UomId;
        partial void OnUomIdChanging(global::System.Int32 value);
        partial void OnUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanTermLength
        {
            get
            {
                return _LoanTermLength;
            }
            set
            {
                OnLoanTermLengthChanging(value);
                ReportPropertyChanging("LoanTermLength");
                _LoanTermLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanTermLength");
                OnLoanTermLengthChanged();
            }
        }
        private global::System.Int32 _LoanTermLength;
        partial void OnLoanTermLengthChanging(global::System.Int32 value);
        partial void OnLoanTermLengthChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANTERM_REFERENCE_PRODUCTF", "ProductFeatureApplicability")]
        public ProductFeatureApplicability ProductFeatureApplicability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "ProductFeatureApplicability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "ProductFeatureApplicability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFeatureApplicability> ProductFeatureApplicabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "ProductFeatureApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFeatureApplicability>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "ProductFeatureApplicability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANTERM_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANTERM_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANTERM_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANTERM_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_LOANTERM_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="LoanViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanViewList object.
        /// </summary>
        /// <param name="loanId">Initial value of the LoanId property.</param>
        /// <param name="loanProduct">Initial value of the LoanProduct property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="interestComputationMode">Initial value of the InterestComputationMode property.</param>
        public static LoanViewList CreateLoanViewList(global::System.Int32 loanId, global::System.String loanProduct, global::System.String status, global::System.String interestComputationMode)
        {
            LoanViewList loanViewList = new LoanViewList();
            loanViewList.LoanId = loanId;
            loanViewList.LoanProduct = loanProduct;
            loanViewList.Status = status;
            loanViewList.InterestComputationMode = interestComputationMode;
            return loanViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanId
        {
            get
            {
                return _LoanId;
            }
            set
            {
                if (_LoanId != value)
                {
                    OnLoanIdChanging(value);
                    ReportPropertyChanging("LoanId");
                    _LoanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanId");
                    OnLoanIdChanged();
                }
            }
        }
        private global::System.Int32 _LoanId;
        partial void OnLoanIdChanging(global::System.Int32 value);
        partial void OnLoanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LoanReleaseDate
        {
            get
            {
                return _LoanReleaseDate;
            }
            set
            {
                OnLoanReleaseDateChanging(value);
                ReportPropertyChanging("LoanReleaseDate");
                _LoanReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanReleaseDate");
                OnLoanReleaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LoanReleaseDate;
        partial void OnLoanReleaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLoanReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoanProduct
        {
            get
            {
                return _LoanProduct;
            }
            set
            {
                if (_LoanProduct != value)
                {
                    OnLoanProductChanging(value);
                    ReportPropertyChanging("LoanProduct");
                    _LoanProduct = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoanProduct");
                    OnLoanProductChanged();
                }
            }
        }
        private global::System.String _LoanProduct;
        partial void OnLoanProductChanging(global::System.String value);
        partial void OnLoanProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InterestComputationMode
        {
            get
            {
                return _InterestComputationMode;
            }
            set
            {
                if (_InterestComputationMode != value)
                {
                    OnInterestComputationModeChanging(value);
                    ReportPropertyChanging("InterestComputationMode");
                    _InterestComputationMode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InterestComputationMode");
                    OnInterestComputationModeChanged();
                }
            }
        }
        private global::System.String _InterestComputationMode;
        partial void OnInterestComputationModeChanging(global::System.String value);
        partial void OnInterestComputationModeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Machine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Machine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Machine object.
        /// </summary>
        /// <param name="assetId">Initial value of the AssetId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static Machine CreateMachine(global::System.Int32 assetId, global::System.String machineName, global::System.String brand, global::System.String model)
        {
            Machine machine = new Machine();
            machine.AssetId = assetId;
            machine.MachineName = machineName;
            machine.Brand = brand;
            machine.Model = model;
            return machine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                if (_AssetId != value)
                {
                    OnAssetIdChanging(value);
                    ReportPropertyChanging("AssetId");
                    _AssetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetId");
                    OnAssetIdChanged();
                }
            }
        }
        private global::System.Int32 _AssetId;
        partial void OnAssetIdChanging(global::System.Int32 value);
        partial void OnAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.String _Capacity;
        partial void OnCapacityChanging(global::System.String value);
        partial void OnCapacityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Machine_Asset", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_Machine_Asset", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_Machine_Asset", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_Machine_Asset", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_Machine_Asset", "Asset", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="MaritalStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaritalStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaritalStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="maritalStatusTypeId">Initial value of the MaritalStatusTypeId property.</param>
        /// <param name="numberOfDependents">Initial value of the NumberOfDependents property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static MaritalStatu CreateMaritalStatu(global::System.Int32 id, global::System.Int32 partyId, global::System.Int32 maritalStatusTypeId, global::System.Int32 numberOfDependents, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            MaritalStatu maritalStatu = new MaritalStatu();
            maritalStatu.Id = id;
            maritalStatu.PartyId = partyId;
            maritalStatu.MaritalStatusTypeId = maritalStatusTypeId;
            maritalStatu.NumberOfDependents = numberOfDependents;
            maritalStatu.TransitionDateTime = transitionDateTime;
            maritalStatu.IsActive = isActive;
            return maritalStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaritalStatusTypeId
        {
            get
            {
                return _MaritalStatusTypeId;
            }
            set
            {
                OnMaritalStatusTypeIdChanging(value);
                ReportPropertyChanging("MaritalStatusTypeId");
                _MaritalStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaritalStatusTypeId");
                OnMaritalStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _MaritalStatusTypeId;
        partial void OnMaritalStatusTypeIdChanging(global::System.Int32 value);
        partial void OnMaritalStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfDependents
        {
            get
            {
                return _NumberOfDependents;
            }
            set
            {
                OnNumberOfDependentsChanging(value);
                ReportPropertyChanging("NumberOfDependents");
                _NumberOfDependents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfDependents");
                OnNumberOfDependentsChanged();
            }
        }
        private global::System.Int32 _NumberOfDependents;
        partial void OnNumberOfDependentsChanging(global::System.Int32 value);
        partial void OnNumberOfDependentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_MARITALS_REFERENCE_MARITALS", "MaritalStatusType")]
        public MaritalStatusType MaritalStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatusType>("FinancialModel.FK_MARITALS_REFERENCE_MARITALS", "MaritalStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatusType>("FinancialModel.FK_MARITALS_REFERENCE_MARITALS", "MaritalStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaritalStatusType> MaritalStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatusType>("FinancialModel.FK_MARITALS_REFERENCE_MARITALS", "MaritalStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaritalStatusType>("FinancialModel.FK_MARITALS_REFERENCE_MARITALS", "MaritalStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_MARITALS_REFERENCE_PERSON", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_MARITALS_REFERENCE_PERSON", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_MARITALS_REFERENCE_PERSON", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_MARITALS_REFERENCE_PERSON", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_MARITALS_REFERENCE_PERSON", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="MaritalStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaritalStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaritalStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MaritalStatusType CreateMaritalStatusType(global::System.Int32 id, global::System.String name)
        {
            MaritalStatusType maritalStatusType = new MaritalStatusType();
            maritalStatusType.Id = id;
            maritalStatusType.Name = name;
            return maritalStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_MARITALS_REFERENCE_MARITALS", "MaritalStatus")]
        public EntityCollection<MaritalStatu> MaritalStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaritalStatu>("FinancialModel.FK_MARITALS_REFERENCE_MARITALS", "MaritalStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaritalStatu>("FinancialModel.FK_MARITALS_REFERENCE_MARITALS", "MaritalStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="NationalityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NationalityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NationalityType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NationalityType CreateNationalityType(global::System.Int32 id, global::System.String name)
        {
            NationalityType nationalityType = new NationalityType();
            nationalityType.Id = id;
            nationalityType.Name = name;
            return nationalityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_NATIONAL", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("FinancialModel.FK_PERSON_REFERENCE_NATIONAL", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("FinancialModel.FK_PERSON_REFERENCE_NATIONAL", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="NonProductFee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NonProductFee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NonProductFee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NonProductFee CreateNonProductFee(global::System.Int32 id, global::System.String name)
        {
            NonProductFee nonProductFee = new NonProductFee();
            nonProductFee.Id = id;
            nonProductFee.Name = name;
            return nonProductFee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="organizationName">Initial value of the OrganizationName property.</param>
        public static Organization CreateOrganization(global::System.Int32 partyId, global::System.String organizationName)
        {
            Organization organization = new Organization();
            organization.PartyId = partyId;
            organization.OrganizationName = organizationName;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganizationTypeId
        {
            get
            {
                return _OrganizationTypeId;
            }
            set
            {
                OnOrganizationTypeIdChanging(value);
                ReportPropertyChanging("OrganizationTypeId");
                _OrganizationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationTypeId");
                OnOrganizationTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganizationTypeId;
        partial void OnOrganizationTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnOrganizationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationName
        {
            get
            {
                return _OrganizationName;
            }
            set
            {
                OnOrganizationNameChanging(value);
                ReportPropertyChanging("OrganizationName");
                _OrganizationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationName");
                OnOrganizationNameChanged();
            }
        }
        private global::System.String _OrganizationName;
        partial void OnOrganizationNameChanging(global::System.String value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEstablished
        {
            get
            {
                return _DateEstablished;
            }
            set
            {
                OnDateEstablishedChanging(value);
                ReportPropertyChanging("DateEstablished");
                _DateEstablished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEstablished");
                OnDateEstablishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEstablished;
        partial void OnDateEstablishedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEstablishedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ORGANIZA_REFERENCE_ORGANIZA", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("FinancialModel.FK_ORGANIZA_REFERENCE_ORGANIZA", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("FinancialModel.FK_ORGANIZA_REFERENCE_ORGANIZA", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("FinancialModel.FK_ORGANIZA_REFERENCE_ORGANIZA", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("FinancialModel.FK_ORGANIZA_REFERENCE_ORGANIZA", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ORGANIZA_REFERENCE_PARTY", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Party", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="OrganizationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static OrganizationType CreateOrganizationType(global::System.Int32 id, global::System.String name)
        {
            OrganizationType organizationType = new OrganizationType();
            organizationType.Id = id;
            organizationType.Name = name;
            return organizationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ORGANIZA_REFERENCE_ORGANIZA", "Organization")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("FinancialModel.FK_ORGANIZA_REFERENCE_ORGANIZA", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("FinancialModel.FK_ORGANIZA_REFERENCE_ORGANIZA", "Organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="OtherDisbursementDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtherDisbursementDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OtherDisbursementDetail object.
        /// </summary>
        /// <param name="date_Disbursed">Initial value of the Date_Disbursed property.</param>
        /// <param name="payment_Method">Initial value of the Payment_Method property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="disbursementTypeId">Initial value of the DisbursementTypeId property.</param>
        public static OtherDisbursementDetail CreateOtherDisbursementDetail(global::System.DateTime date_Disbursed, global::System.String payment_Method, global::System.Int32 paymentId, global::System.Int32 disbursementTypeId)
        {
            OtherDisbursementDetail otherDisbursementDetail = new OtherDisbursementDetail();
            otherDisbursementDetail.Date_Disbursed = date_Disbursed;
            otherDisbursementDetail.Payment_Method = payment_Method;
            otherDisbursementDetail.PaymentId = paymentId;
            otherDisbursementDetail.DisbursementTypeId = disbursementTypeId;
            return otherDisbursementDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_Disbursed
        {
            get
            {
                return _Date_Disbursed;
            }
            set
            {
                if (_Date_Disbursed != value)
                {
                    OnDate_DisbursedChanging(value);
                    ReportPropertyChanging("Date_Disbursed");
                    _Date_Disbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date_Disbursed");
                    OnDate_DisbursedChanged();
                }
            }
        }
        private global::System.DateTime _Date_Disbursed;
        partial void OnDate_DisbursedChanging(global::System.DateTime value);
        partial void OnDate_DisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedTo
        {
            get
            {
                return _DisbursedTo;
            }
            set
            {
                OnDisbursedToChanging(value);
                ReportPropertyChanging("DisbursedTo");
                _DisbursedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedTo");
                OnDisbursedToChanged();
            }
        }
        private global::System.String _DisbursedTo;
        partial void OnDisbursedToChanging(global::System.String value);
        partial void OnDisbursedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Payment_Method
        {
            get
            {
                return _Payment_Method;
            }
            set
            {
                if (_Payment_Method != value)
                {
                    OnPayment_MethodChanging(value);
                    ReportPropertyChanging("Payment_Method");
                    _Payment_Method = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Payment_Method");
                    OnPayment_MethodChanged();
                }
            }
        }
        private global::System.String _Payment_Method;
        partial void OnPayment_MethodChanging(global::System.String value);
        partial void OnPayment_MethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Check_Number
        {
            get
            {
                return _Check_Number;
            }
            set
            {
                OnCheck_NumberChanging(value);
                ReportPropertyChanging("Check_Number");
                _Check_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Check_Number");
                OnCheck_NumberChanged();
            }
        }
        private global::System.String _Check_Number;
        partial void OnCheck_NumberChanging(global::System.String value);
        partial void OnCheck_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedBy
        {
            get
            {
                return _DisbursedBy;
            }
            set
            {
                OnDisbursedByChanging(value);
                ReportPropertyChanging("DisbursedBy");
                _DisbursedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedBy");
                OnDisbursedByChanged();
            }
        }
        private global::System.String _DisbursedBy;
        partial void OnDisbursedByChanging(global::System.String value);
        partial void OnDisbursedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeId
        {
            get
            {
                return _DisbursementTypeId;
            }
            set
            {
                if (_DisbursementTypeId != value)
                {
                    OnDisbursementTypeIdChanging(value);
                    ReportPropertyChanging("DisbursementTypeId");
                    _DisbursementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeId");
                    OnDisbursementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeId;
        partial void OnDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="OtherDisbursementParticular")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtherDisbursementParticular : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OtherDisbursementParticular object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static OtherDisbursementParticular CreateOtherDisbursementParticular(global::System.Int32 id, global::System.String name)
        {
            OtherDisbursementParticular otherDisbursementParticular = new OtherDisbursementParticular();
            otherDisbursementParticular.Id = id;
            otherDisbursementParticular.Name = name;
            return otherDisbursementParticular;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Party")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Party : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Party object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyTypeId">Initial value of the PartyTypeId property.</param>
        public static Party CreateParty(global::System.Int32 id, global::System.Int32 partyTypeId)
        {
            Party party = new Party();
            party.Id = id;
            party.PartyTypeId = partyTypeId;
            return party;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyTypeId
        {
            get
            {
                return _PartyTypeId;
            }
            set
            {
                OnPartyTypeIdChanging(value);
                ReportPropertyChanging("PartyTypeId");
                _PartyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyTypeId");
                OnPartyTypeIdChanged();
            }
        }
        private global::System.Int32 _PartyTypeId;
        partial void OnPartyTypeIdChanging(global::System.Int32 value);
        partial void OnPartyTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ADDRESS_REFERENCE_PARTY", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("FinancialModel.FK_ADDRESS_REFERENCE_PARTY", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("FinancialModel.FK_ADDRESS_REFERENCE_PARTY", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ORGANIZA_REFERENCE_PARTY", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("FinancialModel.FK_ORGANIZA_REFERENCE_PARTY", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTY_REFERENCE_PARTYTYP", "PartyType")]
        public PartyType PartyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyType>("FinancialModel.FK_PARTY_REFERENCE_PARTYTYP", "PartyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyType>("FinancialModel.FK_PARTY_REFERENCE_PARTYTYP", "PartyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyType> PartyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyType>("FinancialModel.FK_PARTY_REFERENCE_PARTYTYP", "PartyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyType>("FinancialModel.FK_PARTY_REFERENCE_PARTYTYP", "PartyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_PARTY", "PartyRole")]
        public EntityCollection<PartyRole> PartyRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartyRole>("FinancialModel.FK_PARTYROL_REFERENCE_PARTY", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartyRole>("FinancialModel.FK_PARTYROL_REFERENCE_PARTY", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_PARTY", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PartyRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyRelationship object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstPartyRoleId">Initial value of the FirstPartyRoleId property.</param>
        /// <param name="secondPartyRoleId">Initial value of the SecondPartyRoleId property.</param>
        /// <param name="partyRelTypeId">Initial value of the PartyRelTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static PartyRelationship CreatePartyRelationship(global::System.Int32 id, global::System.Int32 firstPartyRoleId, global::System.Int32 secondPartyRoleId, global::System.Int32 partyRelTypeId, global::System.DateTime effectiveDate)
        {
            PartyRelationship partyRelationship = new PartyRelationship();
            partyRelationship.Id = id;
            partyRelationship.FirstPartyRoleId = firstPartyRoleId;
            partyRelationship.SecondPartyRoleId = secondPartyRoleId;
            partyRelationship.PartyRelTypeId = partyRelTypeId;
            partyRelationship.EffectiveDate = effectiveDate;
            return partyRelationship;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstPartyRoleId
        {
            get
            {
                return _FirstPartyRoleId;
            }
            set
            {
                OnFirstPartyRoleIdChanging(value);
                ReportPropertyChanging("FirstPartyRoleId");
                _FirstPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstPartyRoleId");
                OnFirstPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _FirstPartyRoleId;
        partial void OnFirstPartyRoleIdChanging(global::System.Int32 value);
        partial void OnFirstPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecondPartyRoleId
        {
            get
            {
                return _SecondPartyRoleId;
            }
            set
            {
                OnSecondPartyRoleIdChanging(value);
                ReportPropertyChanging("SecondPartyRoleId");
                _SecondPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondPartyRoleId");
                OnSecondPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _SecondPartyRoleId;
        partial void OnSecondPartyRoleIdChanging(global::System.Int32 value);
        partial void OnSecondPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRelTypeId
        {
            get
            {
                return _PartyRelTypeId;
            }
            set
            {
                OnPartyRelTypeIdChanging(value);
                ReportPropertyChanging("PartyRelTypeId");
                _PartyRelTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRelTypeId");
                OnPartyRelTypeIdChanged();
            }
        }
        private global::System.Int32 _PartyRelTypeId;
        partial void OnPartyRelTypeIdChanging(global::System.Int32 value);
        partial void OnPartyRelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_EMPLOYME_REFERENCE_PARTYREL", "Employment")]
        public Employment Employment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employment>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "Employment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employment>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "Employment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employment> EmploymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employment>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "Employment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employment>("FinancialModel.FK_EMPLOYME_REFERENCE_PARTYREL", "Employment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelType")]
        public PartyRelType PartyRelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRelType>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRelType>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRelType> PartyRelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRelType>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRelType>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYREL_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRole1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PartyRelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyRelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyRelType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PartyRelType CreatePartyRelType(global::System.Int32 id, global::System.String name)
        {
            PartyRelType partyRelType = new PartyRelType();
            partyRelType.Id = id;
            partyRelType.Name = name;
            return partyRelType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelationship")]
        public EntityCollection<PartyRelationship> PartyRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartyRelationship>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartyRelationship>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYREL", "PartyRelationship", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PartyRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="roleTypeId">Initial value of the RoleTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static PartyRole CreatePartyRole(global::System.Int32 id, global::System.Int32 partyId, global::System.Int32 roleTypeId, global::System.DateTime effectiveDate)
        {
            PartyRole partyRole = new PartyRole();
            partyRole.Id = id;
            partyRole.PartyId = partyId;
            partyRole.RoleTypeId = roleTypeId;
            partyRole.EffectiveDate = effectiveDate;
            return partyRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleTypeId
        {
            get
            {
                return _RoleTypeId;
            }
            set
            {
                OnRoleTypeIdChanging(value);
                ReportPropertyChanging("RoleTypeId");
                _RoleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleTypeId");
                OnRoleTypeIdChanged();
            }
        }
        private global::System.Int32 _RoleTypeId;
        partial void OnRoleTypeIdChanging(global::System.Int32 value);
        partial void OnRoleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_AGREEMEN_REFERENCE_PARTYROL", "AgreementRole")]
        public EntityCollection<AgreementRole> AgreementRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AgreementRole>("FinancialModel.FK_AGREEMEN_REFERENCE_PARTYROL", "AgreementRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AgreementRole>("FinancialModel.FK_AGREEMEN_REFERENCE_PARTYROL", "AgreementRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETAPP_REFERENCE_PARTYROL", "AssetAppraisal")]
        public EntityCollection<AssetAppraisal> AssetAppraisals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssetAppraisal>("FinancialModel.FK_ASSETAPP_REFERENCE_PARTYROL", "AssetAppraisal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssetAppraisal>("FinancialModel.FK_ASSETAPP_REFERENCE_PARTYROL", "AssetAppraisal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ASSETROL_REFERENCE_PARTYROL", "AssetRole")]
        public EntityCollection<AssetRole> AssetRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssetRole>("FinancialModel.FK_ASSETROL_REFERENCE_PARTYROL", "AssetRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssetRole>("FinancialModel.FK_ASSETROL_REFERENCE_PARTYROL", "AssetRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANK_REFERENCE_PARTYROL", "Bank")]
        public Bank Bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "Bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "Bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bank> BankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bank>("FinancialModel.FK_BANK_REFERENCE_PARTYROL", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_BANKACCO_REFERENCE_PARTYROL", "BankAccount")]
        public EntityCollection<BankAccount> BankAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_PARTYROL", "BankAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BankAccount>("FinancialModel.FK_BANKACCO_REFERENCE_PARTYROL", "BankAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CashOnVault_PartyRole", "CashOnVault")]
        public EntityCollection<CashOnVault> CashOnVaults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashOnVault>("FinancialModel.FK_CashOnVault_PartyRole", "CashOnVault");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashOnVault>("FinancialModel.FK_CashOnVault_PartyRole", "CashOnVault", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CHEQUE_REFERENCE_PARTYROL", "Cheque")]
        public EntityCollection<Cheque> Cheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cheque>("FinancialModel.FK_CHEQUE_REFERENCE_PARTYROL", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cheque>("FinancialModel.FK_CHEQUE_REFERENCE_PARTYROL", "Cheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_COVDetails_PartyRole", "COVTransaction")]
        public EntityCollection<COVTransaction> COVTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<COVTransaction>("FinancialModel.FK_COVDetails_PartyRole", "COVTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<COVTransaction>("FinancialModel.FK_COVDetails_PartyRole", "COVTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_PARTYROL", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FinancialModel.FK_CUSTOMER_REFERENCE_PARTYROL", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_EMPLOYEE_REFERENCE_PARTYROL", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("FinancialModel.FK_EMPLOYEE_REFERENCE_PARTYROL", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINANCIA_REFERENCE_PARTYROL", "FinancialAccountRole")]
        public EntityCollection<FinancialAccountRole> FinancialAccountRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialAccountRole>("FinancialModel.FK_FINANCIA_REFERENCE_PARTYROL", "FinancialAccountRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialAccountRole>("FinancialModel.FK_FINANCIA_REFERENCE_PARTYROL", "FinancialAccountRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_PartyRole", "ForeignExchange")]
        public EntityCollection<ForeignExchange> ForeignExchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_PartyRole", "ForeignExchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_PartyRole", "ForeignExchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchange_PartyRole1", "ForeignExchange")]
        public EntityCollection<ForeignExchange> ForeignExchanges1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_PartyRole1", "ForeignExchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForeignExchange>("FinancialModel.FK_ForeignExchange_PartyRole1", "ForeignExchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForExCheque_PartyRole", "ForExCheque")]
        public EntityCollection<ForExCheque> ForExCheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForExCheque>("FinancialModel.FK_ForExCheque_PartyRole", "ForExCheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForExCheque>("FinancialModel.FK_ForExCheque_PartyRole", "ForExCheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_PARTYROL", "LoanApplicationRole")]
        public EntityCollection<LoanApplicationRole> LoanApplicationRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplicationRole>("FinancialModel.FK_LOANAPPL_REFERENCE_PARTYROL", "LoanApplicationRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplicationRole>("FinancialModel.FK_LOANAPPL_REFERENCE_PARTYROL", "LoanApplicationRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_PARTYROL2", "LoanModification")]
        public EntityCollection<LoanModification> LoanModifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL2", "LoanModification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModification>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL2", "LoanModification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANMODI_REFERENCE_PARTYROL", "LoanModificationStatus")]
        public EntityCollection<LoanModificationStatu> LoanModificationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanModificationStatu>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL", "LoanModificationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanModificationStatu>("FinancialModel.FK_LOANMODI_REFERENCE_PARTYROL", "LoanModificationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_PARTY", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_PARTYROL_REFERENCE_PARTY", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_PARTYROL_REFERENCE_PARTY", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_PARTYROL_REFERENCE_PARTY", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("FinancialModel.FK_PARTYROL_REFERENCE_PARTY", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRelationship")]
        public EntityCollection<PartyRelationship> PartyRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartyRelationship>("FinancialModel.FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartyRelationship>("FinancialModel.FK_PARTY_RE_REFERENCE_PARTY_RO2", "PartyRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYREL_REFERENCE_PARTYROL", "PartyRelationship")]
        public EntityCollection<PartyRelationship> PartyRelationships1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartyRelationship>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYROL", "PartyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartyRelationship>("FinancialModel.FK_PARTYREL_REFERENCE_PARTYROL", "PartyRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_PARTYROL", "PartyRoleType")]
        public PartyRoleType PartyRoleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_PARTYROL", "PartyRoleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_PARTYROL", "PartyRoleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRoleType> PartyRoleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_PARTYROL", "PartyRoleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_PARTYROL", "PartyRoleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PARTY_RO2", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PARTY_RO2", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PARTY_RO2", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PARTYROL", "Payment")]
        public EntityCollection<Payment> Payments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PARTYROL", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PARTYROL", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_PARTYROL", "ReceivableAdjustment")]
        public EntityCollection<ReceivableAdjustment> ReceivableAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceivableAdjustment>("FinancialModel.FK_RECEIVAB_REFERENCE_PARTYROL", "ReceivableAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceivableAdjustment>("FinancialModel.FK_RECEIVAB_REFERENCE_PARTYROL", "ReceivableAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TAXPAYER_REFERENCE_PARTYROL", "Taxpayer")]
        public Taxpayer Taxpayer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxpayer>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "Taxpayer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxpayer>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "Taxpayer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Taxpayer> TaxpayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxpayer>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "Taxpayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Taxpayer>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "Taxpayer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PartyRoleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyRoleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyRoleType object.
        /// </summary>
        /// <param name="roleTypeId">Initial value of the RoleTypeId property.</param>
        public static PartyRoleType CreatePartyRoleType(global::System.Int32 roleTypeId)
        {
            PartyRoleType partyRoleType = new PartyRoleType();
            partyRoleType.RoleTypeId = roleTypeId;
            return partyRoleType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleTypeId
        {
            get
            {
                return _RoleTypeId;
            }
            set
            {
                if (_RoleTypeId != value)
                {
                    OnRoleTypeIdChanging(value);
                    ReportPropertyChanging("RoleTypeId");
                    _RoleTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleTypeId");
                    OnRoleTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleTypeId;
        partial void OnRoleTypeIdChanging(global::System.Int32 value);
        partial void OnRoleTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_PARTYROL", "PartyRole")]
        public EntityCollection<PartyRole> PartyRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartyRole>("FinancialModel.FK_PARTYROL_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartyRole>("FinancialModel.FK_PARTYROL_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_ROLETYPE", "RoleType")]
        public RoleType RoleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "RoleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "RoleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoleType> RoleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "RoleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "RoleType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PartyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartyType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PartyType CreatePartyType(global::System.Int32 id, global::System.String name)
        {
            PartyType partyType = new PartyType();
            partyType.Id = id;
            partyType.Name = name;
            return partyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTY_REFERENCE_PARTYTYP", "Party")]
        public EntityCollection<Party> Parties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Party>("FinancialModel.FK_PARTY_REFERENCE_PARTYTYP", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Party>("FinancialModel.FK_PARTY_REFERENCE_PARTYTYP", "Party", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PastDueInterestRateViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PastDueInterestRateViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PastDueInterestRateViewList object.
        /// </summary>
        /// <param name="description">Initial value of the Description property.</param>
        public static PastDueInterestRateViewList CreatePastDueInterestRateViewList(global::System.String description)
        {
            PastDueInterestRateViewList pastDueInterestRateViewList = new PastDueInterestRateViewList();
            pastDueInterestRateViewList.Description = description;
            return pastDueInterestRateViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PastDueRate
        {
            get
            {
                return _PastDueRate;
            }
            set
            {
                OnPastDueRateChanging(value);
                ReportPropertyChanging("PastDueRate");
                _PastDueRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PastDueRate");
                OnPastDueRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _PastDueRate;
        partial void OnPastDueRateChanging(Nullable<global::System.Decimal> value);
        partial void OnPastDueRateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paymentMethodTypeId">Initial value of the PaymentMethodTypeId property.</param>
        /// <param name="processedByPartyRoleId">Initial value of the ProcessedByPartyRoleId property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="paymentTypeId">Initial value of the PaymentTypeId property.</param>
        /// <param name="specificPaymentTypeId">Initial value of the SpecificPaymentTypeId property.</param>
        public static Payment CreatePayment(global::System.Int32 id, global::System.Int32 paymentMethodTypeId, global::System.Int32 processedByPartyRoleId, global::System.DateTime transactionDate, global::System.DateTime entryDate, global::System.Decimal totalAmount, global::System.Int32 paymentTypeId, global::System.Int32 specificPaymentTypeId)
        {
            Payment payment = new Payment();
            payment.Id = id;
            payment.PaymentMethodTypeId = paymentMethodTypeId;
            payment.ProcessedByPartyRoleId = processedByPartyRoleId;
            payment.TransactionDate = transactionDate;
            payment.EntryDate = entryDate;
            payment.TotalAmount = totalAmount;
            payment.PaymentTypeId = paymentTypeId;
            payment.SpecificPaymentTypeId = specificPaymentTypeId;
            return payment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentMethodTypeId
        {
            get
            {
                return _PaymentMethodTypeId;
            }
            set
            {
                OnPaymentMethodTypeIdChanging(value);
                ReportPropertyChanging("PaymentMethodTypeId");
                _PaymentMethodTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentMethodTypeId");
                OnPaymentMethodTypeIdChanged();
            }
        }
        private global::System.Int32 _PaymentMethodTypeId;
        partial void OnPaymentMethodTypeIdChanging(global::System.Int32 value);
        partial void OnPaymentMethodTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentPaymentId
        {
            get
            {
                return _ParentPaymentId;
            }
            set
            {
                OnParentPaymentIdChanging(value);
                ReportPropertyChanging("ParentPaymentId");
                _ParentPaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentPaymentId");
                OnParentPaymentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentPaymentId;
        partial void OnParentPaymentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessedByPartyRoleId
        {
            get
            {
                return _ProcessedByPartyRoleId;
            }
            set
            {
                OnProcessedByPartyRoleIdChanging(value);
                ReportPropertyChanging("ProcessedByPartyRoleId");
                _ProcessedByPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedByPartyRoleId");
                OnProcessedByPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _ProcessedByPartyRoleId;
        partial void OnProcessedByPartyRoleIdChanging(global::System.Int32 value);
        partial void OnProcessedByPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProcessedToPartyRoleId
        {
            get
            {
                return _ProcessedToPartyRoleId;
            }
            set
            {
                OnProcessedToPartyRoleIdChanging(value);
                ReportPropertyChanging("ProcessedToPartyRoleId");
                _ProcessedToPartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedToPartyRoleId");
                OnProcessedToPartyRoleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProcessedToPartyRoleId;
        partial void OnProcessedToPartyRoleIdChanging(Nullable<global::System.Int32> value);
        partial void OnProcessedToPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentReferenceNumber
        {
            get
            {
                return _PaymentReferenceNumber;
            }
            set
            {
                OnPaymentReferenceNumberChanging(value);
                ReportPropertyChanging("PaymentReferenceNumber");
                _PaymentReferenceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentReferenceNumber");
                OnPaymentReferenceNumberChanged();
            }
        }
        private global::System.String _PaymentReferenceNumber;
        partial void OnPaymentReferenceNumberChanging(global::System.String value);
        partial void OnPaymentReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Decimal _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Decimal value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentTypeId
        {
            get
            {
                return _PaymentTypeId;
            }
            set
            {
                OnPaymentTypeIdChanging(value);
                ReportPropertyChanging("PaymentTypeId");
                _PaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeId");
                OnPaymentTypeIdChanged();
            }
        }
        private global::System.Int32 _PaymentTypeId;
        partial void OnPaymentTypeIdChanging(global::System.Int32 value);
        partial void OnPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecificPaymentTypeId
        {
            get
            {
                return _SpecificPaymentTypeId;
            }
            set
            {
                OnSpecificPaymentTypeIdChanging(value);
                ReportPropertyChanging("SpecificPaymentTypeId");
                _SpecificPaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecificPaymentTypeId");
                OnSpecificPaymentTypeIdChanged();
            }
        }
        private global::System.Int32 _SpecificPaymentTypeId;
        partial void OnSpecificPaymentTypeIdChanging(global::System.Int32 value);
        partial void OnSpecificPaymentTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Cheque_Payment", "Cheque")]
        public EntityCollection<Cheque> Cheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cheque>("FinancialModel.FK_Cheque_Payment", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cheque>("FinancialModel.FK_Cheque_Payment", "Cheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ControlNumbers_Payment", "ControlNumbers")]
        public EntityCollection<ControlNumber> ControlNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ControlNumber>("FinancialModel.FK_ControlNumbers_Payment", "ControlNumbers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ControlNumber>("FinancialModel.FK_ControlNumbers_Payment", "ControlNumbers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DISBURSE_REFERENCE_PAYMENT", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("FinancialModel.FK_DISBURSE_REFERENCE_PAYMENT", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FeePayment_Payment", "FeePayment")]
        public EntityCollection<FeePayment> FeePayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeePayment>("FinancialModel.FK_FeePayment_Payment", "FeePayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeePayment>("FinancialModel.FK_FeePayment_Payment", "FeePayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_PAYMENT", "FinAcctTrans")]
        public EntityCollection<FinAcctTran> FinAcctTrans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_PAYMENT", "FinAcctTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTran>("FinancialModel.FK_FINACCTT_REFERENCE_PAYMENT", "FinAcctTrans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FormDetails_Payment", "FormDetails")]
        public EntityCollection<FormDetail> FormDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormDetail>("FinancialModel.FK_FormDetails_Payment", "FormDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormDetail>("FinancialModel.FK_FormDetails_Payment", "FormDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LoanPayment_Payment", "LoanPayment")]
        public LoanPayment LoanPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanPayment>("FinancialModel.FK_LoanPayment_Payment", "LoanPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanPayment>("FinancialModel.FK_LoanPayment_Payment", "LoanPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanPayment> LoanPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanPayment>("FinancialModel.FK_LoanPayment_Payment", "LoanPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanPayment>("FinancialModel.FK_LoanPayment_Payment", "LoanPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PARTY_RO2", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTY_RO2", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTY_RO2", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTY_RO2", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTY_RO2", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRole1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_PAYMENT_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENT", "Payment1")]
        public EntityCollection<Payment> Payment1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENT", "Payment1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENT", "Payment1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENT", "Payment")]
        public Payment Payment2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENT", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENT", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> Payment2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENT", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENT", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENTM", "PaymentMethodType")]
        public PaymentMethodType PaymentMethodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethodType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTM", "PaymentMethodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethodType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTM", "PaymentMethodType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethodType> PaymentMethodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethodType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTM", "PaymentMethodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethodType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTM", "PaymentMethodType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENTT", "PaymentType")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTT", "PaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTT", "PaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTT", "PaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTT", "PaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Payment_SpecificPaymentType", "SpecificPaymentType")]
        public SpecificPaymentType SpecificPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecificPaymentType>("FinancialModel.FK_Payment_SpecificPaymentType", "SpecificPaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecificPaymentType>("FinancialModel.FK_Payment_SpecificPaymentType", "SpecificPaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpecificPaymentType> SpecificPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpecificPaymentType>("FinancialModel.FK_Payment_SpecificPaymentType", "SpecificPaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpecificPaymentType>("FinancialModel.FK_Payment_SpecificPaymentType", "SpecificPaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_PAYMENT", "PaymentApplication")]
        public EntityCollection<PaymentApplication> PaymentApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentApplication>("FinancialModel.FK_PAYMENTA_REFERENCE_PAYMENT", "PaymentApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentApplication>("FinancialModel.FK_PAYMENTA_REFERENCE_PAYMENT", "PaymentApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PaymentCurrencyAssoc_Payment", "PaymentCurrencyAssoc")]
        public EntityCollection<PaymentCurrencyAssoc> PaymentCurrencyAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentCurrencyAssoc>("FinancialModel.FK_PaymentCurrencyAssoc_Payment", "PaymentCurrencyAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentCurrencyAssoc>("FinancialModel.FK_PaymentCurrencyAssoc_Payment", "PaymentCurrencyAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ReceiptPaymentAssoc_Payment", "ReceiptPaymentAssoc")]
        public EntityCollection<ReceiptPaymentAssoc> ReceiptPaymentAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptPaymentAssoc>("FinancialModel.FK_ReceiptPaymentAssoc_Payment", "ReceiptPaymentAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptPaymentAssoc>("FinancialModel.FK_ReceiptPaymentAssoc_Payment", "ReceiptPaymentAssoc", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PaymentApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentApplication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="amountApplied">Initial value of the AmountApplied property.</param>
        public static PaymentApplication CreatePaymentApplication(global::System.Int32 id, global::System.Int32 paymentId, global::System.Decimal amountApplied)
        {
            PaymentApplication paymentApplication = new PaymentApplication();
            paymentApplication.Id = id;
            paymentApplication.PaymentId = paymentId;
            paymentApplication.AmountApplied = amountApplied;
            return paymentApplication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReceivableId
        {
            get
            {
                return _ReceivableId;
            }
            set
            {
                OnReceivableIdChanging(value);
                ReportPropertyChanging("ReceivableId");
                _ReceivableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivableId");
                OnReceivableIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReceivableId;
        partial void OnReceivableIdChanging(Nullable<global::System.Int32> value);
        partial void OnReceivableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoanDisbursementVoucherId
        {
            get
            {
                return _LoanDisbursementVoucherId;
            }
            set
            {
                OnLoanDisbursementVoucherIdChanging(value);
                ReportPropertyChanging("LoanDisbursementVoucherId");
                _LoanDisbursementVoucherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanDisbursementVoucherId");
                OnLoanDisbursementVoucherIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LoanDisbursementVoucherId;
        partial void OnLoanDisbursementVoucherIdChanging(Nullable<global::System.Int32> value);
        partial void OnLoanDisbursementVoucherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountApplied
        {
            get
            {
                return _AmountApplied;
            }
            set
            {
                OnAmountAppliedChanging(value);
                ReportPropertyChanging("AmountApplied");
                _AmountApplied = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountApplied");
                OnAmountAppliedChanged();
            }
        }
        private global::System.Decimal _AmountApplied;
        partial void OnAmountAppliedChanging(global::System.Decimal value);
        partial void OnAmountAppliedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PaymentApplication_LoanAccount", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_PaymentApplication_LoanAccount", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_PaymentApplication_LoanAccount", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_PaymentApplication_LoanAccount", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_PaymentApplication_LoanAccount", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_LOANDISB", "LoanDisbursementVcr")]
        public LoanDisbursementVcr LoanDisbursementVcr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_PAYMENTA_REFERENCE_LOANDISB", "LoanDisbursementVcr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_PAYMENTA_REFERENCE_LOANDISB", "LoanDisbursementVcr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanDisbursementVcr> LoanDisbursementVcrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_PAYMENTA_REFERENCE_LOANDISB", "LoanDisbursementVcr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanDisbursementVcr>("FinancialModel.FK_PAYMENTA_REFERENCE_LOANDISB", "LoanDisbursementVcr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_PAYMENT", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PAYMENTA_REFERENCE_PAYMENT", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PAYMENTA_REFERENCE_PAYMENT", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PAYMENTA_REFERENCE_PAYMENT", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_PAYMENTA_REFERENCE_PAYMENT", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_RECEIVAB", "Receivable")]
        public Receivable Receivable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_PAYMENTA_REFERENCE_RECEIVAB", "Receivable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_PAYMENTA_REFERENCE_RECEIVAB", "Receivable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receivable> ReceivableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_PAYMENTA_REFERENCE_RECEIVAB", "Receivable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receivable>("FinancialModel.FK_PAYMENTA_REFERENCE_RECEIVAB", "Receivable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PaymentCurrencyAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentCurrencyAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentCurrencyAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        public static PaymentCurrencyAssoc CreatePaymentCurrencyAssoc(global::System.Int32 id, global::System.Int32 paymentId, global::System.Int32 currencyId)
        {
            PaymentCurrencyAssoc paymentCurrencyAssoc = new PaymentCurrencyAssoc();
            paymentCurrencyAssoc.Id = id;
            paymentCurrencyAssoc.PaymentId = paymentId;
            paymentCurrencyAssoc.CurrencyId = currencyId;
            return paymentCurrencyAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.Int32 _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Int32 value);
        partial void OnCurrencyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PaymentCurrencyAssoc_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_PaymentCurrencyAssoc_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_PaymentCurrencyAssoc_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("FinancialModel.FK_PaymentCurrencyAssoc_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("FinancialModel.FK_PaymentCurrencyAssoc_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PaymentCurrencyAssoc_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PaymentCurrencyAssoc_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PaymentCurrencyAssoc_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_PaymentCurrencyAssoc_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_PaymentCurrencyAssoc_Payment", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PaymentHistoryViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentHistoryViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentHistoryViewList object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        public static PaymentHistoryViewList CreatePaymentHistoryViewList(global::System.DateTime date, global::System.Decimal amount, global::System.Int32 financialAccountId)
        {
            PaymentHistoryViewList paymentHistoryViewList = new PaymentHistoryViewList();
            paymentHistoryViewList.Date = date;
            paymentHistoryViewList.Amount = amount;
            paymentHistoryViewList.FinancialAccountId = financialAccountId;
            return paymentHistoryViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentID
        {
            get
            {
                return _PaymentID;
            }
            set
            {
                OnPaymentIDChanging(value);
                ReportPropertyChanging("PaymentID");
                _PaymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentID");
                OnPaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentID;
        partial void OnPaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectedBy
        {
            get
            {
                return _CollectedBy;
            }
            set
            {
                OnCollectedByChanging(value);
                ReportPropertyChanging("CollectedBy");
                _CollectedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectedBy");
                OnCollectedByChanged();
            }
        }
        private global::System.String _CollectedBy;
        partial void OnCollectedByChanging(global::System.String value);
        partial void OnCollectedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                if (_FinancialAccountId != value)
                {
                    OnFinancialAccountIdChanging(value);
                    ReportPropertyChanging("FinancialAccountId");
                    _FinancialAccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinancialAccountId");
                    OnFinancialAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PaymentMethodType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMethodType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMethodType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PaymentMethodType CreatePaymentMethodType(global::System.Int32 id, global::System.String name)
        {
            PaymentMethodType paymentMethodType = new PaymentMethodType();
            paymentMethodType.Id = id;
            paymentMethodType.Name = name;
            return paymentMethodType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ForeignExchangeAmount_PaymentMethodType", "ForExDetail")]
        public EntityCollection<ForExDetail> ForExDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForExDetail>("FinancialModel.FK_ForeignExchangeAmount_PaymentMethodType", "ForExDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForExDetail>("FinancialModel.FK_ForeignExchangeAmount_PaymentMethodType", "ForExDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENTM", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTM", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTM", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PaymentType CreatePaymentType(global::System.Int32 id)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.Id = id;
            return paymentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENT_REFERENCE_PAYMENTT", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTT", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("FinancialModel.FK_PAYMENT_REFERENCE_PAYMENTT", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static Person CreatePerson(global::System.Int32 partyId)
        {
            Person person = new Person();
            person.PartyId = partyId;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenderTypeId
        {
            get
            {
                return _GenderTypeId;
            }
            set
            {
                OnGenderTypeIdChanging(value);
                ReportPropertyChanging("GenderTypeId");
                _GenderTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderTypeId");
                OnGenderTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GenderTypeId;
        partial void OnGenderTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnGenderTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NationalityTypeId
        {
            get
            {
                return _NationalityTypeId;
            }
            set
            {
                OnNationalityTypeIdChanging(value);
                ReportPropertyChanging("NationalityTypeId");
                _NationalityTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NationalityTypeId");
                OnNationalityTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NationalityTypeId;
        partial void OnNationalityTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNationalityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducAttainmentTypeId
        {
            get
            {
                return _EducAttainmentTypeId;
            }
            set
            {
                OnEducAttainmentTypeIdChanging(value);
                ReportPropertyChanging("EducAttainmentTypeId");
                _EducAttainmentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducAttainmentTypeId");
                OnEducAttainmentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducAttainmentTypeId;
        partial void OnEducAttainmentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducAttainmentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthdate;
        partial void OnBirthdateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageFilename
        {
            get
            {
                return _ImageFilename;
            }
            set
            {
                OnImageFilenameChanging(value);
                ReportPropertyChanging("ImageFilename");
                _ImageFilename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageFilename");
                OnImageFilenameChanged();
            }
        }
        private global::System.String _ImageFilename;
        partial void OnImageFilenameChanging(global::System.String value);
        partial void OnImageFilenameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_EDUCATTA", "EducAttainmentType")]
        public EducAttainmentType EducAttainmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducAttainmentType>("FinancialModel.FK_PERSON_REFERENCE_EDUCATTA", "EducAttainmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducAttainmentType>("FinancialModel.FK_PERSON_REFERENCE_EDUCATTA", "EducAttainmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducAttainmentType> EducAttainmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducAttainmentType>("FinancialModel.FK_PERSON_REFERENCE_EDUCATTA", "EducAttainmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducAttainmentType>("FinancialModel.FK_PERSON_REFERENCE_EDUCATTA", "EducAttainmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_GENDERTY", "GenderType")]
        public GenderType GenderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenderType>("FinancialModel.FK_PERSON_REFERENCE_GENDERTY", "GenderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenderType>("FinancialModel.FK_PERSON_REFERENCE_GENDERTY", "GenderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GenderType> GenderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenderType>("FinancialModel.FK_PERSON_REFERENCE_GENDERTY", "GenderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GenderType>("FinancialModel.FK_PERSON_REFERENCE_GENDERTY", "GenderType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_HOMEOWNE_REFERENCE_PERSON", "HomeOwnership")]
        public EntityCollection<HomeOwnership> HomeOwnerships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HomeOwnership>("FinancialModel.FK_HOMEOWNE_REFERENCE_PERSON", "HomeOwnership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HomeOwnership>("FinancialModel.FK_HOMEOWNE_REFERENCE_PERSON", "HomeOwnership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_MARITALS_REFERENCE_PERSON", "MaritalStatus")]
        public EntityCollection<MaritalStatu> MaritalStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaritalStatu>("FinancialModel.FK_MARITALS_REFERENCE_PERSON", "MaritalStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaritalStatu>("FinancialModel.FK_MARITALS_REFERENCE_PERSON", "MaritalStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_NATIONAL", "NationalityType")]
        public NationalityType NationalityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NationalityType>("FinancialModel.FK_PERSON_REFERENCE_NATIONAL", "NationalityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NationalityType>("FinancialModel.FK_PERSON_REFERENCE_NATIONAL", "NationalityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NationalityType> NationalityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NationalityType>("FinancialModel.FK_PERSON_REFERENCE_NATIONAL", "NationalityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NationalityType>("FinancialModel.FK_PERSON_REFERENCE_NATIONAL", "NationalityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSON_REFERENCE_PARTY", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("FinancialModel.FK_PERSON_REFERENCE_PARTY", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONID_REFERENCE_PERSON", "PersonIdentification")]
        public EntityCollection<PersonIdentification> PersonIdentifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonIdentification>("FinancialModel.FK_PERSONID_REFERENCE_PERSON", "PersonIdentification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonIdentification>("FinancialModel.FK_PERSONID_REFERENCE_PERSON", "PersonIdentification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONNA_REFERENCE_PERSON", "PersonName")]
        public EntityCollection<PersonName> PersonNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonName>("FinancialModel.FK_PERSONNA_REFERENCE_PERSON", "PersonName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonName>("FinancialModel.FK_PERSONNA_REFERENCE_PERSON", "PersonName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SPECIMEN_REFERENCE_PERSON", "SpecimenSignature")]
        public EntityCollection<SpecimenSignature> SpecimenSignatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecimenSignature>("FinancialModel.FK_SPECIMEN_REFERENCE_PERSON", "SpecimenSignature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecimenSignature>("FinancialModel.FK_SPECIMEN_REFERENCE_PERSON", "SpecimenSignature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_USERACCO_REFERENCE_PERSON", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("FinancialModel.FK_USERACCO_REFERENCE_PERSON", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("FinancialModel.FK_USERACCO_REFERENCE_PERSON", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PersonIdentification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonIdentification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonIdentification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="identificationTypeId">Initial value of the IdentificationTypeId property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="idNumber">Initial value of the IdNumber property.</param>
        public static PersonIdentification CreatePersonIdentification(global::System.Int32 id, global::System.Int32 identificationTypeId, global::System.Int32 partyId, global::System.String idNumber)
        {
            PersonIdentification personIdentification = new PersonIdentification();
            personIdentification.Id = id;
            personIdentification.IdentificationTypeId = identificationTypeId;
            personIdentification.PartyId = partyId;
            personIdentification.IdNumber = idNumber;
            return personIdentification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdentificationTypeId
        {
            get
            {
                return _IdentificationTypeId;
            }
            set
            {
                OnIdentificationTypeIdChanging(value);
                ReportPropertyChanging("IdentificationTypeId");
                _IdentificationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentificationTypeId");
                OnIdentificationTypeIdChanged();
            }
        }
        private global::System.Int32 _IdentificationTypeId;
        partial void OnIdentificationTypeIdChanging(global::System.Int32 value);
        partial void OnIdentificationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdNumber
        {
            get
            {
                return _IdNumber;
            }
            set
            {
                OnIdNumberChanging(value);
                ReportPropertyChanging("IdNumber");
                _IdNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IdNumber");
                OnIdNumberChanged();
            }
        }
        private global::System.String _IdNumber;
        partial void OnIdNumberChanging(global::System.String value);
        partial void OnIdNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONID_REFERENCE_IDENTIFI", "IdentificationType")]
        public IdentificationType IdentificationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdentificationType>("FinancialModel.FK_PERSONID_REFERENCE_IDENTIFI", "IdentificationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdentificationType>("FinancialModel.FK_PERSONID_REFERENCE_IDENTIFI", "IdentificationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IdentificationType> IdentificationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdentificationType>("FinancialModel.FK_PERSONID_REFERENCE_IDENTIFI", "IdentificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IdentificationType>("FinancialModel.FK_PERSONID_REFERENCE_IDENTIFI", "IdentificationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONID_REFERENCE_PERSON", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSONID_REFERENCE_PERSON", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSONID_REFERENCE_PERSON", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSONID_REFERENCE_PERSON", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_PERSONID_REFERENCE_PERSON", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PersonName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="personNameTypeId">Initial value of the PersonNameTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static PersonName CreatePersonName(global::System.Int32 id, global::System.Int32 partyId, global::System.Int32 personNameTypeId, global::System.String name, global::System.DateTime effectiveDate)
        {
            PersonName personName = new PersonName();
            personName.Id = id;
            personName.PartyId = partyId;
            personName.PersonNameTypeId = personNameTypeId;
            personName.Name = name;
            personName.EffectiveDate = effectiveDate;
            return personName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonNameTypeId
        {
            get
            {
                return _PersonNameTypeId;
            }
            set
            {
                OnPersonNameTypeIdChanging(value);
                ReportPropertyChanging("PersonNameTypeId");
                _PersonNameTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonNameTypeId");
                OnPersonNameTypeIdChanged();
            }
        }
        private global::System.Int32 _PersonNameTypeId;
        partial void OnPersonNameTypeIdChanging(global::System.Int32 value);
        partial void OnPersonNameTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONNA_REFERENCE_PERSON", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSONNA_REFERENCE_PERSON", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSONNA_REFERENCE_PERSON", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_PERSONNA_REFERENCE_PERSON", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_PERSONNA_REFERENCE_PERSON", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONNA_REFERENCE_PERSONNA", "PersonNameType")]
        public PersonNameType PersonNameType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonNameType>("FinancialModel.FK_PERSONNA_REFERENCE_PERSONNA", "PersonNameType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonNameType>("FinancialModel.FK_PERSONNA_REFERENCE_PERSONNA", "PersonNameType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonNameType> PersonNameTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonNameType>("FinancialModel.FK_PERSONNA_REFERENCE_PERSONNA", "PersonNameType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonNameType>("FinancialModel.FK_PERSONNA_REFERENCE_PERSONNA", "PersonNameType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PersonNameType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonNameType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonNameType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PersonNameType CreatePersonNameType(global::System.Int32 id, global::System.String name)
        {
            PersonNameType personNameType = new PersonNameType();
            personNameType.Id = id;
            personNameType.Name = name;
            return personNameType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PERSONNA_REFERENCE_PERSONNA", "PersonName")]
        public EntityCollection<PersonName> PersonNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonName>("FinancialModel.FK_PERSONNA_REFERENCE_PERSONNA", "PersonName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonName>("FinancialModel.FK_PERSONNA_REFERENCE_PERSONNA", "PersonName", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PettyCashLoanApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PettyCashLoanApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PettyCashLoanApplication object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="uomId">Initial value of the UomId property.</param>
        /// <param name="loanTermLength">Initial value of the LoanTermLength property.</param>
        /// <param name="loanAmount">Initial value of the LoanAmount property.</param>
        /// <param name="isInterestProductFeatureInd">Initial value of the IsInterestProductFeatureInd property.</param>
        /// <param name="isPastDueProductFeatureInd">Initial value of the IsPastDueProductFeatureInd property.</param>
        public static PettyCashLoanApplication CreatePettyCashLoanApplication(global::System.Int32 applicationId, global::System.Int32 uomId, global::System.Int32 loanTermLength, global::System.Decimal loanAmount, global::System.Boolean isInterestProductFeatureInd, global::System.Boolean isPastDueProductFeatureInd)
        {
            PettyCashLoanApplication pettyCashLoanApplication = new PettyCashLoanApplication();
            pettyCashLoanApplication.ApplicationId = applicationId;
            pettyCashLoanApplication.UomId = uomId;
            pettyCashLoanApplication.LoanTermLength = loanTermLength;
            pettyCashLoanApplication.LoanAmount = loanAmount;
            pettyCashLoanApplication.IsInterestProductFeatureInd = isInterestProductFeatureInd;
            pettyCashLoanApplication.IsPastDueProductFeatureInd = isPastDueProductFeatureInd;
            return pettyCashLoanApplication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UomId
        {
            get
            {
                return _UomId;
            }
            set
            {
                OnUomIdChanging(value);
                ReportPropertyChanging("UomId");
                _UomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UomId");
                OnUomIdChanged();
            }
        }
        private global::System.Int32 _UomId;
        partial void OnUomIdChanging(global::System.Int32 value);
        partial void OnUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanTermLength
        {
            get
            {
                return _LoanTermLength;
            }
            set
            {
                OnLoanTermLengthChanging(value);
                ReportPropertyChanging("LoanTermLength");
                _LoanTermLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanTermLength");
                OnLoanTermLengthChanged();
            }
        }
        private global::System.Int32 _LoanTermLength;
        partial void OnLoanTermLengthChanging(global::System.Int32 value);
        partial void OnLoanTermLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LoanAmount
        {
            get
            {
                return _LoanAmount;
            }
            set
            {
                OnLoanAmountChanging(value);
                ReportPropertyChanging("LoanAmount");
                _LoanAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAmount");
                OnLoanAmountChanged();
            }
        }
        private global::System.Decimal _LoanAmount;
        partial void OnLoanAmountChanging(global::System.Decimal value);
        partial void OnLoanAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InterestRate
        {
            get
            {
                return _InterestRate;
            }
            set
            {
                OnInterestRateChanging(value);
                ReportPropertyChanging("InterestRate");
                _InterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestRate");
                OnInterestRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _InterestRate;
        partial void OnInterestRateChanging(Nullable<global::System.Decimal> value);
        partial void OnInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InterestRateDescription
        {
            get
            {
                return _InterestRateDescription;
            }
            set
            {
                OnInterestRateDescriptionChanging(value);
                ReportPropertyChanging("InterestRateDescription");
                _InterestRateDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InterestRateDescription");
                OnInterestRateDescriptionChanged();
            }
        }
        private global::System.String _InterestRateDescription;
        partial void OnInterestRateDescriptionChanging(global::System.String value);
        partial void OnInterestRateDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PastDueInterestRate
        {
            get
            {
                return _PastDueInterestRate;
            }
            set
            {
                OnPastDueInterestRateChanging(value);
                ReportPropertyChanging("PastDueInterestRate");
                _PastDueInterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PastDueInterestRate");
                OnPastDueInterestRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _PastDueInterestRate;
        partial void OnPastDueInterestRateChanging(Nullable<global::System.Decimal> value);
        partial void OnPastDueInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PastDueInterestRateDescript
        {
            get
            {
                return _PastDueInterestRateDescript;
            }
            set
            {
                OnPastDueInterestRateDescriptChanging(value);
                ReportPropertyChanging("PastDueInterestRateDescript");
                _PastDueInterestRateDescript = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PastDueInterestRateDescript");
                OnPastDueInterestRateDescriptChanged();
            }
        }
        private global::System.String _PastDueInterestRateDescript;
        partial void OnPastDueInterestRateDescriptChanging(global::System.String value);
        partial void OnPastDueInterestRateDescriptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInterestProductFeatureInd
        {
            get
            {
                return _IsInterestProductFeatureInd;
            }
            set
            {
                OnIsInterestProductFeatureIndChanging(value);
                ReportPropertyChanging("IsInterestProductFeatureInd");
                _IsInterestProductFeatureInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInterestProductFeatureInd");
                OnIsInterestProductFeatureIndChanged();
            }
        }
        private global::System.Boolean _IsInterestProductFeatureInd;
        partial void OnIsInterestProductFeatureIndChanging(global::System.Boolean value);
        partial void OnIsInterestProductFeatureIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPastDueProductFeatureInd
        {
            get
            {
                return _IsPastDueProductFeatureInd;
            }
            set
            {
                OnIsPastDueProductFeatureIndChanging(value);
                ReportPropertyChanging("IsPastDueProductFeatureInd");
                _IsPastDueProductFeatureInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPastDueProductFeatureInd");
                OnIsPastDueProductFeatureIndChanged();
            }
        }
        private global::System.Boolean _IsPastDueProductFeatureInd;
        partial void OnIsPastDueProductFeatureIndChanging(global::System.Boolean value);
        partial void OnIsPastDueProductFeatureIndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_APPLICAT", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("FinancialModel.FK_PETTYCAS_REFERENCE_APPLICAT", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanItem")]
        public EntityCollection<PettyCashLoanItem> PettyCashLoanItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PettyCashLoanItem>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PettyCashLoanItem>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplicationStatus")]
        public EntityCollection<PettyCashLoanApplicationStatu> PettyCashLoanApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PettyCashLoanApplicationStatu>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PettyCashLoanApplicationStatu>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplicationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_PETTYCAS_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_PETTYCAS_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_PETTYCAS_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_PETTYCAS_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PettyCashLoanApplicationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PettyCashLoanApplicationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PettyCashLoanApplicationStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static PettyCashLoanApplicationStatu CreatePettyCashLoanApplicationStatu(global::System.Int32 id, global::System.Int32 statusTypeId, global::System.Int32 applicationId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            PettyCashLoanApplicationStatu pettyCashLoanApplicationStatu = new PettyCashLoanApplicationStatu();
            pettyCashLoanApplicationStatu.Id = id;
            pettyCashLoanApplicationStatu.StatusTypeId = statusTypeId;
            pettyCashLoanApplicationStatu.ApplicationId = applicationId;
            pettyCashLoanApplicationStatu.TransitionDateTime = transitionDateTime;
            pettyCashLoanApplicationStatu.IsActive = isActive;
            return pettyCashLoanApplicationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplication")]
        public PettyCashLoanApplication PettyCashLoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PettyCashLoanApplication> PettyCashLoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA4", "PettyCashLoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanAppStatusType")]
        public PettyCashLoanAppStatusType PettyCashLoanAppStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanAppStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanAppStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PettyCashLoanAppStatusType> PettyCashLoanAppStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanAppStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanAppStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PettyCashLoanApplicationViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PettyCashLoanApplicationViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PettyCashLoanApplicationViewList object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="applicationDate">Initial value of the ApplicationDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static PettyCashLoanApplicationViewList CreatePettyCashLoanApplicationViewList(global::System.Int32 applicationId, global::System.DateTime applicationDate, global::System.String status)
        {
            PettyCashLoanApplicationViewList pettyCashLoanApplicationViewList = new PettyCashLoanApplicationViewList();
            pettyCashLoanApplicationViewList.ApplicationId = applicationId;
            pettyCashLoanApplicationViewList.ApplicationDate = applicationDate;
            pettyCashLoanApplicationViewList.Status = status;
            return pettyCashLoanApplicationViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicationDate
        {
            get
            {
                return _ApplicationDate;
            }
            set
            {
                if (_ApplicationDate != value)
                {
                    OnApplicationDateChanging(value);
                    ReportPropertyChanging("ApplicationDate");
                    _ApplicationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationDate");
                    OnApplicationDateChanged();
                }
            }
        }
        private global::System.DateTime _ApplicationDate;
        partial void OnApplicationDateChanging(global::System.DateTime value);
        partial void OnApplicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Borrower_sName
        {
            get
            {
                return _Borrower_sName;
            }
            set
            {
                OnBorrower_sNameChanging(value);
                ReportPropertyChanging("Borrower_sName");
                _Borrower_sName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Borrower_sName");
                OnBorrower_sNameChanged();
            }
        }
        private global::System.String _Borrower_sName;
        partial void OnBorrower_sNameChanging(global::System.String value);
        partial void OnBorrower_sNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PettyCashLoanAppStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PettyCashLoanAppStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PettyCashLoanAppStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PettyCashLoanAppStatusType CreatePettyCashLoanAppStatusType(global::System.Int32 id, global::System.String name)
        {
            PettyCashLoanAppStatusType pettyCashLoanAppStatusType = new PettyCashLoanAppStatusType();
            pettyCashLoanAppStatusType.Id = id;
            pettyCashLoanAppStatusType.Name = name;
            return pettyCashLoanAppStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanApplicationStatus")]
        public EntityCollection<PettyCashLoanApplicationStatu> PettyCashLoanApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PettyCashLoanApplicationStatu>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PettyCashLoanApplicationStatu>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA3", "PettyCashLoanApplicationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusTypeAssoc")]
        public EntityCollection<PettyCashLoanAppStatusTypeAssoc> PettyCashLoanAppStatusTypeAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PettyCashLoanAppStatusTypeAssoc>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PettyCashLoanAppStatusTypeAssoc>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusTypeAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusTypeAssoc")]
        public EntityCollection<PettyCashLoanAppStatusTypeAssoc> PettyCashLoanAppStatusTypeAssocs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PettyCashLoanAppStatusTypeAssoc>("FinancialModel.FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PettyCashLoanAppStatusTypeAssoc>("FinancialModel.FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusTypeAssoc", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PettyCashLoanAppStatusTypeAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PettyCashLoanAppStatusTypeAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PettyCashLoanAppStatusTypeAssoc object.
        /// </summary>
        /// <param name="pettyCashLoanApplicationSta">Initial value of the PettyCashLoanApplicationSta property.</param>
        /// <param name="fromStatusTypeId">Initial value of the FromStatusTypeId property.</param>
        /// <param name="toStatusTypeId">Initial value of the ToStatusTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static PettyCashLoanAppStatusTypeAssoc CreatePettyCashLoanAppStatusTypeAssoc(global::System.Int32 pettyCashLoanApplicationSta, global::System.Int32 fromStatusTypeId, global::System.Int32 toStatusTypeId, global::System.DateTime effectiveDate)
        {
            PettyCashLoanAppStatusTypeAssoc pettyCashLoanAppStatusTypeAssoc = new PettyCashLoanAppStatusTypeAssoc();
            pettyCashLoanAppStatusTypeAssoc.PettyCashLoanApplicationSta = pettyCashLoanApplicationSta;
            pettyCashLoanAppStatusTypeAssoc.FromStatusTypeId = fromStatusTypeId;
            pettyCashLoanAppStatusTypeAssoc.ToStatusTypeId = toStatusTypeId;
            pettyCashLoanAppStatusTypeAssoc.EffectiveDate = effectiveDate;
            return pettyCashLoanAppStatusTypeAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PettyCashLoanApplicationSta
        {
            get
            {
                return _PettyCashLoanApplicationSta;
            }
            set
            {
                if (_PettyCashLoanApplicationSta != value)
                {
                    OnPettyCashLoanApplicationStaChanging(value);
                    ReportPropertyChanging("PettyCashLoanApplicationSta");
                    _PettyCashLoanApplicationSta = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PettyCashLoanApplicationSta");
                    OnPettyCashLoanApplicationStaChanged();
                }
            }
        }
        private global::System.Int32 _PettyCashLoanApplicationSta;
        partial void OnPettyCashLoanApplicationStaChanging(global::System.Int32 value);
        partial void OnPettyCashLoanApplicationStaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromStatusTypeId
        {
            get
            {
                return _FromStatusTypeId;
            }
            set
            {
                OnFromStatusTypeIdChanging(value);
                ReportPropertyChanging("FromStatusTypeId");
                _FromStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromStatusTypeId");
                OnFromStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _FromStatusTypeId;
        partial void OnFromStatusTypeIdChanging(global::System.Int32 value);
        partial void OnFromStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToStatusTypeId
        {
            get
            {
                return _ToStatusTypeId;
            }
            set
            {
                OnToStatusTypeIdChanging(value);
                ReportPropertyChanging("ToStatusTypeId");
                _ToStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToStatusTypeId");
                OnToStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _ToStatusTypeId;
        partial void OnToStatusTypeIdChanging(global::System.Int32 value);
        partial void OnToStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusType")]
        public PettyCashLoanAppStatusType PettyCashLoanAppStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PettyCashLoanAppStatusType> PettyCashLoanAppStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA5", "PettyCashLoanAppStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusType")]
        public PettyCashLoanAppStatusType PettyCashLoanAppStatusType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PettyCashLoanAppStatusType> PettyCashLoanAppStatusType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PettyCashLoanAppStatusType>("FinancialModel.FK_PETTYCAS_REFERENCE_PETTYCAS", "PettyCashLoanAppStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PettyCashLoanItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PettyCashLoanItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PettyCashLoanItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="paymentDueDate">Initial value of the PaymentDueDate property.</param>
        /// <param name="sourceOfPayment">Initial value of the SourceOfPayment property.</param>
        /// <param name="memo">Initial value of the Memo property.</param>
        public static PettyCashLoanItem CreatePettyCashLoanItem(global::System.Int32 id, global::System.Int32 applicationId, global::System.DateTime paymentDueDate, global::System.String sourceOfPayment, global::System.String memo)
        {
            PettyCashLoanItem pettyCashLoanItem = new PettyCashLoanItem();
            pettyCashLoanItem.Id = id;
            pettyCashLoanItem.ApplicationId = applicationId;
            pettyCashLoanItem.PaymentDueDate = paymentDueDate;
            pettyCashLoanItem.SourceOfPayment = sourceOfPayment;
            pettyCashLoanItem.Memo = memo;
            return pettyCashLoanItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDueDate
        {
            get
            {
                return _PaymentDueDate;
            }
            set
            {
                OnPaymentDueDateChanging(value);
                ReportPropertyChanging("PaymentDueDate");
                _PaymentDueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDueDate");
                OnPaymentDueDateChanged();
            }
        }
        private global::System.DateTime _PaymentDueDate;
        partial void OnPaymentDueDateChanging(global::System.DateTime value);
        partial void OnPaymentDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceOfPayment
        {
            get
            {
                return _SourceOfPayment;
            }
            set
            {
                OnSourceOfPaymentChanging(value);
                ReportPropertyChanging("SourceOfPayment");
                _SourceOfPayment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceOfPayment");
                OnSourceOfPaymentChanged();
            }
        }
        private global::System.String _SourceOfPayment;
        partial void OnSourceOfPaymentChanging(global::System.String value);
        partial void OnSourceOfPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanApplication")]
        public PettyCashLoanApplication PettyCashLoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PettyCashLoanApplication> PettyCashLoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PettyCashLoanApplication>("FinancialModel.FK_PETTY_CA_REFERENCE_PETTY_CA2", "PettyCashLoanApplication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PostalAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostalAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostalAddress object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        public static PostalAddress CreatePostalAddress(global::System.Int32 addressId, global::System.Boolean isPrimary)
        {
            PostalAddress postalAddress = new PostalAddress();
            postalAddress.AddressId = addressId;
            postalAddress.IsPrimary = isPrimary;
            return postalAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostalAddressTypeId
        {
            get
            {
                return _PostalAddressTypeId;
            }
            set
            {
                OnPostalAddressTypeIdChanging(value);
                ReportPropertyChanging("PostalAddressTypeId");
                _PostalAddressTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostalAddressTypeId");
                OnPostalAddressTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PostalAddressTypeId;
        partial void OnPostalAddressTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPostalAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetAddress
        {
            get
            {
                return _StreetAddress;
            }
            set
            {
                OnStreetAddressChanging(value);
                ReportPropertyChanging("StreetAddress");
                _StreetAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetAddress");
                OnStreetAddressChanged();
            }
        }
        private global::System.String _StreetAddress;
        partial void OnStreetAddressChanging(global::System.String value);
        partial void OnStreetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Barangay
        {
            get
            {
                return _Barangay;
            }
            set
            {
                OnBarangayChanging(value);
                ReportPropertyChanging("Barangay");
                _Barangay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Barangay");
                OnBarangayChanged();
            }
        }
        private global::System.String _Barangay;
        partial void OnBarangayChanging(global::System.String value);
        partial void OnBarangayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Municipality
        {
            get
            {
                return _Municipality;
            }
            set
            {
                OnMunicipalityChanging(value);
                ReportPropertyChanging("Municipality");
                _Municipality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Municipality");
                OnMunicipalityChanged();
            }
        }
        private global::System.String _Municipality;
        partial void OnMunicipalityChanging(global::System.String value);
        partial void OnMunicipalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_ADDRESS", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("FinancialModel.FK_POSTALAD_REFERENCE_ADDRESS", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_COUNTRY", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("FinancialModel.FK_POSTALAD_REFERENCE_COUNTRY", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("FinancialModel.FK_POSTALAD_REFERENCE_COUNTRY", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("FinancialModel.FK_POSTALAD_REFERENCE_COUNTRY", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("FinancialModel.FK_POSTALAD_REFERENCE_COUNTRY", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddressType")]
        public PostalAddressType PostalAddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalAddressType>("FinancialModel.FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalAddressType>("FinancialModel.FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalAddressType> PostalAddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalAddressType>("FinancialModel.FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalAddressType>("FinancialModel.FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddressType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="PostalAddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostalAddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostalAddressType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PostalAddressType CreatePostalAddressType(global::System.Int32 id, global::System.String name)
        {
            PostalAddressType postalAddressType = new PostalAddressType();
            postalAddressType.Id = id;
            postalAddressType.Name = name;
            return postalAddressType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddress")]
        public EntityCollection<PostalAddress> PostalAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostalAddress>("FinancialModel.FK_POSTALAD_REFERENCE_POSTALAD", "PostalAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductCategory CreateProductCategory(global::System.Int32 id, global::System.String name)
        {
            ProductCategory productCategory = new ProductCategory();
            productCategory.Id = id;
            productCategory.Name = name;
            return productCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategoryFeatureFunctionalApplicability")]
        public EntityCollection<ProductCategoryFeatureFunctionalApplicability> ProductCategoryFeatureFunctionalApplicabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategoryFeatureFunctionalApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategoryFeatureFunctionalApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategoryFeatureFunctionalApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategoryFeatureFunctionalApplicability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategoryRollup")]
        public EntityCollection<ProductCategoryRollup> ProductCategoryRollups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategoryRollup>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategoryRollup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategoryRollup>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategoryRollup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategoryRollup")]
        public EntityCollection<ProductCategoryRollup> ProductCategoryRollups1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategoryRollup>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategoryRollup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategoryRollup>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategoryRollup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategoryClassification")]
        public EntityCollection<ProductCategoryClassification> ProductCategoryClassifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategoryClassification>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategoryClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategoryClassification>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategoryClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCatFeatApplicability")]
        public EntityCollection<ProductCatFeatApplicability> ProductCatFeatApplicabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCatFeatApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCatFeatApplicability", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductCategoryClassification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategoryClassification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCategoryClassification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productCategoryId">Initial value of the ProductCategoryId property.</param>
        /// <param name="financialProductId">Initial value of the FinancialProductId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductCategoryClassification CreateProductCategoryClassification(global::System.Int32 id, global::System.Int32 productCategoryId, global::System.Int32 financialProductId, global::System.DateTime effectiveDate)
        {
            ProductCategoryClassification productCategoryClassification = new ProductCategoryClassification();
            productCategoryClassification.Id = id;
            productCategoryClassification.ProductCategoryId = productCategoryId;
            productCategoryClassification.FinancialProductId = financialProductId;
            productCategoryClassification.EffectiveDate = effectiveDate;
            return productCategoryClassification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCategoryId
        {
            get
            {
                return _ProductCategoryId;
            }
            set
            {
                OnProductCategoryIdChanging(value);
                ReportPropertyChanging("ProductCategoryId");
                _ProductCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCategoryId");
                OnProductCategoryIdChanged();
            }
        }
        private global::System.Int32 _ProductCategoryId;
        partial void OnProductCategoryIdChanging(global::System.Int32 value);
        partial void OnProductCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialProductId
        {
            get
            {
                return _FinancialProductId;
            }
            set
            {
                OnFinancialProductIdChanging(value);
                ReportPropertyChanging("FinancialProductId");
                _FinancialProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialProductId");
                OnFinancialProductIdChanged();
            }
        }
        private global::System.Int32 _FinancialProductId;
        partial void OnFinancialProductIdChanging(global::System.Int32 value);
        partial void OnFinancialProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA3", "FinancialProduct")]
        public FinancialProduct FinancialProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA3", "FinancialProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA3", "FinancialProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialProduct> FinancialProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA3", "FinancialProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA3", "FinancialProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategory")]
        public ProductCategory ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_6", "ProductCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductCategoryFeatureFunctionalApplicability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategoryFeatureFunctionalApplicability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCategoryFeatureFunctionalApplicability object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductCategoryFeatureFunctionalApplicability CreateProductCategoryFeatureFunctionalApplicability(global::System.Int32 id, global::System.DateTime effectiveDate)
        {
            ProductCategoryFeatureFunctionalApplicability productCategoryFeatureFunctionalApplicability = new ProductCategoryFeatureFunctionalApplicability();
            productCategoryFeatureFunctionalApplicability.Id = id;
            productCategoryFeatureFunctionalApplicability.EffectiveDate = effectiveDate;
            return productCategoryFeatureFunctionalApplicability;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductCategoryId
        {
            get
            {
                return _ProductCategoryId;
            }
            set
            {
                OnProductCategoryIdChanging(value);
                ReportPropertyChanging("ProductCategoryId");
                _ProductCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCategoryId");
                OnProductCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductCategoryId;
        partial void OnProductCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductCatFeatApplicabilityId
        {
            get
            {
                return _ProductCatFeatApplicabilityId;
            }
            set
            {
                OnProductCatFeatApplicabilityIdChanging(value);
                ReportPropertyChanging("ProductCatFeatApplicabilityId");
                _ProductCatFeatApplicabilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCatFeatApplicabilityId");
                OnProductCatFeatApplicabilityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductCatFeatApplicabilityId;
        partial void OnProductCatFeatApplicabilityIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductCatFeatApplicabilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategory")]
        public ProductCategory ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_10", "ProductCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCatFeatApplicability")]
        public ProductCatFeatApplicability ProductCatFeatApplicability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCatFeatApplicability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCatFeatApplicability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCatFeatApplicability> ProductCatFeatApplicabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCatFeatApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCatFeatApplicability", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductCategoryRollup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategoryRollup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCategoryRollup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="childProductCategoryId">Initial value of the ChildProductCategoryId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductCategoryRollup CreateProductCategoryRollup(global::System.Int32 id, global::System.Int32 childProductCategoryId, global::System.DateTime effectiveDate)
        {
            ProductCategoryRollup productCategoryRollup = new ProductCategoryRollup();
            productCategoryRollup.Id = id;
            productCategoryRollup.ChildProductCategoryId = childProductCategoryId;
            productCategoryRollup.EffectiveDate = effectiveDate;
            return productCategoryRollup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentProductCategoryId
        {
            get
            {
                return _ParentProductCategoryId;
            }
            set
            {
                OnParentProductCategoryIdChanging(value);
                ReportPropertyChanging("ParentProductCategoryId");
                _ParentProductCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentProductCategoryId");
                OnParentProductCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentProductCategoryId;
        partial void OnParentProductCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentProductCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChildProductCategoryId
        {
            get
            {
                return _ChildProductCategoryId;
            }
            set
            {
                OnChildProductCategoryIdChanging(value);
                ReportPropertyChanging("ChildProductCategoryId");
                _ChildProductCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildProductCategoryId");
                OnChildProductCategoryIdChanged();
            }
        }
        private global::System.Int32 _ChildProductCategoryId;
        partial void OnChildProductCategoryIdChanging(global::System.Int32 value);
        partial void OnChildProductCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategory")]
        public ProductCategory ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_2", "ProductCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategory")]
        public ProductCategory ProductCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_3", "ProductCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductCatFeatApplicability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCatFeatApplicability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCatFeatApplicability object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productFeatureId">Initial value of the ProductFeatureId property.</param>
        /// <param name="productCategoryId">Initial value of the ProductCategoryId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductCatFeatApplicability CreateProductCatFeatApplicability(global::System.Int32 id, global::System.Int32 productFeatureId, global::System.Int32 productCategoryId, global::System.DateTime effectiveDate)
        {
            ProductCatFeatApplicability productCatFeatApplicability = new ProductCatFeatApplicability();
            productCatFeatApplicability.Id = id;
            productCatFeatApplicability.ProductFeatureId = productFeatureId;
            productCatFeatApplicability.ProductCategoryId = productCategoryId;
            productCatFeatApplicability.EffectiveDate = effectiveDate;
            return productCatFeatApplicability;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductFeatureId
        {
            get
            {
                return _ProductFeatureId;
            }
            set
            {
                OnProductFeatureIdChanging(value);
                ReportPropertyChanging("ProductFeatureId");
                _ProductFeatureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductFeatureId");
                OnProductFeatureIdChanged();
            }
        }
        private global::System.Int32 _ProductFeatureId;
        partial void OnProductFeatureIdChanging(global::System.Int32 value);
        partial void OnProductFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCategoryId
        {
            get
            {
                return _ProductCategoryId;
            }
            set
            {
                OnProductCategoryIdChanging(value);
                ReportPropertyChanging("ProductCategoryId");
                _ProductCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCategoryId");
                OnProductCategoryIdChanged();
            }
        }
        private global::System.Int32 _ProductCategoryId;
        partial void OnProductCategoryIdChanging(global::System.Int32 value);
        partial void OnProductCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCategory")]
        public ProductCategory ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_8", "ProductCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCategoryFeatureFunctionalApplicability")]
        public EntityCollection<ProductCategoryFeatureFunctionalApplicability> ProductCategoryFeatureFunctionalApplicabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategoryFeatureFunctionalApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCategoryFeatureFunctionalApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategoryFeatureFunctionalApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_9", "ProductCategoryFeatureFunctionalApplicability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductFeature")]
        public ProductFeature ProductFeature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductFeature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductFeature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFeature> ProductFeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductFeature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductFeature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductFeature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductFeature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFeature object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productFeatCatId">Initial value of the ProductFeatCatId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductFeature CreateProductFeature(global::System.Int32 id, global::System.Int32 productFeatCatId, global::System.String name)
        {
            ProductFeature productFeature = new ProductFeature();
            productFeature.Id = id;
            productFeature.ProductFeatCatId = productFeatCatId;
            productFeature.Name = name;
            return productFeature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductFeatCatId
        {
            get
            {
                return _ProductFeatCatId;
            }
            set
            {
                OnProductFeatCatIdChanging(value);
                ReportPropertyChanging("ProductFeatCatId");
                _ProductFeatCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductFeatCatId");
                OnProductFeatCatIdChanged();
            }
        }
        private global::System.Int32 _ProductFeatCatId;
        partial void OnProductFeatCatIdChanging(global::System.Int32 value);
        partial void OnProductFeatCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductCatFeatApplicability")]
        public EntityCollection<ProductCatFeatApplicability> ProductCatFeatApplicabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductCatFeatApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCatFeatApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_7", "ProductCatFeatApplicability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeatureApplicability")]
        public EntityCollection<ProductFeatureApplicability> ProductFeatureApplicabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductFeatureApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeatureApplicability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductFeatureApplicability>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeatureApplicability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeatureCategory")]
        public ProductFeatureCategory ProductFeatureCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeatureCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeatureCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFeatureCategory> ProductFeatureCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeatureCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeatureCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFeatureCategory>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeatureCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductFeatureApplicability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductFeatureApplicability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFeatureApplicability object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialProductId">Initial value of the FinancialProductId property.</param>
        /// <param name="productFeatureId">Initial value of the ProductFeatureId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductFeatureApplicability CreateProductFeatureApplicability(global::System.Int32 id, global::System.Int32 financialProductId, global::System.Int32 productFeatureId, global::System.DateTime effectiveDate)
        {
            ProductFeatureApplicability productFeatureApplicability = new ProductFeatureApplicability();
            productFeatureApplicability.Id = id;
            productFeatureApplicability.FinancialProductId = financialProductId;
            productFeatureApplicability.ProductFeatureId = productFeatureId;
            productFeatureApplicability.EffectiveDate = effectiveDate;
            return productFeatureApplicability;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialProductId
        {
            get
            {
                return _FinancialProductId;
            }
            set
            {
                OnFinancialProductIdChanging(value);
                ReportPropertyChanging("FinancialProductId");
                _FinancialProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialProductId");
                OnFinancialProductIdChanged();
            }
        }
        private global::System.Int32 _FinancialProductId;
        partial void OnFinancialProductIdChanging(global::System.Int32 value);
        partial void OnFinancialProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductFeatureId
        {
            get
            {
                return _ProductFeatureId;
            }
            set
            {
                OnProductFeatureIdChanging(value);
                ReportPropertyChanging("ProductFeatureId");
                _ProductFeatureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductFeatureId");
                OnProductFeatureIdChanged();
            }
        }
        private global::System.Int32 _ProductFeatureId;
        partial void OnProductFeatureIdChanging(global::System.Int32 value);
        partial void OnProductFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_APPLICAT_REFERENCE_PRODUCTF", "ApplicationItem")]
        public EntityCollection<ApplicationItem> ApplicationItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationItem>("FinancialModel.FK_APPLICAT_REFERENCE_PRODUCTF", "ApplicationItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationItem>("FinancialModel.FK_APPLICAT_REFERENCE_PRODUCTF", "ApplicationItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FEE_REFERENCE_PRODUCTF", "Fee")]
        public Fee Fee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fee>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "Fee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fee>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "Fee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fee> FeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fee>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "Fee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fee>("FinancialModel.FK_FEE_REFERENCE_PRODUCTF", "Fee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA2", "FinancialProduct")]
        public FinancialProduct FinancialProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA2", "FinancialProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA2", "FinancialProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialProduct> FinancialProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA2", "FinancialProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA2", "FinancialProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANTERM_REFERENCE_PRODUCTF", "LoanTerm")]
        public LoanTerm LoanTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanTerm>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "LoanTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanTerm>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "LoanTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanTerm> LoanTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanTerm>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "LoanTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanTerm>("FinancialModel.FK_LOANTERM_REFERENCE_PRODUCTF", "LoanTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeature")]
        public ProductFeature ProductFeature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFeature> ProductFeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_4", "ProductFeature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductFeatureCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductFeatureCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFeatureCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductFeatureCategory CreateProductFeatureCategory(global::System.Int32 id, global::System.String name)
        {
            ProductFeatureCategory productFeatureCategory = new ProductFeatureCategory();
            productFeatureCategory.Id = id;
            productFeatureCategory.Name = name;
            return productFeatureCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeature")]
        public EntityCollection<ProductFeature> ProductFeatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductFeature>("FinancialModel.FK_PRODUCT__REFERENCE_PRODUCT_5", "ProductFeature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductRequiredDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductRequiredDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductRequiredDocument object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialProductId">Initial value of the FinancialProductId property.</param>
        /// <param name="requiredDocumentTypeId">Initial value of the RequiredDocumentTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ProductRequiredDocument CreateProductRequiredDocument(global::System.Int32 id, global::System.Int32 financialProductId, global::System.Int32 requiredDocumentTypeId, global::System.DateTime effectiveDate)
        {
            ProductRequiredDocument productRequiredDocument = new ProductRequiredDocument();
            productRequiredDocument.Id = id;
            productRequiredDocument.FinancialProductId = financialProductId;
            productRequiredDocument.RequiredDocumentTypeId = requiredDocumentTypeId;
            productRequiredDocument.EffectiveDate = effectiveDate;
            return productRequiredDocument;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialProductId
        {
            get
            {
                return _FinancialProductId;
            }
            set
            {
                OnFinancialProductIdChanging(value);
                ReportPropertyChanging("FinancialProductId");
                _FinancialProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialProductId");
                OnFinancialProductIdChanged();
            }
        }
        private global::System.Int32 _FinancialProductId;
        partial void OnFinancialProductIdChanging(global::System.Int32 value);
        partial void OnFinancialProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequiredDocumentTypeId
        {
            get
            {
                return _RequiredDocumentTypeId;
            }
            set
            {
                OnRequiredDocumentTypeIdChanging(value);
                ReportPropertyChanging("RequiredDocumentTypeId");
                _RequiredDocumentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredDocumentTypeId");
                OnRequiredDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _RequiredDocumentTypeId;
        partial void OnRequiredDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnRequiredDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCTR_REFERENCE_FINANCIA", "FinancialProduct")]
        public FinancialProduct FinancialProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCTR_REFERENCE_FINANCIA", "FinancialProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCTR_REFERENCE_FINANCIA", "FinancialProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialProduct> FinancialProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCTR_REFERENCE_FINANCIA", "FinancialProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCTR_REFERENCE_FINANCIA", "FinancialProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCTR_REFERENCE_REQUIRED", "RequiredDocumentType")]
        public RequiredDocumentType RequiredDocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequiredDocumentType>("FinancialModel.FK_PRODUCTR_REFERENCE_REQUIRED", "RequiredDocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequiredDocumentType>("FinancialModel.FK_PRODUCTR_REFERENCE_REQUIRED", "RequiredDocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequiredDocumentType> RequiredDocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequiredDocumentType>("FinancialModel.FK_PRODUCTR_REFERENCE_REQUIRED", "RequiredDocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequiredDocumentType>("FinancialModel.FK_PRODUCTR_REFERENCE_REQUIRED", "RequiredDocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_PRODUCTR", "SubmittedDocument")]
        public EntityCollection<SubmittedDocument> SubmittedDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_PRODUCTR", "SubmittedDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_PRODUCTR", "SubmittedDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="financialProductId">Initial value of the FinancialProductId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ProductStatu CreateProductStatu(global::System.Int32 id, global::System.Int32 statusTypeId, global::System.Int32 financialProductId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            ProductStatu productStatu = new ProductStatu();
            productStatu.Id = id;
            productStatu.StatusTypeId = statusTypeId;
            productStatu.FinancialProductId = financialProductId;
            productStatu.TransitionDateTime = transitionDateTime;
            productStatu.IsActive = isActive;
            return productStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialProductId
        {
            get
            {
                return _FinancialProductId;
            }
            set
            {
                OnFinancialProductIdChanging(value);
                ReportPropertyChanging("FinancialProductId");
                _FinancialProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialProductId");
                OnFinancialProductIdChanged();
            }
        }
        private global::System.Int32 _FinancialProductId;
        partial void OnFinancialProductIdChanging(global::System.Int32 value);
        partial void OnFinancialProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCT__REFERENCE_FINANCIA4", "FinancialProduct")]
        public FinancialProduct FinancialProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA4", "FinancialProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA4", "FinancialProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialProduct> FinancialProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA4", "FinancialProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialProduct>("FinancialModel.FK_PRODUCT__REFERENCE_FINANCIA4", "FinancialProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatusType")]
        public ProductStatusType ProductStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStatusType>("FinancialModel.FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStatusType>("FinancialModel.FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductStatusType> ProductStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductStatusType>("FinancialModel.FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductStatusType>("FinancialModel.FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ProductStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductStatusType CreateProductStatusType(global::System.Int32 id, global::System.String name)
        {
            ProductStatusType productStatusType = new ProductStatusType();
            productStatusType.Id = id;
            productStatusType.Name = name;
            return productStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatus")]
        public EntityCollection<ProductStatu> ProductStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStatu>("FinancialModel.FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStatu>("FinancialModel.FK_PRODUCTS_REFERENCE_PRODUCTS", "ProductStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receipt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Receipt CreateReceipt(global::System.Int32 id)
        {
            Receipt receipt = new Receipt();
            receipt.Id = id;
            return receipt;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceivedFromName
        {
            get
            {
                return _ReceivedFromName;
            }
            set
            {
                OnReceivedFromNameChanging(value);
                ReportPropertyChanging("ReceivedFromName");
                _ReceivedFromName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceivedFromName");
                OnReceivedFromNameChanged();
            }
        }
        private global::System.String _ReceivedFromName;
        partial void OnReceivedFromNameChanging(global::System.String value);
        partial void OnReceivedFromNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReceiptBalance
        {
            get
            {
                return _ReceiptBalance;
            }
            set
            {
                OnReceiptBalanceChanging(value);
                ReportPropertyChanging("ReceiptBalance");
                _ReceiptBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptBalance");
                OnReceiptBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReceiptBalance;
        partial void OnReceiptBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnReceiptBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ReceiptPaymentAssoc_Receipt", "ReceiptPaymentAssoc")]
        public EntityCollection<ReceiptPaymentAssoc> ReceiptPaymentAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptPaymentAssoc>("FinancialModel.FK_ReceiptPaymentAssoc_Receipt", "ReceiptPaymentAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptPaymentAssoc>("FinancialModel.FK_ReceiptPaymentAssoc_Receipt", "ReceiptPaymentAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ReceiptStatus_Receipt", "ReceiptStatus")]
        public EntityCollection<ReceiptStatu> ReceiptStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptStatu>("FinancialModel.FK_ReceiptStatus_Receipt", "ReceiptStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptStatu>("FinancialModel.FK_ReceiptStatus_Receipt", "ReceiptStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SalaryReceipt_Receipt", "SalaryReceipt")]
        public SalaryReceipt SalaryReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalaryReceipt>("FinancialModel.FK_SalaryReceipt_Receipt", "SalaryReceipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalaryReceipt>("FinancialModel.FK_SalaryReceipt_Receipt", "SalaryReceipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalaryReceipt> SalaryReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalaryReceipt>("FinancialModel.FK_SalaryReceipt_Receipt", "SalaryReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalaryReceipt>("FinancialModel.FK_SalaryReceipt_Receipt", "SalaryReceipt", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceiptPaymentAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptPaymentAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptPaymentAssoc object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static ReceiptPaymentAssoc CreateReceiptPaymentAssoc(global::System.Int32 id, global::System.Int32 receiptId, global::System.Int32 paymentId, global::System.Decimal amount)
        {
            ReceiptPaymentAssoc receiptPaymentAssoc = new ReceiptPaymentAssoc();
            receiptPaymentAssoc.Id = id;
            receiptPaymentAssoc.ReceiptId = receiptId;
            receiptPaymentAssoc.PaymentId = paymentId;
            receiptPaymentAssoc.Amount = amount;
            return receiptPaymentAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Int32 _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Int32 value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ReceiptPaymentAssoc_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_ReceiptPaymentAssoc_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_ReceiptPaymentAssoc_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FinancialModel.FK_ReceiptPaymentAssoc_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FinancialModel.FK_ReceiptPaymentAssoc_Payment", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ReceiptPaymentAssoc_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_ReceiptPaymentAssoc_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_ReceiptPaymentAssoc_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_ReceiptPaymentAssoc_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("FinancialModel.FK_ReceiptPaymentAssoc_Receipt", "Receipt", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceiptStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ReceiptStatu CreateReceiptStatu(global::System.Int32 id, global::System.Int32 receiptId, global::System.Boolean isActive)
        {
            ReceiptStatu receiptStatu = new ReceiptStatu();
            receiptStatu.Id = id;
            receiptStatu.ReceiptId = receiptId;
            receiptStatu.IsActive = isActive;
            return receiptStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Int32 _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Int32 value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReceiptStatusTypeId
        {
            get
            {
                return _ReceiptStatusTypeId;
            }
            set
            {
                OnReceiptStatusTypeIdChanging(value);
                ReportPropertyChanging("ReceiptStatusTypeId");
                _ReceiptStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptStatusTypeId");
                OnReceiptStatusTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReceiptStatusTypeId;
        partial void OnReceiptStatusTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnReceiptStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ReceiptStatus_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_ReceiptStatus_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_ReceiptStatus_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_ReceiptStatus_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("FinancialModel.FK_ReceiptStatus_Receipt", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatusType")]
        public ReceiptStatusType ReceiptStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiptStatusType> ReceiptStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceiptStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ReceiptStatusType CreateReceiptStatusType(global::System.Int32 id, global::System.String name)
        {
            ReceiptStatusType receiptStatusType = new ReceiptStatusType();
            receiptStatusType.Id = id;
            receiptStatusType.Name = name;
            return receiptStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatus")]
        public EntityCollection<ReceiptStatu> ReceiptStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptStatu>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptStatu>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_2", "ReceiptStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusTypeAssoc")]
        public EntityCollection<ReceiptStatusTypeAssoc> ReceiptStatusTypeAssocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptStatusTypeAssoc>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptStatusTypeAssoc>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusTypeAssoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusTypeAssoc")]
        public EntityCollection<ReceiptStatusTypeAssoc> ReceiptStatusTypeAssocs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptStatusTypeAssoc>("FinancialModel.FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusTypeAssoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptStatusTypeAssoc>("FinancialModel.FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusTypeAssoc", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceiptStatusTypeAssoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptStatusTypeAssoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptStatusTypeAssoc object.
        /// </summary>
        /// <param name="receiptStatusTypeAssociation">Initial value of the ReceiptStatusTypeAssociation property.</param>
        /// <param name="fromStatusTypeId">Initial value of the FromStatusTypeId property.</param>
        /// <param name="toStatusTypeId">Initial value of the ToStatusTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static ReceiptStatusTypeAssoc CreateReceiptStatusTypeAssoc(global::System.Int32 receiptStatusTypeAssociation, global::System.Int32 fromStatusTypeId, global::System.Int32 toStatusTypeId, global::System.DateTime effectiveDate)
        {
            ReceiptStatusTypeAssoc receiptStatusTypeAssoc = new ReceiptStatusTypeAssoc();
            receiptStatusTypeAssoc.ReceiptStatusTypeAssociation = receiptStatusTypeAssociation;
            receiptStatusTypeAssoc.FromStatusTypeId = fromStatusTypeId;
            receiptStatusTypeAssoc.ToStatusTypeId = toStatusTypeId;
            receiptStatusTypeAssoc.EffectiveDate = effectiveDate;
            return receiptStatusTypeAssoc;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiptStatusTypeAssociation
        {
            get
            {
                return _ReceiptStatusTypeAssociation;
            }
            set
            {
                if (_ReceiptStatusTypeAssociation != value)
                {
                    OnReceiptStatusTypeAssociationChanging(value);
                    ReportPropertyChanging("ReceiptStatusTypeAssociation");
                    _ReceiptStatusTypeAssociation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceiptStatusTypeAssociation");
                    OnReceiptStatusTypeAssociationChanged();
                }
            }
        }
        private global::System.Int32 _ReceiptStatusTypeAssociation;
        partial void OnReceiptStatusTypeAssociationChanging(global::System.Int32 value);
        partial void OnReceiptStatusTypeAssociationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromStatusTypeId
        {
            get
            {
                return _FromStatusTypeId;
            }
            set
            {
                OnFromStatusTypeIdChanging(value);
                ReportPropertyChanging("FromStatusTypeId");
                _FromStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromStatusTypeId");
                OnFromStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _FromStatusTypeId;
        partial void OnFromStatusTypeIdChanging(global::System.Int32 value);
        partial void OnFromStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToStatusTypeId
        {
            get
            {
                return _ToStatusTypeId;
            }
            set
            {
                OnToStatusTypeIdChanging(value);
                ReportPropertyChanging("ToStatusTypeId");
                _ToStatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToStatusTypeId");
                OnToStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _ToStatusTypeId;
        partial void OnToStatusTypeIdChanging(global::System.Int32 value);
        partial void OnToStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusType")]
        public ReceiptStatusType ReceiptStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiptStatusType> ReceiptStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPT__REFERENCE_RECEIPT_3", "ReceiptStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusType")]
        public ReceiptStatusType ReceiptStatusType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiptStatusType> ReceiptStatusType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReceiptStatusType>("FinancialModel.FK_RECEIPTS_REFERENCE_RECEIPTS", "ReceiptStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Receivable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receivable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receivable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="receivableTypeId">Initial value of the ReceivableTypeId property.</param>
        /// <param name="validityPeriod">Initial value of the ValidityPeriod property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static Receivable CreateReceivable(global::System.Int32 id, global::System.Int32 receivableTypeId, global::System.DateTime validityPeriod, global::System.DateTime date, global::System.DateTime dueDate, global::System.Decimal amount, global::System.Decimal balance)
        {
            Receivable receivable = new Receivable();
            receivable.Id = id;
            receivable.ReceivableTypeId = receivableTypeId;
            receivable.ValidityPeriod = validityPeriod;
            receivable.Date = date;
            receivable.DueDate = dueDate;
            receivable.Amount = amount;
            receivable.Balance = balance;
            return receivable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivableTypeId
        {
            get
            {
                return _ReceivableTypeId;
            }
            set
            {
                OnReceivableTypeIdChanging(value);
                ReportPropertyChanging("ReceivableTypeId");
                _ReceivableTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivableTypeId");
                OnReceivableTypeIdChanged();
            }
        }
        private global::System.Int32 _ReceivableTypeId;
        partial void OnReceivableTypeIdChanging(global::System.Int32 value);
        partial void OnReceivableTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentId;
        partial void OnPaymentIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidityPeriod
        {
            get
            {
                return _ValidityPeriod;
            }
            set
            {
                OnValidityPeriodChanging(value);
                ReportPropertyChanging("ValidityPeriod");
                _ValidityPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidityPeriod");
                OnValidityPeriodChanged();
            }
        }
        private global::System.DateTime _ValidityPeriod;
        partial void OnValidityPeriodChanging(global::System.DateTime value);
        partial void OnValidityPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnDueDateChanging(global::System.DateTime value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Receivable_Disbursement", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_Receivable_Disbursement", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_Receivable_Disbursement", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("FinancialModel.FK_Receivable_Disbursement", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("FinancialModel.FK_Receivable_Disbursement", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_LOANACCO", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_RECEIVAB_REFERENCE_LOANACCO", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_RECEIVAB_REFERENCE_LOANACCO", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_RECEIVAB_REFERENCE_LOANACCO", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_RECEIVAB_REFERENCE_LOANACCO", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PAYMENTA_REFERENCE_RECEIVAB", "PaymentApplication")]
        public EntityCollection<PaymentApplication> PaymentApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentApplication>("FinancialModel.FK_PAYMENTA_REFERENCE_RECEIVAB", "PaymentApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentApplication>("FinancialModel.FK_PAYMENTA_REFERENCE_RECEIVAB", "PaymentApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB2", "ReceivableType")]
        public ReceivableType ReceivableType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceivableType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB2", "ReceivableType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceivableType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB2", "ReceivableType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceivableType> ReceivableTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceivableType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB2", "ReceivableType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReceivableType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB2", "ReceivableType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB3", "ReceivableAdjustment")]
        public EntityCollection<ReceivableAdjustment> ReceivableAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceivableAdjustment>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB3", "ReceivableAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceivableAdjustment>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB3", "ReceivableAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB4", "ReceivableStatus")]
        public EntityCollection<ReceivableStatu> ReceivableStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceivableStatu>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB4", "ReceivableStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceivableStatu>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB4", "ReceivableStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceivableAdjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceivableAdjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceivableAdjustment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="receivableId">Initial value of the ReceivableId property.</param>
        /// <param name="adjustmentTypeId">Initial value of the AdjustmentTypeId property.</param>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static ReceivableAdjustment CreateReceivableAdjustment(global::System.Int32 id, global::System.Int32 receivableId, global::System.Int32 adjustmentTypeId, global::System.Int32 partyRoleId, global::System.DateTime date, global::System.Decimal amount)
        {
            ReceivableAdjustment receivableAdjustment = new ReceivableAdjustment();
            receivableAdjustment.Id = id;
            receivableAdjustment.ReceivableId = receivableId;
            receivableAdjustment.AdjustmentTypeId = adjustmentTypeId;
            receivableAdjustment.PartyRoleId = partyRoleId;
            receivableAdjustment.Date = date;
            receivableAdjustment.Amount = amount;
            return receivableAdjustment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivableId
        {
            get
            {
                return _ReceivableId;
            }
            set
            {
                OnReceivableIdChanging(value);
                ReportPropertyChanging("ReceivableId");
                _ReceivableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivableId");
                OnReceivableIdChanged();
            }
        }
        private global::System.Int32 _ReceivableId;
        partial void OnReceivableIdChanging(global::System.Int32 value);
        partial void OnReceivableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentTypeId
        {
            get
            {
                return _AdjustmentTypeId;
            }
            set
            {
                OnAdjustmentTypeIdChanging(value);
                ReportPropertyChanging("AdjustmentTypeId");
                _AdjustmentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustmentTypeId");
                OnAdjustmentTypeIdChanged();
            }
        }
        private global::System.Int32 _AdjustmentTypeId;
        partial void OnAdjustmentTypeIdChanging(global::System.Int32 value);
        partial void OnAdjustmentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                OnPartyRoleIdChanging(value);
                ReportPropertyChanging("PartyRoleId");
                _PartyRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyRoleId");
                OnPartyRoleIdChanged();
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_ADJUSTME", "AdjustmentType")]
        public AdjustmentType AdjustmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjustmentType>("FinancialModel.FK_RECEIVAB_REFERENCE_ADJUSTME", "AdjustmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjustmentType>("FinancialModel.FK_RECEIVAB_REFERENCE_ADJUSTME", "AdjustmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjustmentType> AdjustmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjustmentType>("FinancialModel.FK_RECEIVAB_REFERENCE_ADJUSTME", "AdjustmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjustmentType>("FinancialModel.FK_RECEIVAB_REFERENCE_ADJUSTME", "AdjustmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_RECEIVAB_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_RECEIVAB_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_RECEIVAB_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_RECEIVAB_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB3", "Receivable")]
        public Receivable Receivable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB3", "Receivable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB3", "Receivable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receivable> ReceivableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB3", "Receivable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB3", "Receivable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceivableStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceivableStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceivableStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ReceivableStatu CreateReceivableStatu(global::System.Int32 id, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            ReceivableStatu receivableStatu = new ReceivableStatu();
            receivableStatu.Id = id;
            receivableStatu.TransitionDateTime = transitionDateTime;
            receivableStatu.IsActive = isActive;
            return receivableStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReceivableId
        {
            get
            {
                return _ReceivableId;
            }
            set
            {
                OnReceivableIdChanging(value);
                ReportPropertyChanging("ReceivableId");
                _ReceivableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivableId");
                OnReceivableIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReceivableId;
        partial void OnReceivableIdChanging(Nullable<global::System.Int32> value);
        partial void OnReceivableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusTypeId;
        partial void OnStatusTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB4", "Receivable")]
        public Receivable Receivable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB4", "Receivable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB4", "Receivable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receivable> ReceivableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB4", "Receivable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB4", "Receivable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatusType")]
        public ReceivableStatusType ReceivableStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceivableStatusType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceivableStatusType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceivableStatusType> ReceivableStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceivableStatusType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReceivableStatusType>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceivableStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceivableStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceivableStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ReceivableStatusType CreateReceivableStatusType(global::System.Int32 id, global::System.String name)
        {
            ReceivableStatusType receivableStatusType = new ReceivableStatusType();
            receivableStatusType.Id = id;
            receivableStatusType.Name = name;
            return receivableStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatus")]
        public EntityCollection<ReceivableStatu> ReceivableStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceivableStatu>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceivableStatu>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB", "ReceivableStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReceivableType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceivableType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceivableType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ReceivableType CreateReceivableType(global::System.Int32 id, global::System.String name)
        {
            ReceivableType receivableType = new ReceivableType();
            receivableType.Id = id;
            receivableType.Name = name;
            return receivableType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RECEIVAB_REFERENCE_RECEIVAB2", "Receivable")]
        public EntityCollection<Receivable> Receivables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB2", "Receivable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receivable>("FinancialModel.FK_RECEIVAB_REFERENCE_RECEIVAB2", "Receivable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="RediscountingViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RediscountingViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RediscountingViewList object.
        /// </summary>
        /// <param name="check_Date">Initial value of the Check_Date property.</param>
        /// <param name="date_Disbursed">Initial value of the Date_Disbursed property.</param>
        /// <param name="surcharge_Fee">Initial value of the Surcharge_Fee property.</param>
        /// <param name="amount_Disbursed">Initial value of the Amount_Disbursed property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="disbursementTypeId">Initial value of the DisbursementTypeId property.</param>
        public static RediscountingViewList CreateRediscountingViewList(global::System.DateTime check_Date, global::System.DateTime date_Disbursed, global::System.Decimal surcharge_Fee, global::System.Decimal amount_Disbursed, global::System.Int32 paymentId, global::System.Int32 disbursementTypeId)
        {
            RediscountingViewList rediscountingViewList = new RediscountingViewList();
            rediscountingViewList.Check_Date = check_Date;
            rediscountingViewList.Date_Disbursed = date_Disbursed;
            rediscountingViewList.Surcharge_Fee = surcharge_Fee;
            rediscountingViewList.Amount_Disbursed = amount_Disbursed;
            rediscountingViewList.PaymentId = paymentId;
            rediscountingViewList.DisbursementTypeId = disbursementTypeId;
            return rediscountingViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Check_Number
        {
            get
            {
                return _Check_Number;
            }
            set
            {
                OnCheck_NumberChanging(value);
                ReportPropertyChanging("Check_Number");
                _Check_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Check_Number");
                OnCheck_NumberChanged();
            }
        }
        private global::System.String _Check_Number;
        partial void OnCheck_NumberChanging(global::System.String value);
        partial void OnCheck_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Check_Date
        {
            get
            {
                return _Check_Date;
            }
            set
            {
                if (_Check_Date != value)
                {
                    OnCheck_DateChanging(value);
                    ReportPropertyChanging("Check_Date");
                    _Check_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Check_Date");
                    OnCheck_DateChanged();
                }
            }
        }
        private global::System.DateTime _Check_Date;
        partial void OnCheck_DateChanging(global::System.DateTime value);
        partial void OnCheck_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Check_Amount
        {
            get
            {
                return _Check_Amount;
            }
            set
            {
                OnCheck_AmountChanging(value);
                ReportPropertyChanging("Check_Amount");
                _Check_Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Check_Amount");
                OnCheck_AmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Check_Amount;
        partial void OnCheck_AmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCheck_AmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_Disbursed
        {
            get
            {
                return _Date_Disbursed;
            }
            set
            {
                if (_Date_Disbursed != value)
                {
                    OnDate_DisbursedChanging(value);
                    ReportPropertyChanging("Date_Disbursed");
                    _Date_Disbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date_Disbursed");
                    OnDate_DisbursedChanged();
                }
            }
        }
        private global::System.DateTime _Date_Disbursed;
        partial void OnDate_DisbursedChanging(global::System.DateTime value);
        partial void OnDate_DisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisbursedTo
        {
            get
            {
                return _DisbursedTo;
            }
            set
            {
                OnDisbursedToChanging(value);
                ReportPropertyChanging("DisbursedTo");
                _DisbursedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisbursedTo");
                OnDisbursedToChanged();
            }
        }
        private global::System.String _DisbursedTo;
        partial void OnDisbursedToChanging(global::System.String value);
        partial void OnDisbursedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Surcharge_Fee
        {
            get
            {
                return _Surcharge_Fee;
            }
            set
            {
                if (_Surcharge_Fee != value)
                {
                    OnSurcharge_FeeChanging(value);
                    ReportPropertyChanging("Surcharge_Fee");
                    _Surcharge_Fee = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Surcharge_Fee");
                    OnSurcharge_FeeChanged();
                }
            }
        }
        private global::System.Decimal _Surcharge_Fee;
        partial void OnSurcharge_FeeChanging(global::System.Decimal value);
        partial void OnSurcharge_FeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount_Disbursed
        {
            get
            {
                return _Amount_Disbursed;
            }
            set
            {
                if (_Amount_Disbursed != value)
                {
                    OnAmount_DisbursedChanging(value);
                    ReportPropertyChanging("Amount_Disbursed");
                    _Amount_Disbursed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount_Disbursed");
                    OnAmount_DisbursedChanged();
                }
            }
        }
        private global::System.Decimal _Amount_Disbursed;
        partial void OnAmount_DisbursedChanging(global::System.Decimal value);
        partial void OnAmount_DisbursedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Disbursed_By
        {
            get
            {
                return _Disbursed_By;
            }
            set
            {
                OnDisbursed_ByChanging(value);
                ReportPropertyChanging("Disbursed_By");
                _Disbursed_By = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Disbursed_By");
                OnDisbursed_ByChanged();
            }
        }
        private global::System.String _Disbursed_By;
        partial void OnDisbursed_ByChanging(global::System.String value);
        partial void OnDisbursed_ByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementTypeId
        {
            get
            {
                return _DisbursementTypeId;
            }
            set
            {
                if (_DisbursementTypeId != value)
                {
                    OnDisbursementTypeIdChanging(value);
                    ReportPropertyChanging("DisbursementTypeId");
                    _DisbursementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementTypeId");
                    OnDisbursementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementTypeId;
        partial void OnDisbursementTypeIdChanging(global::System.Int32 value);
        partial void OnDisbursementTypeIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="ReleaseStatement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReleaseStatement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReleaseStatement object.
        /// </summary>
        /// <param name="releaseStatementId">Initial value of the ReleaseStatementId property.</param>
        /// <param name="financialAccountId">Initial value of the FinancialAccountId property.</param>
        /// <param name="paymentId">Initial value of the PaymentId property.</param>
        /// <param name="totalLoanBalance">Initial value of the TotalLoanBalance property.</param>
        public static ReleaseStatement CreateReleaseStatement(global::System.Int32 releaseStatementId, global::System.Int32 financialAccountId, global::System.Int32 paymentId, global::System.Decimal totalLoanBalance)
        {
            ReleaseStatement releaseStatement = new ReleaseStatement();
            releaseStatement.ReleaseStatementId = releaseStatementId;
            releaseStatement.FinancialAccountId = financialAccountId;
            releaseStatement.PaymentId = paymentId;
            releaseStatement.TotalLoanBalance = totalLoanBalance;
            return releaseStatement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseStatementId
        {
            get
            {
                return _ReleaseStatementId;
            }
            set
            {
                if (_ReleaseStatementId != value)
                {
                    OnReleaseStatementIdChanging(value);
                    ReportPropertyChanging("ReleaseStatementId");
                    _ReleaseStatementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReleaseStatementId");
                    OnReleaseStatementIdChanged();
                }
            }
        }
        private global::System.Int32 _ReleaseStatementId;
        partial void OnReleaseStatementIdChanging(global::System.Int32 value);
        partial void OnReleaseStatementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinancialAccountId
        {
            get
            {
                return _FinancialAccountId;
            }
            set
            {
                OnFinancialAccountIdChanging(value);
                ReportPropertyChanging("FinancialAccountId");
                _FinancialAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinancialAccountId");
                OnFinancialAccountIdChanged();
            }
        }
        private global::System.Int32 _FinancialAccountId;
        partial void OnFinancialAccountIdChanging(global::System.Int32 value);
        partial void OnFinancialAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalLoanBalance
        {
            get
            {
                return _TotalLoanBalance;
            }
            set
            {
                OnTotalLoanBalanceChanging(value);
                ReportPropertyChanging("TotalLoanBalance");
                _TotalLoanBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalLoanBalance");
                OnTotalLoanBalanceChanged();
            }
        }
        private global::System.Decimal _TotalLoanBalance;
        partial void OnTotalLoanBalanceChanging(global::System.Decimal value);
        partial void OnTotalLoanBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RELEASES_REFERENCE_LOANACCO", "LoanAccount")]
        public LoanAccount LoanAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_RELEASES_REFERENCE_LOANACCO", "LoanAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_RELEASES_REFERENCE_LOANACCO", "LoanAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanAccount> LoanAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanAccount>("FinancialModel.FK_RELEASES_REFERENCE_LOANACCO", "LoanAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanAccount>("FinancialModel.FK_RELEASES_REFERENCE_LOANACCO", "LoanAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_RELEASES_REFERENCE_LOANDISB", "LoanDisbursement")]
        public LoanDisbursement LoanDisbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursement>("FinancialModel.FK_RELEASES_REFERENCE_LOANDISB", "LoanDisbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursement>("FinancialModel.FK_RELEASES_REFERENCE_LOANDISB", "LoanDisbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanDisbursement> LoanDisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanDisbursement>("FinancialModel.FK_RELEASES_REFERENCE_LOANDISB", "LoanDisbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanDisbursement>("FinancialModel.FK_RELEASES_REFERENCE_LOANDISB", "LoanDisbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="RequiredDocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequiredDocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequiredDocumentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RequiredDocumentType CreateRequiredDocumentType(global::System.Int32 id, global::System.String name)
        {
            RequiredDocumentType requiredDocumentType = new RequiredDocumentType();
            requiredDocumentType.Id = id;
            requiredDocumentType.Name = name;
            return requiredDocumentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PRODUCTR_REFERENCE_REQUIRED", "ProductRequiredDocument")]
        public EntityCollection<ProductRequiredDocument> ProductRequiredDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductRequiredDocument>("FinancialModel.FK_PRODUCTR_REFERENCE_REQUIRED", "ProductRequiredDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductRequiredDocument>("FinancialModel.FK_PRODUCTR_REFERENCE_REQUIRED", "ProductRequiredDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="RoleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RoleType CreateRoleType(global::System.Int32 id, global::System.String name)
        {
            RoleType roleType = new RoleType();
            roleType.Id = id;
            roleType.Name = name;
            return roleType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentRoleTypeId
        {
            get
            {
                return _ParentRoleTypeId;
            }
            set
            {
                OnParentRoleTypeIdChanging(value);
                ReportPropertyChanging("ParentRoleTypeId");
                _ParentRoleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentRoleTypeId");
                OnParentRoleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentRoleTypeId;
        partial void OnParentRoleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentRoleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PARTYROL_REFERENCE_ROLETYPE", "PartyRoleType")]
        public PartyRoleType PartyRoleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "PartyRoleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "PartyRoleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRoleType> PartyRoleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "PartyRoleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRoleType>("FinancialModel.FK_PARTYROL_REFERENCE_ROLETYPE", "PartyRoleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType1")]
        public EntityCollection<RoleType> RoleType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleType>("FinancialModel.FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleType>("FinancialModel.FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType")]
        public RoleType RoleType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleType>("FinancialModel.FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleType>("FinancialModel.FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoleType> RoleType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleType>("FinancialModel.FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoleType>("FinancialModel.FK_ROLETYPE_REFERENCE_ROLETYPE", "RoleType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SalaryReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalaryReceipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalaryReceipt object.
        /// </summary>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="isApplied">Initial value of the IsApplied property.</param>
        public static SalaryReceipt CreateSalaryReceipt(global::System.Int32 receiptId, global::System.Boolean isApplied)
        {
            SalaryReceipt salaryReceipt = new SalaryReceipt();
            salaryReceipt.ReceiptId = receiptId;
            salaryReceipt.IsApplied = isApplied;
            return salaryReceipt;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                if (_ReceiptId != value)
                {
                    OnReceiptIdChanging(value);
                    ReportPropertyChanging("ReceiptId");
                    _ReceiptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceiptId");
                    OnReceiptIdChanged();
                }
            }
        }
        private global::System.Int32 _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Int32 value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApplied
        {
            get
            {
                return _IsApplied;
            }
            set
            {
                OnIsAppliedChanging(value);
                ReportPropertyChanging("IsApplied");
                _IsApplied = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApplied");
                OnIsAppliedChanged();
            }
        }
        private global::System.Boolean _IsApplied;
        partial void OnIsAppliedChanging(global::System.Boolean value);
        partial void OnIsAppliedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SalaryReceipt_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_SalaryReceipt_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_SalaryReceipt_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("FinancialModel.FK_SalaryReceipt_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("FinancialModel.FK_SalaryReceipt_Receipt", "Receipt", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SourceOfIncome")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceOfIncome : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SourceOfIncome object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SourceOfIncome CreateSourceOfIncome(global::System.Int32 id, global::System.String name)
        {
            SourceOfIncome sourceOfIncome = new SourceOfIncome();
            sourceOfIncome.Id = id;
            sourceOfIncome.Name = name;
            return sourceOfIncome;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CUSTOMER_REFERENCE_SOURCEOF", "CustomerSourceOfIncome")]
        public EntityCollection<CustomerSourceOfIncome> CustomerSourceOfIncomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerSourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_SOURCEOF", "CustomerSourceOfIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerSourceOfIncome>("FinancialModel.FK_CUSTOMER_REFERENCE_SOURCEOF", "CustomerSourceOfIncome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SpecificPaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecificPaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecificPaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SpecificPaymentType CreateSpecificPaymentType(global::System.Int32 id)
        {
            SpecificPaymentType specificPaymentType = new SpecificPaymentType();
            specificPaymentType.Id = id;
            return specificPaymentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Payment_SpecificPaymentType", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("FinancialModel.FK_Payment_SpecificPaymentType", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("FinancialModel.FK_Payment_SpecificPaymentType", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SpecimenSignature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecimenSignature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecimenSignature object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="dateUploaded">Initial value of the DateUploaded property.</param>
        /// <param name="imageFilename">Initial value of the ImageFilename property.</param>
        public static SpecimenSignature CreateSpecimenSignature(global::System.Int32 id, global::System.Int32 partyId, global::System.DateTime dateUploaded, global::System.String imageFilename)
        {
            SpecimenSignature specimenSignature = new SpecimenSignature();
            specimenSignature.Id = id;
            specimenSignature.PartyId = partyId;
            specimenSignature.DateUploaded = dateUploaded;
            specimenSignature.ImageFilename = imageFilename;
            return specimenSignature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateUploaded
        {
            get
            {
                return _DateUploaded;
            }
            set
            {
                OnDateUploadedChanging(value);
                ReportPropertyChanging("DateUploaded");
                _DateUploaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUploaded");
                OnDateUploadedChanged();
            }
        }
        private global::System.DateTime _DateUploaded;
        partial void OnDateUploadedChanging(global::System.DateTime value);
        partial void OnDateUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageFilename
        {
            get
            {
                return _ImageFilename;
            }
            set
            {
                OnImageFilenameChanging(value);
                ReportPropertyChanging("ImageFilename");
                _ImageFilename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageFilename");
                OnImageFilenameChanged();
            }
        }
        private global::System.String _ImageFilename;
        partial void OnImageFilenameChanging(global::System.String value);
        partial void OnImageFilenameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SPECIMEN_REFERENCE_PERSON", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_SPECIMEN_REFERENCE_PERSON", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_SPECIMEN_REFERENCE_PERSON", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_SPECIMEN_REFERENCE_PERSON", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_SPECIMEN_REFERENCE_PERSON", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SubmittedDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittedDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittedDocument object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productRequiredDocumentId">Initial value of the ProductRequiredDocumentId property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="dateSubmitted">Initial value of the DateSubmitted property.</param>
        public static SubmittedDocument CreateSubmittedDocument(global::System.Int32 id, global::System.Int32 productRequiredDocumentId, global::System.Int32 applicationId, global::System.DateTime dateSubmitted)
        {
            SubmittedDocument submittedDocument = new SubmittedDocument();
            submittedDocument.Id = id;
            submittedDocument.ProductRequiredDocumentId = productRequiredDocumentId;
            submittedDocument.ApplicationId = applicationId;
            submittedDocument.DateSubmitted = dateSubmitted;
            return submittedDocument;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductRequiredDocumentId
        {
            get
            {
                return _ProductRequiredDocumentId;
            }
            set
            {
                OnProductRequiredDocumentIdChanging(value);
                ReportPropertyChanging("ProductRequiredDocumentId");
                _ProductRequiredDocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductRequiredDocumentId");
                OnProductRequiredDocumentIdChanged();
            }
        }
        private global::System.Int32 _ProductRequiredDocumentId;
        partial void OnProductRequiredDocumentIdChanging(global::System.Int32 value);
        partial void OnProductRequiredDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateSubmitted
        {
            get
            {
                return _DateSubmitted;
            }
            set
            {
                OnDateSubmittedChanging(value);
                ReportPropertyChanging("DateSubmitted");
                _DateSubmitted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSubmitted");
                OnDateSubmittedChanged();
            }
        }
        private global::System.DateTime _DateSubmitted;
        partial void OnDateSubmittedChanging(global::System.DateTime value);
        partial void OnDateSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_DOCUMENT_REFERENCE_SUBMITTE", "DocumentPage")]
        public EntityCollection<DocumentPage> DocumentPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentPage>("FinancialModel.FK_DOCUMENT_REFERENCE_SUBMITTE", "DocumentPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentPage>("FinancialModel.FK_DOCUMENT_REFERENCE_SUBMITTE", "DocumentPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_LOANAPPL", "LoanApplication")]
        public LoanApplication LoanApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_SUBMITTE_REFERENCE_LOANAPPL", "LoanApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_SUBMITTE_REFERENCE_LOANAPPL", "LoanApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanApplication> LoanApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanApplication>("FinancialModel.FK_SUBMITTE_REFERENCE_LOANAPPL", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanApplication>("FinancialModel.FK_SUBMITTE_REFERENCE_LOANAPPL", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_PRODUCTR", "ProductRequiredDocument")]
        public ProductRequiredDocument ProductRequiredDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductRequiredDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_PRODUCTR", "ProductRequiredDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductRequiredDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_PRODUCTR", "ProductRequiredDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductRequiredDocument> ProductRequiredDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductRequiredDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_PRODUCTR", "ProductRequiredDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductRequiredDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_PRODUCTR", "ProductRequiredDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocumentStatus")]
        public EntityCollection<SubmittedDocumentStatu> SubmittedDocumentStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedDocumentStatu>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocumentStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedDocumentStatu>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocumentStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SubmittedDocumentStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittedDocumentStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittedDocumentStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="submittedDocumentId">Initial value of the SubmittedDocumentId property.</param>
        /// <param name="transitionDateTime">Initial value of the TransitionDateTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static SubmittedDocumentStatu CreateSubmittedDocumentStatu(global::System.Int32 id, global::System.Int32 statusTypeId, global::System.Int32 submittedDocumentId, global::System.DateTime transitionDateTime, global::System.Boolean isActive)
        {
            SubmittedDocumentStatu submittedDocumentStatu = new SubmittedDocumentStatu();
            submittedDocumentStatu.Id = id;
            submittedDocumentStatu.StatusTypeId = statusTypeId;
            submittedDocumentStatu.SubmittedDocumentId = submittedDocumentId;
            submittedDocumentStatu.TransitionDateTime = transitionDateTime;
            submittedDocumentStatu.IsActive = isActive;
            return submittedDocumentStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubmittedDocumentId
        {
            get
            {
                return _SubmittedDocumentId;
            }
            set
            {
                OnSubmittedDocumentIdChanging(value);
                ReportPropertyChanging("SubmittedDocumentId");
                _SubmittedDocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmittedDocumentId");
                OnSubmittedDocumentIdChanged();
            }
        }
        private global::System.Int32 _SubmittedDocumentId;
        partial void OnSubmittedDocumentIdChanging(global::System.Int32 value);
        partial void OnSubmittedDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDateTime
        {
            get
            {
                return _TransitionDateTime;
            }
            set
            {
                OnTransitionDateTimeChanging(value);
                ReportPropertyChanging("TransitionDateTime");
                _TransitionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransitionDateTime");
                OnTransitionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransitionDateTime;
        partial void OnTransitionDateTimeChanging(global::System.DateTime value);
        partial void OnTransitionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocument")]
        public SubmittedDocument SubmittedDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubmittedDocument> SubmittedDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubmittedDocument>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE", "SubmittedDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatusType")]
        public SubmittedDocumentStatusType SubmittedDocumentStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocumentStatusType>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocumentStatusType>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubmittedDocumentStatusType> SubmittedDocumentStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedDocumentStatusType>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubmittedDocumentStatusType>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SubmittedDocumentStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittedDocumentStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittedDocumentStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SubmittedDocumentStatusType CreateSubmittedDocumentStatusType(global::System.Int32 id, global::System.String name)
        {
            SubmittedDocumentStatusType submittedDocumentStatusType = new SubmittedDocumentStatusType();
            submittedDocumentStatusType.Id = id;
            submittedDocumentStatusType.Name = name;
            return submittedDocumentStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatus")]
        public EntityCollection<SubmittedDocumentStatu> SubmittedDocumentStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedDocumentStatu>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedDocumentStatu>("FinancialModel.FK_SUBMITTE_REFERENCE_SUBMITTE2", "SubmittedDocumentStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SubmittedDocumentView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittedDocumentView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittedDocumentView object.
        /// </summary>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static SubmittedDocumentView CreateSubmittedDocumentView(global::System.String documentName, global::System.DateTime date, global::System.String status)
        {
            SubmittedDocumentView submittedDocumentView = new SubmittedDocumentView();
            submittedDocumentView.DocumentName = documentName;
            submittedDocumentView.Date = date;
            submittedDocumentView.Status = status;
            return submittedDocumentView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                if (_DocumentName != value)
                {
                    OnDocumentNameChanging(value);
                    ReportPropertyChanging("DocumentName");
                    _DocumentName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DocumentName");
                    OnDocumentNameChanged();
                }
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SystemSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemSetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="systemSettingTypeId">Initial value of the SystemSettingTypeId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static SystemSetting CreateSystemSetting(global::System.Int32 id, global::System.Int32 systemSettingTypeId, global::System.String value, global::System.DateTime effectiveDate)
        {
            SystemSetting systemSetting = new SystemSetting();
            systemSetting.Id = id;
            systemSetting.SystemSettingTypeId = systemSettingTypeId;
            systemSetting.Value = value;
            systemSetting.EffectiveDate = effectiveDate;
            return systemSetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemSettingTypeId
        {
            get
            {
                return _SystemSettingTypeId;
            }
            set
            {
                OnSystemSettingTypeIdChanging(value);
                ReportPropertyChanging("SystemSettingTypeId");
                _SystemSettingTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemSettingTypeId");
                OnSystemSettingTypeIdChanged();
            }
        }
        private global::System.Int32 _SystemSettingTypeId;
        partial void OnSystemSettingTypeIdChanging(global::System.Int32 value);
        partial void OnSystemSettingTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UomId
        {
            get
            {
                return _UomId;
            }
            set
            {
                OnUomIdChanging(value);
                ReportPropertyChanging("UomId");
                _UomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UomId");
                OnUomIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UomId;
        partial void OnUomIdChanging(Nullable<global::System.Int32> value);
        partial void OnUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSettingType")]
        public SystemSettingType SystemSettingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemSettingType>("FinancialModel.FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSettingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemSettingType>("FinancialModel.FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSettingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemSettingType> SystemSettingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemSettingType>("FinancialModel.FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSettingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemSettingType>("FinancialModel.FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSettingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SYSTEMSE_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_SYSTEMSE_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_SYSTEMSE_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_SYSTEMSE_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_SYSTEMSE_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="SystemSettingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemSettingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemSettingType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SystemSettingType CreateSystemSettingType(global::System.Int32 id, global::System.String name)
        {
            SystemSettingType systemSettingType = new SystemSettingType();
            systemSettingType.Id = id;
            systemSettingType.Name = name;
            return systemSettingType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSetting")]
        public EntityCollection<SystemSetting> SystemSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemSetting>("FinancialModel.FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemSetting>("FinancialModel.FK_SYSTEMSE_REFERENCE_SYSTEMSE", "SystemSetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Taxpayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Taxpayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Taxpayer object.
        /// </summary>
        /// <param name="partyRoleId">Initial value of the PartyRoleId property.</param>
        public static Taxpayer CreateTaxpayer(global::System.Int32 partyRoleId)
        {
            Taxpayer taxpayer = new Taxpayer();
            taxpayer.PartyRoleId = partyRoleId;
            return taxpayer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyRoleId
        {
            get
            {
                return _PartyRoleId;
            }
            set
            {
                if (_PartyRoleId != value)
                {
                    OnPartyRoleIdChanging(value);
                    ReportPropertyChanging("PartyRoleId");
                    _PartyRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyRoleId");
                    OnPartyRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyRoleId;
        partial void OnPartyRoleIdChanging(global::System.Int32 value);
        partial void OnPartyRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tin
        {
            get
            {
                return _Tin;
            }
            set
            {
                OnTinChanging(value);
                ReportPropertyChanging("Tin");
                _Tin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tin");
                OnTinChanged();
            }
        }
        private global::System.String _Tin;
        partial void OnTinChanging(global::System.String value);
        partial void OnTinChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_CTC_REFERENCE_TAXPAYER", "Ctc")]
        public EntityCollection<Ctc> Ctcs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ctc>("FinancialModel.FK_CTC_REFERENCE_TAXPAYER", "Ctc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ctc>("FinancialModel.FK_CTC_REFERENCE_TAXPAYER", "Ctc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TAXPAYER_REFERENCE_PARTYROL", "PartyRole")]
        public PartyRole PartyRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "PartyRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "PartyRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartyRole> PartyRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartyRole>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "PartyRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartyRole>("FinancialModel.FK_TAXPAYER_REFERENCE_PARTYROL", "PartyRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="TelecommunicationsNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TelecommunicationsNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TelecommunicationsNumber object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        public static TelecommunicationsNumber CreateTelecommunicationsNumber(global::System.Int32 addressId, global::System.Boolean isPrimary)
        {
            TelecommunicationsNumber telecommunicationsNumber = new TelecommunicationsNumber();
            telecommunicationsNumber.AddressId = addressId;
            telecommunicationsNumber.IsPrimary = isPrimary;
            return telecommunicationsNumber;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeId;
        partial void OnTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaCode
        {
            get
            {
                return _AreaCode;
            }
            set
            {
                OnAreaCodeChanging(value);
                ReportPropertyChanging("AreaCode");
                _AreaCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaCode");
                OnAreaCodeChanged();
            }
        }
        private global::System.String _AreaCode;
        partial void OnAreaCodeChanging(global::System.String value);
        partial void OnAreaCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TELECOMM_REFERENCE_ADDRESS", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("FinancialModel.FK_TELECOMM_REFERENCE_ADDRESS", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumberType")]
        public TelecommunicationsNumberType TelecommunicationsNumberType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelecommunicationsNumberType>("FinancialModel.FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumberType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelecommunicationsNumberType>("FinancialModel.FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumberType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TelecommunicationsNumberType> TelecommunicationsNumberTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TelecommunicationsNumberType>("FinancialModel.FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumberType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TelecommunicationsNumberType>("FinancialModel.FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumberType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="TelecommunicationsNumberType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TelecommunicationsNumberType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TelecommunicationsNumberType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TelecommunicationsNumberType CreateTelecommunicationsNumberType(global::System.Int32 id, global::System.String name)
        {
            TelecommunicationsNumberType telecommunicationsNumberType = new TelecommunicationsNumberType();
            telecommunicationsNumberType.Id = id;
            telecommunicationsNumberType.Name = name;
            return telecommunicationsNumberType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumber")]
        public EntityCollection<TelecommunicationsNumber> TelecommunicationsNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TelecommunicationsNumber>("FinancialModel.FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TelecommunicationsNumber>("FinancialModel.FK_TELECOMM_REFERENCE_TELECOMM", "TelecommunicationsNumber", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="TimeUnitConversion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeUnitConversion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeUnitConversion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sourceUomId">Initial value of the SourceUomId property.</param>
        /// <param name="targetUomId">Initial value of the TargetUomId property.</param>
        /// <param name="multiplier">Initial value of the Multiplier property.</param>
        public static TimeUnitConversion CreateTimeUnitConversion(global::System.Int32 id, global::System.Int32 sourceUomId, global::System.Int32 targetUomId, global::System.Decimal multiplier)
        {
            TimeUnitConversion timeUnitConversion = new TimeUnitConversion();
            timeUnitConversion.Id = id;
            timeUnitConversion.SourceUomId = sourceUomId;
            timeUnitConversion.TargetUomId = targetUomId;
            timeUnitConversion.Multiplier = multiplier;
            return timeUnitConversion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceUomId
        {
            get
            {
                return _SourceUomId;
            }
            set
            {
                OnSourceUomIdChanging(value);
                ReportPropertyChanging("SourceUomId");
                _SourceUomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceUomId");
                OnSourceUomIdChanged();
            }
        }
        private global::System.Int32 _SourceUomId;
        partial void OnSourceUomIdChanging(global::System.Int32 value);
        partial void OnSourceUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TargetUomId
        {
            get
            {
                return _TargetUomId;
            }
            set
            {
                OnTargetUomIdChanging(value);
                ReportPropertyChanging("TargetUomId");
                _TargetUomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetUomId");
                OnTargetUomIdChanged();
            }
        }
        private global::System.Int32 _TargetUomId;
        partial void OnTargetUomIdChanging(global::System.Int32 value);
        partial void OnTargetUomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private global::System.Decimal _Multiplier;
        partial void OnMultiplierChanging(global::System.Decimal value);
        partial void OnMultiplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Offset
        {
            get
            {
                return _Offset;
            }
            set
            {
                OnOffsetChanging(value);
                ReportPropertyChanging("Offset");
                _Offset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Offset");
                OnOffsetChanged();
            }
        }
        private Nullable<global::System.Decimal> _Offset;
        partial void OnOffsetChanging(Nullable<global::System.Decimal> value);
        partial void OnOffsetChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TIME_UNI_REFERENCE_UNIT_OF_2", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIME_UNI_REFERENCE_UNIT_OF_2", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIME_UNI_REFERENCE_UNIT_OF_2", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIME_UNI_REFERENCE_UNIT_OF_2", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIME_UNI_REFERENCE_UNIT_OF_2", "UnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TIMEUNIT_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public UnitOfMeasure UnitOfMeasure1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIMEUNIT_REFERENCE_UNITOFME", "UnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIMEUNIT_REFERENCE_UNITOFME", "UnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasure> UnitOfMeasure1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIMEUNIT_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasure>("FinancialModel.FK_TIMEUNIT_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="TransactionTaskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionTaskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionTaskType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TransactionTaskType CreateTransactionTaskType(global::System.Int32 id, global::System.String name)
        {
            TransactionTaskType transactionTaskType = new TransactionTaskType();
            transactionTaskType.Id = id;
            transactionTaskType.Name = name;
            return transactionTaskType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_TRANSACT", "FinAcctTransTask")]
        public EntityCollection<FinAcctTransTask> FinAcctTransTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTransTask>("FinancialModel.FK_FINACCTT_REFERENCE_TRANSACT", "FinAcctTransTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTransTask>("FinancialModel.FK_FINACCTT_REFERENCE_TRANSACT", "FinAcctTransTask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UnitOfMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitOfMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitOfMeasure object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uomTypeId">Initial value of the UomTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UnitOfMeasure CreateUnitOfMeasure(global::System.Int32 id, global::System.Int32 uomTypeId, global::System.String name)
        {
            UnitOfMeasure unitOfMeasure = new UnitOfMeasure();
            unitOfMeasure.Id = id;
            unitOfMeasure.UomTypeId = uomTypeId;
            unitOfMeasure.Name = name;
            return unitOfMeasure;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UomTypeId
        {
            get
            {
                return _UomTypeId;
            }
            set
            {
                OnUomTypeIdChanging(value);
                ReportPropertyChanging("UomTypeId");
                _UomTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UomTypeId");
                OnUomTypeIdChanged();
            }
        }
        private global::System.Int32 _UomTypeId;
        partial void OnUomTypeIdChanging(global::System.Int32 value);
        partial void OnUomTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_FINACCTT_REFERENCE_UNITOFME", "FinAcctTransTask")]
        public EntityCollection<FinAcctTransTask> FinAcctTransTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinAcctTransTask>("FinancialModel.FK_FINACCTT_REFERENCE_UNITOFME", "FinAcctTransTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinAcctTransTask>("FinancialModel.FK_FINACCTT_REFERENCE_UNITOFME", "FinAcctTransTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LAND_REFERENCE_UNITOFME", "Land")]
        public EntityCollection<Land> Lands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Land>("FinancialModel.FK_LAND_REFERENCE_UNITOFME", "Land");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Land>("FinancialModel.FK_LAND_REFERENCE_UNITOFME", "Land", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOAN_APP_REFERENCE_UNIT_OF_2", "LoanApplication")]
        public EntityCollection<LoanApplication> LoanApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_UNIT_OF_2", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplication>("FinancialModel.FK_LOAN_APP_REFERENCE_UNIT_OF_2", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANAPPL_REFERENCE_UNITOFME", "LoanApplication")]
        public EntityCollection<LoanApplication> LoanApplications1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_UNITOFME", "LoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanApplication>("FinancialModel.FK_LOANAPPL_REFERENCE_UNITOFME", "LoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_LOANTERM_REFERENCE_UNITOFME", "LoanTerm")]
        public EntityCollection<LoanTerm> LoanTerms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoanTerm>("FinancialModel.FK_LOANTERM_REFERENCE_UNITOFME", "LoanTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoanTerm>("FinancialModel.FK_LOANTERM_REFERENCE_UNITOFME", "LoanTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_PETTYCAS_REFERENCE_UNITOFME", "PettyCashLoanApplication")]
        public EntityCollection<PettyCashLoanApplication> PettyCashLoanApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PettyCashLoanApplication>("FinancialModel.FK_PETTYCAS_REFERENCE_UNITOFME", "PettyCashLoanApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PettyCashLoanApplication>("FinancialModel.FK_PETTYCAS_REFERENCE_UNITOFME", "PettyCashLoanApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_SYSTEMSE_REFERENCE_UNITOFME", "SystemSetting")]
        public EntityCollection<SystemSetting> SystemSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemSetting>("FinancialModel.FK_SYSTEMSE_REFERENCE_UNITOFME", "SystemSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemSetting>("FinancialModel.FK_SYSTEMSE_REFERENCE_UNITOFME", "SystemSetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TIME_UNI_REFERENCE_UNIT_OF_2", "TimeUnitConversion")]
        public EntityCollection<TimeUnitConversion> TimeUnitConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeUnitConversion>("FinancialModel.FK_TIME_UNI_REFERENCE_UNIT_OF_2", "TimeUnitConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeUnitConversion>("FinancialModel.FK_TIME_UNI_REFERENCE_UNIT_OF_2", "TimeUnitConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_TIMEUNIT_REFERENCE_UNITOFME", "TimeUnitConversion")]
        public EntityCollection<TimeUnitConversion> TimeUnitConversions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeUnitConversion>("FinancialModel.FK_TIMEUNIT_REFERENCE_UNITOFME", "TimeUnitConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeUnitConversion>("FinancialModel.FK_TIMEUNIT_REFERENCE_UNITOFME", "TimeUnitConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasureType")]
        public UnitOfMeasureType UnitOfMeasureType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasureType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasureType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasureType> UnitOfMeasureTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasureType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasureType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UnitOfMeasureType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitOfMeasureType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitOfMeasureType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UnitOfMeasureType CreateUnitOfMeasureType(global::System.Int32 id, global::System.String name)
        {
            UnitOfMeasureType unitOfMeasureType = new UnitOfMeasureType();
            unitOfMeasureType.Id = id;
            unitOfMeasureType.Name = name;
            return unitOfMeasureType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentUomTypeId
        {
            get
            {
                return _ParentUomTypeId;
            }
            set
            {
                OnParentUomTypeIdChanging(value);
                ReportPropertyChanging("ParentUomTypeId");
                _ParentUomTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentUomTypeId");
                OnParentUomTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentUomTypeId;
        partial void OnParentUomTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentUomTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasure")]
        public EntityCollection<UnitOfMeasure> UnitOfMeasures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnitOfMeasure>("FinancialModel.FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnitOfMeasure>("FinancialModel.FK_UNITOFME_REFERENCE_UNITOFME", "UnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType1")]
        public EntityCollection<UnitOfMeasureType> UnitOfMeasureType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnitOfMeasureType>("FinancialModel.FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnitOfMeasureType>("FinancialModel.FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType")]
        public UnitOfMeasureType UnitOfMeasureType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasureType> UnitOfMeasureType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasureType>("FinancialModel.FK_UNIT_OF__REFERENCE_UNIT_OF_2", "UnitOfMeasureType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userAccountTypeId">Initial value of the UserAccountTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="securityQuestion">Initial value of the SecurityQuestion property.</param>
        /// <param name="securityAnswer">Initial value of the SecurityAnswer property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static UserAccount CreateUserAccount(global::System.Int32 id, global::System.Int32 userAccountTypeId, global::System.DateTime effectiveDate, global::System.String username, global::System.String password, global::System.String securityQuestion, global::System.String securityAnswer, global::System.DateTime dateCreated)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.Id = id;
            userAccount.UserAccountTypeId = userAccountTypeId;
            userAccount.EffectiveDate = effectiveDate;
            userAccount.Username = username;
            userAccount.Password = password;
            userAccount.SecurityQuestion = securityQuestion;
            userAccount.SecurityAnswer = securityAnswer;
            userAccount.DateCreated = dateCreated;
            return userAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountTypeId
        {
            get
            {
                return _UserAccountTypeId;
            }
            set
            {
                OnUserAccountTypeIdChanging(value);
                ReportPropertyChanging("UserAccountTypeId");
                _UserAccountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountTypeId");
                OnUserAccountTypeIdChanged();
            }
        }
        private global::System.Int32 _UserAccountTypeId;
        partial void OnUserAccountTypeIdChanging(global::System.Int32 value);
        partial void OnUserAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PartyId;
        partial void OnPartyIdChanging(Nullable<global::System.Int32> value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuestion
        {
            get
            {
                return _SecurityQuestion;
            }
            set
            {
                OnSecurityQuestionChanging(value);
                ReportPropertyChanging("SecurityQuestion");
                _SecurityQuestion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityQuestion");
                OnSecurityQuestionChanged();
            }
        }
        private global::System.String _SecurityQuestion;
        partial void OnSecurityQuestionChanging(global::System.String value);
        partial void OnSecurityQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer
        {
            get
            {
                return _SecurityAnswer;
            }
            set
            {
                OnSecurityAnswerChanging(value);
                ReportPropertyChanging("SecurityAnswer");
                _SecurityAnswer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityAnswer");
                OnSecurityAnswerChanged();
            }
        }
        private global::System.String _SecurityAnswer;
        partial void OnSecurityAnswerChanging(global::System.String value);
        partial void OnSecurityAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePage
        {
            get
            {
                return _HomePage;
            }
            set
            {
                OnHomePageChanging(value);
                ReportPropertyChanging("HomePage");
                _HomePage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePage");
                OnHomePageChanged();
            }
        }
        private global::System.String _HomePage;
        partial void OnHomePageChanging(global::System.String value);
        partial void OnHomePageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_USERACCO_REFERENCE_PERSON", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_USERACCO_REFERENCE_PERSON", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_USERACCO_REFERENCE_PERSON", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("FinancialModel.FK_USERACCO_REFERENCE_PERSON", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("FinancialModel.FK_USERACCO_REFERENCE_PERSON", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccountStatus")]
        public EntityCollection<UserAccountStatu> UserAccountStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccountStatu>("FinancialModel.FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccountStatu>("FinancialModel.FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccountStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_UserAccount_UserAccountType", "UserAccountType")]
        public UserAccountType UserAccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("FinancialModel.FK_UserAccount_UserAccountType", "UserAccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("FinancialModel.FK_UserAccount_UserAccountType", "UserAccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccountType> UserAccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("FinancialModel.FK_UserAccount_UserAccountType", "UserAccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccountType>("FinancialModel.FK_UserAccount_UserAccountType", "UserAccountType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UserAccountStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        public static UserAccountStatu CreateUserAccountStatu(global::System.Int32 id, global::System.Int32 userAccountId, global::System.Int32 statusTypeId, global::System.DateTime effectiveDate)
        {
            UserAccountStatu userAccountStatu = new UserAccountStatu();
            userAccountStatu.Id = id;
            userAccountStatu.UserAccountId = userAccountId;
            userAccountStatu.StatusTypeId = statusTypeId;
            userAccountStatu.EffectiveDate = effectiveDate;
            return userAccountStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                OnUserAccountIdChanging(value);
                ReportPropertyChanging("UserAccountId");
                _UserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountId");
                OnUserAccountIdChanged();
            }
        }
        private global::System.Int32 _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Int32 value);
        partial void OnUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("FinancialModel.FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("FinancialModel.FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("FinancialModel.FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("FinancialModel.FK_USER_ACC_REFERENCE_USER_ACC2", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatusType")]
        public UserAccountStatusType UserAccountStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountStatusType>("FinancialModel.FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountStatusType>("FinancialModel.FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccountStatusType> UserAccountStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountStatusType>("FinancialModel.FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccountStatusType>("FinancialModel.FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatusType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UserAccountStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountStatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserAccountStatusType CreateUserAccountStatusType(global::System.Int32 id, global::System.String name)
        {
            UserAccountStatusType userAccountStatusType = new UserAccountStatusType();
            userAccountStatusType.Id = id;
            userAccountStatusType.Name = name;
            return userAccountStatusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatus")]
        public EntityCollection<UserAccountStatu> UserAccountStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccountStatu>("FinancialModel.FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccountStatu>("FinancialModel.FK_USERACCO_REFERENCE_USERACCO", "UserAccountStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UserAccountsViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountsViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountsViewList object.
        /// </summary>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="userAccountStatus">Initial value of the UserAccountStatus property.</param>
        public static UserAccountsViewList CreateUserAccountsViewList(global::System.Int32 userAccountId, global::System.String userName, global::System.String userAccountStatus)
        {
            UserAccountsViewList userAccountsViewList = new UserAccountsViewList();
            userAccountsViewList.UserAccountId = userAccountId;
            userAccountsViewList.UserName = userName;
            userAccountsViewList.UserAccountStatus = userAccountStatus;
            return userAccountsViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                if (_UserAccountId != value)
                {
                    OnUserAccountIdChanging(value);
                    ReportPropertyChanging("UserAccountId");
                    _UserAccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAccountId");
                    OnUserAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Int32 value);
        partial void OnUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HiddenPartyId
        {
            get
            {
                return _HiddenPartyId;
            }
            set
            {
                OnHiddenPartyIdChanging(value);
                ReportPropertyChanging("HiddenPartyId");
                _HiddenPartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HiddenPartyId");
                OnHiddenPartyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HiddenPartyId;
        partial void OnHiddenPartyIdChanging(Nullable<global::System.Int32> value);
        partial void OnHiddenPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameOfUser
        {
            get
            {
                return _NameOfUser;
            }
            set
            {
                OnNameOfUserChanging(value);
                ReportPropertyChanging("NameOfUser");
                _NameOfUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameOfUser");
                OnNameOfUserChanged();
            }
        }
        private global::System.String _NameOfUser;
        partial void OnNameOfUserChanging(global::System.String value);
        partial void OnNameOfUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAccountStatus
        {
            get
            {
                return _UserAccountStatus;
            }
            set
            {
                if (_UserAccountStatus != value)
                {
                    OnUserAccountStatusChanging(value);
                    ReportPropertyChanging("UserAccountStatus");
                    _UserAccountStatus = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserAccountStatus");
                    OnUserAccountStatusChanged();
                }
            }
        }
        private global::System.String _UserAccountStatus;
        partial void OnUserAccountStatusChanging(global::System.String value);
        partial void OnUserAccountStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UserAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserAccountType CreateUserAccountType(global::System.Int32 id, global::System.String name)
        {
            UserAccountType userAccountType = new UserAccountType();
            userAccountType.Id = id;
            userAccountType.Name = name;
            return userAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_UserAccount_UserAccountType", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("FinancialModel.FK_UserAccount_UserAccountType", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("FinancialModel.FK_UserAccount_UserAccountType", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="UsersViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersViewList object.
        /// </summary>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        public static UsersViewList CreateUsersViewList(global::System.Int32 partyId)
        {
            UsersViewList usersViewList = new UsersViewList();
            usersViewList.PartyId = partyId;
            return usersViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                if (_PartyId != value)
                {
                    OnPartyIdChanging(value);
                    ReportPropertyChanging("PartyId");
                    _PartyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyId");
                    OnPartyIdChanged();
                }
            }
        }
        private global::System.Int32 _PartyId;
        partial void OnPartyIdChanging(global::System.Int32 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="assetId">Initial value of the AssetId property.</param>
        /// <param name="vehicleTypeId">Initial value of the VehicleTypeId property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 assetId, global::System.Int32 vehicleTypeId, global::System.String brand, global::System.String model)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.AssetId = assetId;
            vehicle.VehicleTypeId = vehicleTypeId;
            vehicle.Brand = brand;
            vehicle.Model = model;
            return vehicle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetId
        {
            get
            {
                return _AssetId;
            }
            set
            {
                if (_AssetId != value)
                {
                    OnAssetIdChanging(value);
                    ReportPropertyChanging("AssetId");
                    _AssetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetId");
                    OnAssetIdChanged();
                }
            }
        }
        private global::System.Int32 _AssetId;
        partial void OnAssetIdChanging(global::System.Int32 value);
        partial void OnAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleTypeId
        {
            get
            {
                return _VehicleTypeId;
            }
            set
            {
                OnVehicleTypeIdChanging(value);
                ReportPropertyChanging("VehicleTypeId");
                _VehicleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleTypeId");
                OnVehicleTypeIdChanged();
            }
        }
        private global::System.Int32 _VehicleTypeId;
        partial void OnVehicleTypeIdChanging(global::System.Int32 value);
        partial void OnVehicleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Vehicle_Asset1", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_Vehicle_Asset1", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_Vehicle_Asset1", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("FinancialModel.FK_Vehicle_Asset1", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("FinancialModel.FK_Vehicle_Asset1", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Vehicle_VehicleType", "VehicleType")]
        public VehicleType VehicleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("FinancialModel.FK_Vehicle_VehicleType", "VehicleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("FinancialModel.FK_Vehicle_VehicleType", "VehicleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleType> VehicleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("FinancialModel.FK_Vehicle_VehicleType", "VehicleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleType>("FinancialModel.FK_Vehicle_VehicleType", "VehicleType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="VehicleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VehicleType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static VehicleType CreateVehicleType(global::System.Int32 id, global::System.String name)
        {
            VehicleType vehicleType = new VehicleType();
            vehicleType.Id = id;
            vehicleType.Name = name;
            return vehicleType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinancialModel", "FK_Vehicle_VehicleType", "Vehicle")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("FinancialModel.FK_Vehicle_VehicleType", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("FinancialModel.FK_Vehicle_VehicleType", "Vehicle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinancialModel", Name="VoucherViewList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoucherViewList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VoucherViewList object.
        /// </summary>
        /// <param name="voucherId">Initial value of the VoucherId property.</param>
        /// <param name="agreementId">Initial value of the AgreementId property.</param>
        /// <param name="loanProduct">Initial value of the LoanProduct property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="loanProductId">Initial value of the LoanProductId property.</param>
        /// <param name="type">Initial value of the type property.</param>
        public static VoucherViewList CreateVoucherViewList(global::System.Int32 voucherId, global::System.Int32 agreementId, global::System.String loanProduct, global::System.Int32 customerID, global::System.Int32 loanProductId, global::System.String type)
        {
            VoucherViewList voucherViewList = new VoucherViewList();
            voucherViewList.VoucherId = voucherId;
            voucherViewList.AgreementId = agreementId;
            voucherViewList.LoanProduct = loanProduct;
            voucherViewList.CustomerID = customerID;
            voucherViewList.LoanProductId = loanProductId;
            voucherViewList.type = type;
            return voucherViewList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoucherId
        {
            get
            {
                return _VoucherId;
            }
            set
            {
                if (_VoucherId != value)
                {
                    OnVoucherIdChanging(value);
                    ReportPropertyChanging("VoucherId");
                    _VoucherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VoucherId");
                    OnVoucherIdChanged();
                }
            }
        }
        private global::System.Int32 _VoucherId;
        partial void OnVoucherIdChanging(global::System.Int32 value);
        partial void OnVoucherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementId
        {
            get
            {
                return _AgreementId;
            }
            set
            {
                if (_AgreementId != value)
                {
                    OnAgreementIdChanging(value);
                    ReportPropertyChanging("AgreementId");
                    _AgreementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgreementId");
                    OnAgreementIdChanged();
                }
            }
        }
        private global::System.Int32 _AgreementId;
        partial void OnAgreementIdChanging(global::System.Int32 value);
        partial void OnAgreementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LoanAmount
        {
            get
            {
                return _LoanAmount;
            }
            set
            {
                OnLoanAmountChanging(value);
                ReportPropertyChanging("LoanAmount");
                _LoanAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanAmount");
                OnLoanAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LoanAmount;
        partial void OnLoanAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLoanAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoanProduct
        {
            get
            {
                return _LoanProduct;
            }
            set
            {
                if (_LoanProduct != value)
                {
                    OnLoanProductChanging(value);
                    ReportPropertyChanging("LoanProduct");
                    _LoanProduct = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoanProduct");
                    OnLoanProductChanged();
                }
            }
        }
        private global::System.String _LoanProduct;
        partial void OnLoanProductChanging(global::System.String value);
        partial void OnLoanProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanProductId
        {
            get
            {
                return _LoanProductId;
            }
            set
            {
                if (_LoanProductId != value)
                {
                    OnLoanProductIdChanging(value);
                    ReportPropertyChanging("LoanProductId");
                    _LoanProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoanProductId");
                    OnLoanProductIdChanged();
                }
            }
        }
        private global::System.Int32 _LoanProductId;
        partial void OnLoanProductIdChanging(global::System.Int32 value);
        partial void OnLoanProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                if (_type != value)
                {
                    OntypeChanging(value);
                    ReportPropertyChanging("type");
                    _type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("type");
                    OntypeChanged();
                }
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion
    
    }

    #endregion
    
}
